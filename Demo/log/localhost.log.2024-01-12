[10:11:48.624] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[10:14:06.836] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:06.859] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61789df4] was not registered for synchronization because synchronization is not active
[10:14:07.554] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1341410925, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:07.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[10:14:07.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[10:14:07.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:14:07.703] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61789df4]
[10:14:07.721] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:07.722] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b98c022] was not registered for synchronization because synchronization is not active
[10:14:07.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1062917228, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:07.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:14:07.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:14:07.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:14:07.798] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b98c022]
[10:14:07.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:07.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1870b86e] was not registered for synchronization because synchronization is not active
[10:14:07.804] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1751957154, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:07.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:14:07.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:14:07.815] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:14:07.816] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1870b86e]
[10:14:07.817] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:07.817] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731fe8e2] was not registered for synchronization because synchronization is not active
[10:14:07.829] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1659346212, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:07.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:14:07.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:14:07.970] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:14:07.970] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@731fe8e2]
[10:14:46.034] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:46.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f03c2d0] was not registered for synchronization because synchronization is not active
[10:14:46.037] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1668423584, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:46.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:14:46.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:14:46.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:14:46.043] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f03c2d0]
[10:14:46.044] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:46.044] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ae4f37] was not registered for synchronization because synchronization is not active
[10:14:46.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1619800988, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:46.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:14:46.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:14:46.055] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:14:46.056] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49ae4f37]
[10:14:46.056] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:14:46.056] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bc59f3] was not registered for synchronization because synchronization is not active
[10:14:46.060] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [561123434, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:14:46.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:14:46.072] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:14:46.108] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:14:46.109] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bc59f3]
[10:15:00.209] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:00.209] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c77b2ec] was not registered for synchronization because synchronization is not active
[10:15:00.211] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [487693885, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:00.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:15:00.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[10:15:00.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:15:00.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c77b2ec]
[10:15:00.218] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:00.218] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ac1360a] was not registered for synchronization because synchronization is not active
[10:15:00.219] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1220476292, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:00.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:15:00.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[10:15:00.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:15:00.244] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ac1360a]
[10:15:15.031] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.031] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69efb34a] was not registered for synchronization because synchronization is not active
[10:15:15.033] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [438352735, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND pw = ? 
[10:15:15.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String), 3c5780ab98debbd2dcc7d641801f5468349404250c8b0b3060c0ec0fe5e533ef9462583e450bff8929165871fe7a26609d1ad655e794c71050557a8967abba32(String)
[10:15:15.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:15:15.040] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69efb34a]
[10:15:15.044] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37827988] was not registered for synchronization because synchronization is not active
[10:15:15.047] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1688866584, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:15:15.048] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:15:15.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:15:15.051] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37827988]
[10:15:15.052] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.052] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3da9585c] was not registered for synchronization because synchronization is not active
[10:15:15.053] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1715927205, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:15:15.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:15:15.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:15:15.053] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3da9585c]
[10:15:15.053] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.053] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42762ab5] was not registered for synchronization because synchronization is not active
[10:15:15.069] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1007745630, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:15:15.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:15:15.104] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:15:15.104] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42762ab5]
[10:15:15.347] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.347] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa3fd6f] was not registered for synchronization because synchronization is not active
[10:15:15.349] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [433743177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:15:15.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:15:15.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:15:15.354] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa3fd6f]
[10:15:15.354] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.354] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5695091a] was not registered for synchronization because synchronization is not active
[10:15:15.356] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1130719803, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:15:15.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:15:15.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:15:15.365] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5695091a]
[10:15:15.365] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:15:15.366] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49510580] was not registered for synchronization because synchronization is not active
[10:15:15.369] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [482105228, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:15:15.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:15:15.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:15:15.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:15:15.409] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49510580]
[10:16:58.570] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:58.570] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d98a9a] was not registered for synchronization because synchronization is not active
[10:16:58.572] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1910800545, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:58.573] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:16:58.574] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:16:58.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:16:58.577] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d98a9a]
[10:16:58.577] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:58.577] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@92f03a5] was not registered for synchronization because synchronization is not active
[10:16:58.581] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1897728449, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:58.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:16:58.582] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:16:58.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:16:58.590] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@92f03a5]
[10:16:58.590] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:58.590] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a349bb0] was not registered for synchronization because synchronization is not active
[10:16:58.590] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [946077177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:58.590] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:16:58.590] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:16:58.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:16:58.624] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a349bb0]
[10:17:18.038] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:17:18.039] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dafc9e0] was not registered for synchronization because synchronization is not active
[10:17:18.040] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1037012322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:17:18.040] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:17:18.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:17:18.044] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:17:18.045] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dafc9e0]
[10:17:45.371] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:17:45.371] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110d0d86] was not registered for synchronization because synchronization is not active
[10:17:45.373] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1178100717, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:17:45.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:17:45.374] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:17:45.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:17:45.379] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110d0d86]
[10:18:38.246] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:18:38.246] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2daddabd] was not registered for synchronization because synchronization is not active
[10:18:38.247] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [370868735, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:18:38.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:18:38.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:18:38.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:18:38.252] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2daddabd]
[10:18:57.656] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:18:57.657] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@346e79f6] was not registered for synchronization because synchronization is not active
[10:18:57.660] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [503900480, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:18:57.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:18:57.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:18:57.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:18:57.669] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@346e79f6]
[10:32:08.803] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[10:34:40.638] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:40.649] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b74e082] was not registered for synchronization because synchronization is not active
[10:34:41.102] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1244695266, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:41.110] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[10:34:41.142] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[10:34:41.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:34:41.184] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b74e082]
[10:34:43.590] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:43.591] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbfad67] was not registered for synchronization because synchronization is not active
[10:34:43.603] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [686240614, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:43.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:34:43.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:34:43.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:34:43.615] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bbfad67]
[10:34:43.618] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:43.619] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f678a80] was not registered for synchronization because synchronization is not active
[10:34:43.621] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [483460463, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:43.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:34:43.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:34:43.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:34:43.634] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f678a80]
[10:34:43.635] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:43.635] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64208abd] was not registered for synchronization because synchronization is not active
[10:34:43.648] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [121832693, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:43.650] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:34:43.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:34:43.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:34:43.791] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64208abd]
[10:34:45.002] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:45.003] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d017b55] was not registered for synchronization because synchronization is not active
[10:34:45.005] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1611589175, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:45.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:34:45.008] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:34:45.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:34:45.011] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d017b55]
[10:34:45.012] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:45.012] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee0697d] was not registered for synchronization because synchronization is not active
[10:34:45.014] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1205245932, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:45.015] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:34:45.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:34:45.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:34:45.065] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee0697d]
[10:34:45.065] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:34:45.065] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77487755] was not registered for synchronization because synchronization is not active
[10:34:45.070] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [36240103, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:34:45.071] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:34:45.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:34:45.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:34:45.122] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77487755]
[10:35:38.803] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:38.803] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70eb0f50] was not registered for synchronization because synchronization is not active
[10:35:38.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [836109675, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:38.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:35:38.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:35:38.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:35:38.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70eb0f50]
[10:35:38.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:38.811] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c6ed6c] was not registered for synchronization because synchronization is not active
[10:35:38.812] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1704912593, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:38.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:35:38.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:35:38.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:35:38.822] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10c6ed6c]
[10:35:38.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:38.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45826c3b] was not registered for synchronization because synchronization is not active
[10:35:38.827] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1388299490, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:38.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:35:38.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:35:38.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:35:38.863] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45826c3b]
[10:35:46.980] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:46.980] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f98f31f] was not registered for synchronization because synchronization is not active
[10:35:46.982] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [635663326, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:46.982] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:35:46.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:35:46.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:35:46.987] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f98f31f]
[10:35:46.987] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:46.987] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b44b77] was not registered for synchronization because synchronization is not active
[10:35:46.989] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [475070594, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:46.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:35:46.990] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:35:46.997] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:35:46.998] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b44b77]
[10:35:46.999] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:35:46.999] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@183257ef] was not registered for synchronization because synchronization is not active
[10:35:47.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [414049004, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:35:47.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:35:47.011] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:35:47.030] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:35:47.030] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@183257ef]
[10:37:08.370] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:08.371] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@729f135b] was not registered for synchronization because synchronization is not active
[10:37:08.373] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1445095835, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:08.374] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:37:08.375] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:37:08.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:37:08.380] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@729f135b]
[10:37:08.430] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:08.431] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b74a908] was not registered for synchronization because synchronization is not active
[10:37:08.433] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1328824793, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:08.434] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:37:08.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:37:08.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:37:08.436] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b74a908]
[10:37:08.436] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:08.436] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e4f5a6] was not registered for synchronization because synchronization is not active
[10:37:08.436] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [939232138, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:08.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:37:08.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:37:08.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:37:08.452] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55e4f5a6]
[10:37:08.452] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:08.452] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea3c5d7] was not registered for synchronization because synchronization is not active
[10:37:08.455] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [898207185, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:08.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:37:08.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:37:08.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:37:08.491] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea3c5d7]
[10:37:23.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:23.616] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2334d4] was not registered for synchronization because synchronization is not active
[10:37:23.619] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [438189807, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:23.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:37:23.620] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[10:37:23.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:37:23.625] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2334d4]
[10:37:23.626] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:37:23.626] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a39e42] was not registered for synchronization because synchronization is not active
[10:37:23.628] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1305291414, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:37:23.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:37:23.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:37:23.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:37:23.633] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a39e42]
[10:38:04.954] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:04.954] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ad00268] was not registered for synchronization because synchronization is not active
[10:38:04.956] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1805390227, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:04.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:38:04.957] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[10:38:04.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:38:04.961] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ad00268]
[10:38:05.040] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:05.040] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34876505] was not registered for synchronization because synchronization is not active
[10:38:05.043] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1796293412, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:05.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:38:05.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:38:05.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:38:05.047] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34876505]
[10:38:05.048] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:05.048] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7746ec0b] was not registered for synchronization because synchronization is not active
[10:38:05.049] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1733333513, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:05.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:38:05.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:38:05.057] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:38:05.057] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7746ec0b]
[10:38:05.058] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:05.058] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb15e34] was not registered for synchronization because synchronization is not active
[10:38:05.060] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [894768705, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:05.060] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:38:05.071] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:38:05.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:38:05.097] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb15e34]
[10:38:11.315] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:11.316] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1031df6b] was not registered for synchronization because synchronization is not active
[10:38:11.317] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [780523072, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:11.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:38:11.319] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[10:38:11.322] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:38:11.323] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1031df6b]
[11:53:22.130] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:22.131] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b82aa90] was not registered for synchronization because synchronization is not active
[11:53:22.135] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1013413287, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:22.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[11:53:22.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[11:53:22.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:53:22.135] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b82aa90]
[11:53:22.249] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:22.249] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73154792] was not registered for synchronization because synchronization is not active
[11:53:22.257] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1651201277, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:22.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:53:22.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:53:22.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:53:22.268] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73154792]
[11:53:22.269] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:22.270] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5a6a56] was not registered for synchronization because synchronization is not active
[11:53:22.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [69694658, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:22.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:53:22.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:53:22.276] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:53:22.276] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5a6a56]
[11:53:22.276] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:22.276] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74dfb174] was not registered for synchronization because synchronization is not active
[11:53:22.285] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1586508098, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:22.286] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:53:22.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:53:22.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:53:22.404] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74dfb174]
[11:53:25.799] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:25.799] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d543b7] was not registered for synchronization because synchronization is not active
[11:53:25.801] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1784465841, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:25.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:53:25.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:53:25.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:53:25.808] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d543b7]
[11:54:03.184] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:54:03.184] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad76db4] was not registered for synchronization because synchronization is not active
[11:54:03.186] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [883989852, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:54:03.186] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:54:03.187] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:54:03.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:54:03.191] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad76db4]
[11:55:14.889] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:14.889] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6023c642] was not registered for synchronization because synchronization is not active
[11:55:14.891] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1658148997, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:14.891] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:55:14.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:55:14.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:14.897] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6023c642]
[11:55:44.358] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:44.358] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cca42a4] was not registered for synchronization because synchronization is not active
[11:55:44.361] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [832337709, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:44.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:55:44.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:55:44.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:44.368] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cca42a4]
[11:55:56.859] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:56.859] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6511b0a7] was not registered for synchronization because synchronization is not active
[11:55:56.861] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [136185962, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:56.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:55:56.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:55:56.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:56.867] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6511b0a7]
[11:55:58.603] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:58.604] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b80d11] was not registered for synchronization because synchronization is not active
[11:55:58.606] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [827576903, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:58.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:58.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:58.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:58.610] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b80d11]
[11:55:58.610] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:58.611] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12f842f4] was not registered for synchronization because synchronization is not active
[11:55:58.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [110021499, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:58.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:58.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:58.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:55:58.619] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12f842f4]
[11:55:58.620] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:58.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ee49ec] was not registered for synchronization because synchronization is not active
[11:55:58.622] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [162478050, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:58.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:58.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:55:58.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:55:58.663] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ee49ec]
[11:56:05.143] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:05.144] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d614b9e] was not registered for synchronization because synchronization is not active
[11:56:05.146] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1623254631, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:05.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:56:05.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[11:56:05.153] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:05.154] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d614b9e]
[11:56:09.494] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:09.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dfaee90] was not registered for synchronization because synchronization is not active
[11:56:09.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1732095766, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:09.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:09.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:09.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:09.503] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dfaee90]
[11:56:09.504] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:09.504] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70149648] was not registered for synchronization because synchronization is not active
[11:56:09.505] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1442552396, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:09.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:09.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:09.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:56:09.514] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70149648]
[11:56:09.514] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:09.515] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b1f5e0] was not registered for synchronization because synchronization is not active
[11:56:09.516] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [124056503, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:09.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:09.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:56:09.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:09.548] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b1f5e0]
[11:56:35.366] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:35.366] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44477ecb] was not registered for synchronization because synchronization is not active
[11:56:35.374] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [913756931, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:35.374] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: INSERT INTO t_board(category, author, title, content, attachfile, regdate) VALUES(?, ?, ?, ?, ?, sysdate()) 
[11:56:35.381] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44477ecb]
[11:59:21.149] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[12:01:36.144] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:01:36.154] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3307773e] was not registered for synchronization because synchronization is not active
[12:01:36.551] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2010236891, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:01:36.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[12:01:36.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[12:01:36.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:01:36.636] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3307773e]
[12:01:36.715] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:01:36.715] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c71bce6] was not registered for synchronization because synchronization is not active
[12:01:36.788] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1086925615, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:01:36.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:01:36.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:01:36.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:01:36.796] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c71bce6]
[12:01:36.812] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:01:36.813] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c795569] was not registered for synchronization because synchronization is not active
[12:01:36.813] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1863868915, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:01:36.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:01:36.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:01:36.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[12:01:36.831] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c795569]
[12:01:36.833] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:01:36.833] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdfd724] was not registered for synchronization because synchronization is not active
[12:01:36.848] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [446384524, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:01:36.848] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:01:36.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:01:37.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:01:37.011] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bdfd724]
[12:02:09.698] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:09.699] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@283b63a] was not registered for synchronization because synchronization is not active
[12:02:09.701] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1890909882, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:09.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:02:09.702] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:02:09.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:09.705] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@283b63a]
[12:02:09.706] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:09.706] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585134b5] was not registered for synchronization because synchronization is not active
[12:02:09.707] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157814822, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:09.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:02:09.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:02:09.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[12:02:09.719] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@585134b5]
[12:02:09.719] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:09.720] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33f5852e] was not registered for synchronization because synchronization is not active
[12:02:09.723] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1415796126, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:09.724] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:02:09.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:02:09.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:02:09.772] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33f5852e]
[12:02:12.777] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:12.778] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5ac394] was not registered for synchronization because synchronization is not active
[12:02:12.780] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1456430957, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:12.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:02:12.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:02:12.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:12.784] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e5ac394]
[12:02:12.785] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:12.785] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab447dc] was not registered for synchronization because synchronization is not active
[12:02:12.786] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1496937478, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:12.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:02:12.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:02:12.789] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[12:02:12.789] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab447dc]
[12:02:12.789] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:12.789] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c5a96] was not registered for synchronization because synchronization is not active
[12:02:12.798] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [763013766, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:12.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:02:12.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:02:12.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:02:12.832] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c5a96]
[12:03:29.709] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:29.709] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d65704e] was not registered for synchronization because synchronization is not active
[12:03:29.712] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1214213974, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:29.712] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: INSERT INTO t_board(category, author, title, content, attachfile, regdate) VALUES(?, ?, ?, ?, ?, sysdate()) 
[12:03:29.713] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 410fg2f087(String), 구글 로그인 글작성 테스트1(String), 하이하이(String), y(String)
[12:03:30.075] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:03:30.076] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d65704e]
[12:03:30.076] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.076] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f0050a] was not registered for synchronization because synchronization is not active
[12:03:30.078] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1693706255, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT max(seq) FROM t_board WHERE author = ? 
[12:03:30.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[12:03:30.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:30.083] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f0050a]
[12:03:30.085] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.086] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17436938] was not registered for synchronization because synchronization is not active
[12:03:30.087] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2021977607, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: INSERT INTO t_filemeta(fileparent, category, orgname, sysname, filesize, fancysize, contenttype, filepath, downhit, delyn, regdate) VALUES(?, ?, ?, ?, ?, ?, ?, ?, 0, 'N', sysdate()); 
[12:03:30.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String), board(String), 커피.jpg(String), 885f0e32-b95c-40d6-a5f0-99093df6d087.jpg(String), 39252(Long), 38.3 KB(String), image/jpeg(String), D:/demo_repository/board/(String)
[12:03:30.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:03:30.361] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17436938]
[12:03:30.362] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.362] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67dcba94] was not registered for synchronization because synchronization is not active
[12:03:30.363] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [393189037, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_filemeta WHERE category = ? AND fileparent = ? AND orgname = ? AND delyn = 'N' 
[12:03:30.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: board(String), 49(String), 커피.jpg(String)
[12:03:30.366] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:30.366] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67dcba94]
[12:03:30.381] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.382] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3162277c] was not registered for synchronization because synchronization is not active
[12:03:30.383] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1710911860, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:03:30.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:03:30.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:30.387] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3162277c]
[12:03:30.387] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef6bdbd] was not registered for synchronization because synchronization is not active
[12:03:30.389] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1274070512, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:03:30.391] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:03:30.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:03:30.401] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef6bdbd]
[12:03:30.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:30.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d4bbb5] was not registered for synchronization because synchronization is not active
[12:03:30.404] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [683991792, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:30.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:03:30.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:03:30.451] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:03:30.452] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d4bbb5]
[12:03:33.033] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:33.034] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71cd7f16] was not registered for synchronization because synchronization is not active
[12:03:33.036] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [41610436, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:33.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:03:33.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:03:33.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:33.043] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71cd7f16]
[12:03:33.043] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:33.044] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4276497] was not registered for synchronization because synchronization is not active
[12:03:33.046] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1112114832, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:33.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:03:33.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[12:03:33.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:33.050] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4276497]
[12:03:33.050] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:33.051] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fbfd941] was not registered for synchronization because synchronization is not active
[12:03:33.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1791691703, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:33.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:03:33.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:03:33.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:03:33.062] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fbfd941]
[12:03:33.062] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:33.062] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a2b7a0] was not registered for synchronization because synchronization is not active
[12:03:33.062] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1947554045, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:33.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:03:33.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:03:33.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:03:33.191] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a2b7a0]
[12:03:37.686] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.686] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a11cc09] was not registered for synchronization because synchronization is not active
[12:03:37.687] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [696062085, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:03:37.689] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:03:37.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:37.691] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a11cc09]
[12:03:37.692] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.692] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245524cd] was not registered for synchronization because synchronization is not active
[12:03:37.693] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1303256432, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.693] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:03:37.694] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:03:37.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:03:37.701] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245524cd]
[12:03:37.701] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.701] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49e5a5ff] was not registered for synchronization because synchronization is not active
[12:03:37.701] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [791592829, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:03:37.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:03:37.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:03:37.733] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49e5a5ff]
[12:04:04.297] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:04.298] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7355b400] was not registered for synchronization because synchronization is not active
[12:04:04.300] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1688967534, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:04.300] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:04:04.301] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:04:04.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:04.305] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7355b400]
[12:04:04.305] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:04.305] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15757f11] was not registered for synchronization because synchronization is not active
[12:04:04.307] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [664609531, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:04.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:04:04.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[12:04:04.311] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:04.312] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15757f11]
[12:04:04.312] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:04.312] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73566ce9] was not registered for synchronization because synchronization is not active
[12:04:04.313] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1310165679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:04.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:04:04.314] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:04:04.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:04:04.316] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73566ce9]
[12:04:04.317] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:04.317] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eda6a2a] was not registered for synchronization because synchronization is not active
[12:04:04.318] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2095677924, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:04.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:04:04.319] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:04:04.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:04:04.681] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eda6a2a]
[12:04:12.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:12.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@230d42d8] was not registered for synchronization because synchronization is not active
[12:04:12.825] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [430884276, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:12.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:12.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:12.829] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:12.829] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@230d42d8]
[12:04:12.830] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:12.830] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18188487] was not registered for synchronization because synchronization is not active
[12:04:12.831] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1100342784, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:12.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:12.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:12.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:12.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18188487]
[12:04:12.842] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:12.842] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f0eb00] was not registered for synchronization because synchronization is not active
[12:04:12.844] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1658518157, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:12.845] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:12.853] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:04:12.877] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:12.877] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f0eb00]
[12:04:15.730] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45960dbe] was not registered for synchronization because synchronization is not active
[12:04:15.733] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [93696010, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:04:15.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:04:15.738] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:15.739] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45960dbe]
[12:04:15.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.740] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6bd86d] was not registered for synchronization because synchronization is not active
[12:04:15.741] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2026864051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.741] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:04:15.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[12:04:15.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:15.745] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6bd86d]
[12:04:15.745] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.745] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b35476] was not registered for synchronization because synchronization is not active
[12:04:15.746] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1507363612, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:04:15.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:04:15.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[12:04:15.765] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b35476]
[12:04:15.765] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.766] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a27ff4d] was not registered for synchronization because synchronization is not active
[12:04:15.767] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1143732013, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:04:15.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:04:15.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:04:15.808] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a27ff4d]
[12:04:23.300] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:23.301] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@588a800] was not registered for synchronization because synchronization is not active
[12:04:23.303] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1913753002, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:23.303] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:23.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:23.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:23.307] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@588a800]
[12:04:23.307] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:23.307] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ce8187b] was not registered for synchronization because synchronization is not active
[12:04:23.308] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1943802481, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:23.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:23.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:23.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:23.318] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ce8187b]
[12:04:23.318] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:23.318] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1880a529] was not registered for synchronization because synchronization is not active
[12:04:23.321] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1068146604, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:23.321] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:23.330] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:04:23.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:23.357] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1880a529]
[12:04:41.129] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:41.129] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c52598] was not registered for synchronization because synchronization is not active
[12:04:41.131] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1089512982, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:41.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:04:41.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[12:04:41.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:41.136] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c52598]
[12:07:09.762] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:09.762] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726fcd0e] was not registered for synchronization because synchronization is not active
[12:07:09.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [975851000, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:09.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:07:09.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:07:09.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:07:09.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@726fcd0e]
[12:07:09.768] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:09.768] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1166091b] was not registered for synchronization because synchronization is not active
[12:07:09.769] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1239438398, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:09.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:07:09.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:07:09.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:07:09.778] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1166091b]
[12:07:09.778] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:09.778] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf254c3] was not registered for synchronization because synchronization is not active
[12:07:09.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1050374820, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:09.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:07:09.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:07:09.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:07:09.811] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf254c3]
[12:07:45.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:45.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6985e60f] was not registered for synchronization because synchronization is not active
[12:07:45.188] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [891366070, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:45.188] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[12:07:45.188] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:07:45.196] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:07:45.198] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6985e60f]
[12:07:45.198] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:45.198] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7df2630d] was not registered for synchronization because synchronization is not active
[12:07:45.198] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [492094514, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:45.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:07:45.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:07:45.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:07:45.207] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7df2630d]
[12:07:45.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:45.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349d13fc] was not registered for synchronization because synchronization is not active
[12:07:45.207] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [656717568, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:45.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:07:45.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:07:45.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:07:45.212] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349d13fc]
[12:07:45.212] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:07:45.212] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42565dc2] was not registered for synchronization because synchronization is not active
[12:07:45.220] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1736112243, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:07:45.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:07:45.228] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:07:45.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:07:45.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42565dc2]
[12:08:09.057] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:08:09.058] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78016f5c] was not registered for synchronization because synchronization is not active
[12:08:09.059] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [109810472, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:08:09.059] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:08:09.060] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:08:09.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:08:09.063] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78016f5c]
[12:08:09.063] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:08:09.063] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcb9353] was not registered for synchronization because synchronization is not active
[12:08:09.064] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128931797, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:08:09.065] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:08:09.065] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:08:09.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:08:09.075] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcb9353]
[12:08:09.075] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:08:09.075] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1498e1b] was not registered for synchronization because synchronization is not active
[12:08:09.077] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1486155793, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:08:09.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:08:09.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:08:09.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:08:09.116] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1498e1b]
[12:31:07.905] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:07.906] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ccdc0d] was not registered for synchronization because synchronization is not active
[12:31:07.908] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1685205043, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:07.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:31:07.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:31:07.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:31:07.912] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ccdc0d]
[12:31:07.913] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:07.913] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@754e7a91] was not registered for synchronization because synchronization is not active
[12:31:07.914] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [704664329, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:07.915] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:31:07.915] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:31:07.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:31:07.917] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@754e7a91]
[12:31:07.926] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:07.926] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f61aa2] was not registered for synchronization because synchronization is not active
[12:31:07.930] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1029900214, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:07.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:31:07.934] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:31:07.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:31:07.968] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f61aa2]
[12:31:09.384] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:09.384] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d9ed66] was not registered for synchronization because synchronization is not active
[12:31:09.386] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1717646280, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:09.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:31:09.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:31:09.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:31:09.394] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d9ed66]
[12:31:09.394] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:09.395] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73845be6] was not registered for synchronization because synchronization is not active
[12:31:09.396] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [370380918, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:09.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:31:09.397] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[12:31:09.400] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:31:09.400] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73845be6]
[12:31:09.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:09.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214cb61] was not registered for synchronization because synchronization is not active
[12:31:09.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1468508676, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:09.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:31:09.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:31:09.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[12:31:09.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214cb61]
[12:31:09.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:09.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7779b7d1] was not registered for synchronization because synchronization is not active
[12:31:09.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1080292882, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:09.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:31:09.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:31:09.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:31:09.449] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7779b7d1]
[12:31:14.962] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:14.963] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@902d543] was not registered for synchronization because synchronization is not active
[12:31:14.965] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [852609850, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:14.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:31:14.966] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:31:14.969] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:31:14.969] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@902d543]
[12:31:14.970] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:14.970] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e8579] was not registered for synchronization because synchronization is not active
[12:31:14.971] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [685590498, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:14.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:31:14.972] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:31:14.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:31:14.979] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e8579]
[12:31:14.979] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:14.979] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e699cb0] was not registered for synchronization because synchronization is not active
[12:31:14.981] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1097939542, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:14.981] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:31:14.990] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:31:15.014] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:31:15.015] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e699cb0]
[12:31:21.398] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:21.399] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6045479c] was not registered for synchronization because synchronization is not active
[12:31:21.401] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2056837787, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:21.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:31:21.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:31:21.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:31:21.407] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6045479c]
[12:31:21.408] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:21.408] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@501234aa] was not registered for synchronization because synchronization is not active
[12:31:21.410] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [339948769, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:21.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:31:21.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:31:21.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:31:21.418] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@501234aa]
[12:31:21.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:31:21.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54b7fbdf] was not registered for synchronization because synchronization is not active
[12:31:21.420] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [439038915, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:31:21.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:31:21.430] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:31:21.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:31:21.456] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54b7fbdf]
[13:06:19.853] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:19.854] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bcf1f7a] was not registered for synchronization because synchronization is not active
[13:06:19.859] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [77862463, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:19.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:06:19.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:06:19.865] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:19.866] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bcf1f7a]
[13:06:19.866] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:19.867] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60f9fd89] was not registered for synchronization because synchronization is not active
[13:06:19.868] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [645104226, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:19.868] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:06:19.868] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[13:06:19.871] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:19.872] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60f9fd89]
[13:06:19.872] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:19.872] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246b4c7c] was not registered for synchronization because synchronization is not active
[13:06:19.873] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2122628579, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:19.873] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:06:19.874] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:06:19.877] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:06:19.878] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246b4c7c]
[13:06:19.879] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:19.879] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6063fe63] was not registered for synchronization because synchronization is not active
[13:06:19.880] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [724657752, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:19.880] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:06:19.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:06:20.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:06:20.235] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6063fe63]
[13:06:26.934] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:26.935] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25aa5640] was not registered for synchronization because synchronization is not active
[13:06:26.938] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1777968110, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:26.938] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:06:26.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:06:26.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:26.945] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25aa5640]
[13:06:27.003] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:27.004] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58afa021] was not registered for synchronization because synchronization is not active
[13:06:27.008] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [608266586, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:27.009] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:06:27.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:06:27.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:27.016] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58afa021]
[13:06:27.017] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:27.017] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7d45b4] was not registered for synchronization because synchronization is not active
[13:06:27.019] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [256812321, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:27.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:06:27.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:06:27.027] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:06:27.029] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7d45b4]
[13:06:27.029] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:27.029] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719019e7] was not registered for synchronization because synchronization is not active
[13:06:27.032] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [938016483, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:27.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:06:27.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:06:27.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:27.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719019e7]
[13:37:59.467] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:59.467] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133139a2] was not registered for synchronization because synchronization is not active
[13:37:59.467] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [782563, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:59.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:37:59.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[13:37:59.473] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:37:59.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@133139a2]
[13:37:59.527] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:59.528] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb0d14a] was not registered for synchronization because synchronization is not active
[13:37:59.530] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [870716297, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:59.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:37:59.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:37:59.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:37:59.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb0d14a]
[13:37:59.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:59.532] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c31b888] was not registered for synchronization because synchronization is not active
[13:37:59.532] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1406658758, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:59.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:37:59.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:37:59.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:37:59.545] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c31b888]
[13:37:59.545] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:59.546] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bdad9] was not registered for synchronization because synchronization is not active
[13:37:59.552] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1150226301, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:59.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:37:59.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:37:59.584] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:37:59.591] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@403bdad9]
[13:51:23.955] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:51:23.956] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d2da2d] was not registered for synchronization because synchronization is not active
[13:51:23.958] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [435221668, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:51:23.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:51:23.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:51:23.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:51:23.963] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d2da2d]
[13:51:23.963] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:51:23.963] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108ed55e] was not registered for synchronization because synchronization is not active
[13:51:23.964] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [748774865, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:51:23.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:51:23.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:51:23.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:51:23.972] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108ed55e]
[13:51:23.972] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:51:23.972] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e17687] was not registered for synchronization because synchronization is not active
[13:51:23.974] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [483605475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:51:23.975] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:51:23.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:51:24.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:51:24.011] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56e17687]
[13:52:23.745] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:23.745] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7768f5] was not registered for synchronization because synchronization is not active
[13:52:23.747] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1008673507, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:23.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:52:23.748] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[13:52:23.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:23.752] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7768f5]
[13:52:23.756] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:23.756] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f13f421] was not registered for synchronization because synchronization is not active
[13:52:23.758] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [31610861, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:23.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:52:23.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:52:23.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:23.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f13f421]
[13:52:23.762] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:23.762] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ab4bad] was not registered for synchronization because synchronization is not active
[13:52:23.763] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [481460190, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:23.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:52:23.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:52:23.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:52:23.769] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ab4bad]
[13:52:23.769] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:23.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66bfba14] was not registered for synchronization because synchronization is not active
[13:52:23.769] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2077566717, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:23.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:52:23.777] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:52:23.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:52:23.806] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66bfba14]
[13:52:24.105] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:24.105] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576baacc] was not registered for synchronization because synchronization is not active
[13:52:24.107] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1482666346, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:24.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:52:24.108] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:52:24.109] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:24.110] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@576baacc]
[13:52:24.110] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:24.110] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42f6f159] was not registered for synchronization because synchronization is not active
[13:52:24.111] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [937065423, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:24.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:52:24.112] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:52:24.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:52:24.118] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42f6f159]
[13:52:24.119] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:24.119] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54fe57b2] was not registered for synchronization because synchronization is not active
[13:52:24.122] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1281808661, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:24.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:52:24.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:52:24.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:52:24.156] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54fe57b2]
[13:52:27.002] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:27.004] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b032487] was not registered for synchronization because synchronization is not active
[13:52:27.005] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2108893322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:27.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:52:27.006] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:52:27.009] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:27.010] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b032487]
[13:52:27.010] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:27.011] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71908fe7] was not registered for synchronization because synchronization is not active
[13:52:27.012] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2103557612, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:27.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:52:27.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:52:27.014] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:27.015] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71908fe7]
[13:52:27.015] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:27.016] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e897829] was not registered for synchronization because synchronization is not active
[13:52:27.017] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1926552984, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:27.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:52:27.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:52:27.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:52:27.019] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e897829]
[13:52:27.021] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:27.021] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2721e48] was not registered for synchronization because synchronization is not active
[13:52:27.023] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [645741411, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:27.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:52:27.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:52:27.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:52:27.140] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2721e48]
[13:52:30.519] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:30.519] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8eae1f] was not registered for synchronization because synchronization is not active
[13:52:30.521] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2015153376, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:30.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:52:30.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[13:52:30.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:30.529] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8eae1f]
[13:52:30.530] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:30.530] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380a36cb] was not registered for synchronization because synchronization is not active
[13:52:30.531] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1321285170, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:30.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:52:30.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[13:52:30.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:30.534] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380a36cb]
[13:52:54.672] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:54.672] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6629cdd9] was not registered for synchronization because synchronization is not active
[13:52:54.674] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1542699937, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:54.674] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:52:54.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[13:52:54.678] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:54.679] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6629cdd9]
[13:52:54.679] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:54.679] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46971268] was not registered for synchronization because synchronization is not active
[13:52:54.680] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [43455257, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:54.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:52:54.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[13:52:54.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:54.685] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46971268]
[14:01:21.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:01:21.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1adaf32f] was not registered for synchronization because synchronization is not active
[14:01:21.175] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1545831437, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:01:21.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:01:21.176] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:01:21.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:01:21.178] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1adaf32f]
[14:01:21.179] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:01:21.179] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6ab08] was not registered for synchronization because synchronization is not active
[14:01:21.180] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [592305503, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:01:21.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:01:21.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:01:21.187] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:01:21.187] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65e6ab08]
[14:01:21.187] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:01:21.187] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58549436] was not registered for synchronization because synchronization is not active
[14:01:21.192] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1700903036, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:01:21.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:01:21.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:01:21.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:01:21.227] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58549436]
[14:13:27.992] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:27.993] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad2768e] was not registered for synchronization because synchronization is not active
[14:13:27.995] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [717081831, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:27.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:13:27.996] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[14:13:27.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:13:28.000] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad2768e]
[14:13:28.000] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:28.000] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723806ca] was not registered for synchronization because synchronization is not active
[14:13:28.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1284556937, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:28.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:13:28.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[14:13:28.004] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:13:28.004] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723806ca]
[14:13:31.652] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:31.652] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224ce5d6] was not registered for synchronization because synchronization is not active
[14:13:31.654] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [201137337, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:31.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:13:31.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[14:13:31.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:13:31.658] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224ce5d6]
[14:13:31.659] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:31.659] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cef1f3] was not registered for synchronization because synchronization is not active
[14:13:31.660] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1264999718, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:31.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:13:31.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[14:13:31.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:13:31.663] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cef1f3]
[14:19:14.138] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:14.139] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c3dea8] was not registered for synchronization because synchronization is not active
[14:19:14.142] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1841412237, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:14.142] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:19:14.143] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:19:14.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:14.145] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c3dea8]
[14:19:14.145] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:14.145] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292e0076] was not registered for synchronization because synchronization is not active
[14:19:14.147] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2078768750, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:14.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:19:14.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:19:14.153] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:19:14.154] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292e0076]
[14:19:14.154] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:14.154] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbc5ccf] was not registered for synchronization because synchronization is not active
[14:19:14.157] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [334374623, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:14.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:19:14.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:19:14.189] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:19:14.190] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbc5ccf]
[14:19:18.606] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:18.607] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f373d6c] was not registered for synchronization because synchronization is not active
[14:19:18.609] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [407510840, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:18.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[14:19:18.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[14:19:18.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:18.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f373d6c]
[14:19:18.614] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:18.614] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454216ed] was not registered for synchronization because synchronization is not active
[14:19:18.616] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1445427488, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:18.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[14:19:18.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[14:19:18.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:18.619] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454216ed]
[14:19:18.619] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:18.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180ad84a] was not registered for synchronization because synchronization is not active
[14:19:18.621] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1482549751, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:18.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:19:18.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[14:19:18.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:18.621] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180ad84a]
[14:19:21.902] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:21.902] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a153d7] was not registered for synchronization because synchronization is not active
[14:19:21.911] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [362667907, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:21.911] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[14:19:21.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[14:19:21.998] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:22.004] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a153d7]
[14:19:23.889] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:23.890] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1337ee] was not registered for synchronization because synchronization is not active
[14:19:23.891] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [273020049, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:23.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:19:23.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[14:19:23.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:23.896] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f1337ee]
[14:19:23.897] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:19:23.897] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c1c5fe1] was not registered for synchronization because synchronization is not active
[14:19:23.898] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1212920048, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:19:23.898] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:19:23.899] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[14:19:23.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:19:23.901] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c1c5fe1]
[14:54:41.565] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:41.565] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a33e2f] was not registered for synchronization because synchronization is not active
[14:54:41.570] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [556734406, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:41.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:54:41.571] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:54:41.583] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:41.583] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a33e2f]
[14:54:41.584] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:41.584] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a4633] was not registered for synchronization because synchronization is not active
[14:54:41.585] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [784837958, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:41.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:54:41.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:54:41.594] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:54:41.595] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8a4633]
[14:54:41.596] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:41.596] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b5352b] was not registered for synchronization because synchronization is not active
[14:54:41.598] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1058914376, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:41.598] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:54:41.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:54:41.721] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:54:41.723] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b5352b]
[14:54:49.387] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:49.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28d81b57] was not registered for synchronization because synchronization is not active
[14:54:49.390] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1366756088, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:49.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[14:54:49.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[14:54:49.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:49.399] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28d81b57]
[14:54:49.516] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:49.516] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24974115] was not registered for synchronization because synchronization is not active
[14:54:49.520] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1479391355, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:49.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:54:49.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:54:49.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:49.526] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24974115]
[14:54:49.527] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:49.527] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cbeb691] was not registered for synchronization because synchronization is not active
[14:54:49.528] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1963577183, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:49.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:54:49.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:54:49.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:54:49.536] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cbeb691]
[14:54:49.537] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:49.537] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d728b3] was not registered for synchronization because synchronization is not active
[14:54:49.540] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1043946420, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:49.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:54:49.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:54:49.582] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:54:49.583] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d728b3]
[14:54:52.225] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:52.225] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1c5825] was not registered for synchronization because synchronization is not active
[14:54:52.227] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1090049005, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:52.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:54:52.228] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[14:54:52.231] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:52.232] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1c5825]
[14:54:52.233] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:52.233] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78fbc39d] was not registered for synchronization because synchronization is not active
[14:54:52.234] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1306896550, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:52.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:54:52.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[14:54:52.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:52.239] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78fbc39d]
[15:02:29.233] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[15:03:15.203] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:15.215] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a079b9c] was not registered for synchronization because synchronization is not active
[15:03:15.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [889337749, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:15.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[15:03:15.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[15:03:15.690] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:15.696] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a079b9c]
[15:03:15.768] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:15.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1212d623] was not registered for synchronization because synchronization is not active
[15:03:15.828] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1946497054, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:15.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:03:15.833] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:03:15.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:15.845] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1212d623]
[15:03:15.848] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:15.848] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17e98cee] was not registered for synchronization because synchronization is not active
[15:03:15.850] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1171575985, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:15.850] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:03:15.851] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:03:15.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:03:15.866] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17e98cee]
[15:03:15.866] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:15.867] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73f386a8] was not registered for synchronization because synchronization is not active
[15:03:15.883] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2099822679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:15.884] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:03:15.901] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:03:16.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:03:16.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73f386a8]
[15:09:43.922] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:43.923] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd6dc5d] was not registered for synchronization because synchronization is not active
[15:09:43.924] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [396932772, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:43.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[15:09:43.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[15:09:43.927] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:43.932] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd6dc5d]
[15:09:43.932] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:43.932] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b04696] was not registered for synchronization because synchronization is not active
[15:09:43.932] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [831564348, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:43.932] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:09:43.932] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:09:43.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:43.942] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b04696]
[15:09:50.291] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:50.291] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3839cd3c] was not registered for synchronization because synchronization is not active
[15:09:50.294] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [155956182, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:50.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:09:50.296] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:09:50.299] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:50.301] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3839cd3c]
[15:09:50.301] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:50.301] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51efbc18] was not registered for synchronization because synchronization is not active
[15:09:50.303] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [185190662, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:50.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:09:50.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:09:50.314] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:09:50.315] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51efbc18]
[15:09:50.316] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:50.316] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b9e582] was not registered for synchronization because synchronization is not active
[15:09:50.316] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [117050780, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:50.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:09:50.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:09:50.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:09:50.371] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b9e582]
[15:09:52.853] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:52.853] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657e8505] was not registered for synchronization because synchronization is not active
[15:09:52.863] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1864308239, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:52.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[15:09:52.864] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[15:09:52.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:52.870] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657e8505]
[15:09:52.871] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:52.871] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8a89a7] was not registered for synchronization because synchronization is not active
[15:09:52.873] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [293999335, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:52.873] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[15:09:52.874] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[15:09:52.877] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:52.877] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8a89a7]
[15:09:52.878] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:52.878] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ae8705c] was not registered for synchronization because synchronization is not active
[15:09:52.881] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1711777642, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:52.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:09:52.882] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[15:09:52.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[15:09:52.903] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ae8705c]
[15:09:52.904] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:52.904] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ce98848] was not registered for synchronization because synchronization is not active
[15:09:52.905] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1310775161, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:52.906] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[15:09:52.906] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[15:09:52.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:09:52.956] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ce98848]
[15:09:55.849] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:55.850] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edcb305] was not registered for synchronization because synchronization is not active
[15:09:55.851] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1773242257, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:55.851] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM t_comment_reply cmt WHERE pid = ? 
[15:09:55.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 12(Integer)
[15:09:55.858] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:55.859] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4edcb305]
[15:09:57.638] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:57.638] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ae2ad2] was not registered for synchronization because synchronization is not active
[15:09:57.641] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1059837309, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:57.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:09:57.643] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:09:57.645] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:09:57.646] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ae2ad2]
[15:09:57.646] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:57.646] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee9272a] was not registered for synchronization because synchronization is not active
[15:09:57.648] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1141664628, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:57.648] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:09:57.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:09:57.656] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:09:57.658] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ee9272a]
[15:09:57.659] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:09:57.659] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f6b4f1] was not registered for synchronization because synchronization is not active
[15:09:57.663] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [952996117, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:09:57.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:09:57.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:09:57.700] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:09:57.701] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f6b4f1]
[15:10:01.736] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:01.737] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257ac811] was not registered for synchronization because synchronization is not active
[15:10:01.741] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2009463292, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:01.741] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[15:10:01.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:10:01.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:01.748] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257ac811]
[15:10:01.748] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:01.748] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596e2d0d] was not registered for synchronization because synchronization is not active
[15:10:01.750] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1985131611, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:01.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[15:10:01.752] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[15:10:01.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:01.756] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@596e2d0d]
[15:10:01.756] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:01.756] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7303f043] was not registered for synchronization because synchronization is not active
[15:10:01.758] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [145662531, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:01.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:10:01.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:10:01.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[15:10:01.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7303f043]
[15:10:01.762] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:01.763] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2015abad] was not registered for synchronization because synchronization is not active
[15:10:01.764] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [766859936, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:01.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[15:10:01.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:10:01.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:10:01.808] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2015abad]
[15:10:10.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:10.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20de3ba5] was not registered for synchronization because synchronization is not active
[15:10:10.822] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1801894553, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:10.822] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: INSERT INTO t_comment(id, pw, content, boardseq, replyboardseq, regdate) VALUES(?, ?, ?, ?, ?, sysdate()) 
[15:10:10.822] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), d404559f602eab6fd602ac7680dacbfaadd13630335e951f097af3900e9de176b6db28512f2e000b9d04fba5133e8b1c6e8df59db3a8ab9d60be4b97cc9e81db(String), 댓글테스트(String), 49(Integer), -1(Integer)
[15:10:10.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:10:10.939] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20de3ba5]
[15:10:10.939] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:10.939] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7605ce6] was not registered for synchronization because synchronization is not active
[15:10:10.939] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1374462320, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:10.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET commentcnt = commentcnt+1 WHERE seq = ? 
[15:10:10.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:10:10.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:10:10.971] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7605ce6]
[15:10:11.006] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:11.006] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@947d999] was not registered for synchronization because synchronization is not active
[15:10:11.006] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [467147995, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:11.006] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:10:11.006] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:10:11.006] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:11.006] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@947d999]
[15:10:13.503] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:13.503] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228f8d6d] was not registered for synchronization because synchronization is not active
[15:10:13.505] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [679590501, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:13.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:10:13.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:10:13.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:13.510] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@228f8d6d]
[15:10:13.510] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:13.511] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b436274] was not registered for synchronization because synchronization is not active
[15:10:13.512] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [976614526, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:13.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:10:13.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:10:13.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:10:13.521] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b436274]
[15:10:13.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:13.522] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96e118f] was not registered for synchronization because synchronization is not active
[15:10:13.527] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1902422573, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:13.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:10:13.538] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:10:13.565] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:10:13.566] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96e118f]
[15:10:27.618] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:27.619] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@264e502b] was not registered for synchronization because synchronization is not active
[15:10:27.622] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1504164680, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:27.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[15:10:27.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[15:10:27.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:27.627] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@264e502b]
[15:10:27.628] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:27.628] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d751651] was not registered for synchronization because synchronization is not active
[15:10:27.629] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1415115615, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:27.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[15:10:27.630] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(String)
[15:10:27.632] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:27.633] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d751651]
[15:10:27.633] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:27.633] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@629594bd] was not registered for synchronization because synchronization is not active
[15:10:27.634] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1880477260, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:27.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:10:27.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[15:10:27.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 5
[15:10:27.650] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@629594bd]
[15:10:27.651] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:27.651] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4fae99] was not registered for synchronization because synchronization is not active
[15:10:27.652] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1885141718, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:27.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[15:10:27.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[15:10:27.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:10:27.685] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e4fae99]
[15:10:31.559] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:31.559] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5d92e7] was not registered for synchronization because synchronization is not active
[15:10:31.561] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1691454885, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:31.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM t_comment_reply cmt WHERE pid = ? 
[15:10:31.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 20(Integer)
[15:10:31.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[15:10:31.567] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5d92e7]
[15:10:35.242] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:35.242] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ef961e6] was not registered for synchronization because synchronization is not active
[15:10:35.245] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [785233481, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:35.246] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:10:35.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:10:35.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:10:35.250] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ef961e6]
[15:10:35.250] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:35.250] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e0afc8] was not registered for synchronization because synchronization is not active
[15:10:35.251] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1712296479, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:35.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:10:35.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:10:35.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:10:35.259] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e0afc8]
[15:10:35.261] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:10:35.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@736c18c0] was not registered for synchronization because synchronization is not active
[15:10:35.265] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [528360284, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:10:35.266] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:10:35.275] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:10:35.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:10:35.308] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@736c18c0]
[15:21:14.887] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[15:21:46.189] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:46.200] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eab41e5] was not registered for synchronization because synchronization is not active
[15:21:46.593] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1591175027, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:46.600] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[15:21:46.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[15:21:46.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:21:46.677] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eab41e5]
[15:21:46.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:46.741] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fc4666f] was not registered for synchronization because synchronization is not active
[15:21:46.743] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2147030960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:46.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:21:46.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:21:46.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:21:46.753] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fc4666f]
[15:21:46.757] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:46.757] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289c2d17] was not registered for synchronization because synchronization is not active
[15:21:46.800] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [697962299, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:46.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:21:46.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:21:46.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:21:46.820] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289c2d17]
[15:21:46.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:46.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@754a99cb] was not registered for synchronization because synchronization is not active
[15:21:46.825] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1531420767, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:46.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:21:46.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:21:46.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:21:46.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@754a99cb]
[15:21:46.841] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:46.841] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76a55f2] was not registered for synchronization because synchronization is not active
[15:21:46.854] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [113699433, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:46.854] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:21:46.868] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:21:47.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:21:47.047] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76a55f2]
[15:21:57.408] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:57.409] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e0ddd6] was not registered for synchronization because synchronization is not active
[15:21:57.411] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1822243048, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:57.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[15:21:57.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[15:21:57.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:21:57.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e0ddd6]
[15:21:57.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:21:57.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@637a2849] was not registered for synchronization because synchronization is not active
[15:21:57.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [184364153, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:21:57.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:21:57.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:21:57.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:21:57.423] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@637a2849]
[15:23:38.229] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[15:24:01.406] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:01.415] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e4c089f] was not registered for synchronization because synchronization is not active
[15:24:01.820] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1313447231, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:01.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[15:24:01.857] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[15:24:01.897] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:01.903] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e4c089f]
[15:24:01.975] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:01.975] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af3f3e2] was not registered for synchronization because synchronization is not active
[15:24:01.978] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [384740038, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:01.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:01.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:01.987] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:01.988] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1af3f3e2]
[15:24:01.992] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:01.993] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40963d5] was not registered for synchronization because synchronization is not active
[15:24:02.059] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1063679571, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:02.059] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:24:02.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:24:02.072] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:02.073] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40963d5]
[15:24:02.076] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:02.077] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b475a6] was not registered for synchronization because synchronization is not active
[15:24:02.079] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1744073852, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:02.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:24:02.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:24:02.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:24:02.093] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b475a6]
[15:24:02.094] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:02.094] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e6b09] was not registered for synchronization because synchronization is not active
[15:24:02.106] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1654912125, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:02.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:24:02.120] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:24:02.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:24:02.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e6b09]
[15:24:08.735] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:08.736] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d5b8fdd] was not registered for synchronization because synchronization is not active
[15:24:08.737] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2086463001, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:08.737] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:08.737] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:08.737] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:08.737] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d5b8fdd]
[15:24:08.737] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:08.737] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@338239ee] was not registered for synchronization because synchronization is not active
[15:24:08.745] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [855006959, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:08.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[15:24:08.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[15:24:08.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:08.745] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@338239ee]
[15:24:08.745] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:08.745] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e308f12] was not registered for synchronization because synchronization is not active
[15:24:08.755] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [244684671, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:08.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:08.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:08.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:08.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e308f12]
[15:24:37.257] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:37.258] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@590473a1] was not registered for synchronization because synchronization is not active
[15:24:37.260] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [100300775, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:37.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:37.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:37.264] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:37.265] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@590473a1]
[15:24:37.268] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:37.268] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6ab4c5] was not registered for synchronization because synchronization is not active
[15:24:37.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [607612125, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:37.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:24:37.272] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:24:37.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:37.275] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6ab4c5]
[15:24:37.275] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:37.275] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bd9a5b] was not registered for synchronization because synchronization is not active
[15:24:37.277] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1139776049, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:37.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:24:37.278] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:24:37.286] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:24:37.287] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31bd9a5b]
[15:24:37.287] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:37.287] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d5407c1] was not registered for synchronization because synchronization is not active
[15:24:37.291] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [832357915, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:37.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:24:37.302] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:24:37.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:24:37.340] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d5407c1]
[15:24:39.391] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:39.391] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273fe8c0] was not registered for synchronization because synchronization is not active
[15:24:39.393] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839144378, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:39.394] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:39.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:39.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:39.397] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@273fe8c0]
[15:24:39.399] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:39.400] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c97664] was not registered for synchronization because synchronization is not active
[15:24:39.403] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [627720928, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:39.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[15:24:39.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[15:24:39.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:39.412] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c97664]
[15:24:39.412] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:39.412] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f06cf22] was not registered for synchronization because synchronization is not active
[15:24:39.414] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [144282494, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:39.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[15:24:39.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String), 0(Integer), 10(Integer)
[15:24:39.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:39.423] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f06cf22]
[15:24:43.296] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:43.297] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d87c8c] was not registered for synchronization because synchronization is not active
[15:24:43.298] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [132478647, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:43.299] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:43.300] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:43.303] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:43.305] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d87c8c]
[15:24:43.305] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:43.305] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@283b63a] was not registered for synchronization because synchronization is not active
[15:24:43.307] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1890909882, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:43.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[15:24:43.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[15:24:43.314] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:43.315] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@283b63a]
[15:24:43.315] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:43.315] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@355ef2d5] was not registered for synchronization because synchronization is not active
[15:24:43.317] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1054457600, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:43.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:24:43.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[15:24:43.322] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:43.322] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@355ef2d5]
[16:21:39.157] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:21:39.157] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ed71e] was not registered for synchronization because synchronization is not active
[16:21:39.163] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2126275181, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:21:39.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[16:21:39.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[16:21:39.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:21:39.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@256ed71e]
[16:21:39.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:21:39.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c7533a1] was not registered for synchronization because synchronization is not active
[16:21:39.174] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [232042634, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:21:39.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[16:21:39.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[16:21:39.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[16:21:39.184] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c7533a1]
[16:21:39.185] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:21:39.185] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e14fa54] was not registered for synchronization because synchronization is not active
[16:21:39.188] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1678658623, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:21:39.188] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[16:21:39.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[16:21:39.311] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[16:21:39.312] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e14fa54]
[17:48:09.600] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:09.600] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e1feb96] was not registered for synchronization because synchronization is not active
[17:48:09.604] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1623807372, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:09.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[17:48:09.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[17:48:09.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:09.610] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e1feb96]
[17:48:09.671] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:09.671] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b7cd41] was not registered for synchronization because synchronization is not active
[17:48:09.675] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [68922877, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:09.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:48:09.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:48:09.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:09.681] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b7cd41]
[17:48:09.682] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:09.682] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c17d660] was not registered for synchronization because synchronization is not active
[17:48:09.684] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [10326391, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:09.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:48:09.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:48:09.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:09.689] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c17d660]
[17:48:09.690] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:09.690] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f268d42] was not registered for synchronization because synchronization is not active
[17:48:09.691] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1502927129, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:09.692] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:48:09.692] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:48:09.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:48:09.701] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f268d42]
[17:48:09.702] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:09.702] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db62a6c] was not registered for synchronization because synchronization is not active
[17:48:09.705] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [268623631, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:09.705] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:48:09.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:48:09.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:48:09.752] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db62a6c]
[17:48:13.652] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:13.653] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489] was not registered for synchronization because synchronization is not active
[17:48:13.655] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1555972031, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:13.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:48:13.656] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:48:13.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:13.659] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489]
[17:48:13.659] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:13.659] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2160b4db] was not registered for synchronization because synchronization is not active
[17:48:13.661] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [268878316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:13.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:48:13.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:48:13.665] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:13.665] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2160b4db]
[17:48:13.666] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:13.666] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15ab602e] was not registered for synchronization because synchronization is not active
[17:48:13.668] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1491540051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:13.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:48:13.669] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:48:13.672] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:13.673] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15ab602e]
[18:45:39.206] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:39.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140f5016] was not registered for synchronization because synchronization is not active
[18:45:39.211] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [107891717, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:39.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:45:39.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:45:39.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:39.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140f5016]
[18:45:39.217] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:39.217] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cda4632] was not registered for synchronization because synchronization is not active
[18:45:39.219] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [384003857, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:39.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:45:39.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:45:39.228] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:45:39.229] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cda4632]
[18:45:39.229] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:39.230] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a89f6f] was not registered for synchronization because synchronization is not active
[18:45:39.232] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [136951811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:39.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:45:39.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:45:39.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:39.275] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a89f6f]
[18:45:41.463] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:41.463] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16bd69ab] was not registered for synchronization because synchronization is not active
[18:45:41.476] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [109301523, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:41.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[18:45:41.477] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[18:45:41.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:41.481] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16bd69ab]
[18:45:41.481] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:41.481] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee50966] was not registered for synchronization because synchronization is not active
[18:45:41.483] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1674008023, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:41.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[18:45:41.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[18:45:41.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:41.487] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee50966]
[18:45:41.488] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:41.488] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688bb236] was not registered for synchronization because synchronization is not active
[18:45:41.490] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [559923423, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:41.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[18:45:41.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[18:45:41.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:41.496] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@688bb236]
[18:45:41.497] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:41.497] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fc10123] was not registered for synchronization because synchronization is not active
[18:45:41.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [391837541, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:41.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[18:45:41.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[18:45:41.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[18:45:41.539] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fc10123]
[18:45:43.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:43.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a7bef5] was not registered for synchronization because synchronization is not active
[18:45:43.250] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1640868174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:43.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:45:43.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:45:43.253] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:43.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54a7bef5]
[18:45:43.254] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:43.254] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4724a0a1] was not registered for synchronization because synchronization is not active
[18:45:43.257] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [627431137, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:43.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:45:43.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:45:43.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:45:43.263] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4724a0a1]
[18:45:43.263] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:43.263] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703033c0] was not registered for synchronization because synchronization is not active
[18:45:43.273] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1728818819, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:43.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:45:43.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:45:43.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:43.306] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703033c0]
[18:45:58.639] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:58.639] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fbfa8c5] was not registered for synchronization because synchronization is not active
[18:45:58.641] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1446550757, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:58.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:45:58.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:45:58.644] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:58.645] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fbfa8c5]
[18:45:58.645] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:58.645] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c7037bc] was not registered for synchronization because synchronization is not active
[18:45:58.647] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2044969724, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:58.647] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:45:58.648] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:45:58.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:45:58.655] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c7037bc]
[18:45:58.655] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:58.655] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@658cfb8] was not registered for synchronization because synchronization is not active
[18:45:58.655] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1264387513, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:58.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:45:58.672] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[18:45:58.695] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:58.695] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@658cfb8]
[18:45:59.678] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:59.678] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7108cb39] was not registered for synchronization because synchronization is not active
[18:45:59.680] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1653636854, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:59.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:45:59.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:45:59.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:59.684] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7108cb39]
[18:45:59.684] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:59.684] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2deddb12] was not registered for synchronization because synchronization is not active
[18:45:59.685] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1832985419, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:59.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:45:59.686] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:45:59.693] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:45:59.693] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2deddb12]
[18:45:59.694] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:59.694] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708e97ed] was not registered for synchronization because synchronization is not active
[18:45:59.696] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [168857413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:59.697] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:45:59.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[18:45:59.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:59.732] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708e97ed]
[18:46:00.597] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:00.598] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62011ad0] was not registered for synchronization because synchronization is not active
[18:46:00.600] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1361383557, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:00.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:46:00.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:46:00.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:00.607] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62011ad0]
[18:46:00.608] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:00.608] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b2b0c] was not registered for synchronization because synchronization is not active
[18:46:00.610] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [159012475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:00.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:46:00.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:46:00.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:46:00.619] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a5b2b0c]
[18:46:00.619] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:00.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7819653c] was not registered for synchronization because synchronization is not active
[18:46:00.622] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1169797741, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:00.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:46:00.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[18:46:00.640] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:46:00.640] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7819653c]
[18:46:05.376] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:05.376] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a9c82f] was not registered for synchronization because synchronization is not active
[18:46:05.378] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [835880614, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:05.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[18:46:05.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[18:46:05.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:05.383] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a9c82f]
[18:46:05.493] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:05.493] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a6f2aa] was not registered for synchronization because synchronization is not active
[18:46:05.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [469924501, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:05.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:46:05.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:46:05.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:05.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50a6f2aa]
[18:46:05.510] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:05.513] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53dcf67b] was not registered for synchronization because synchronization is not active
[18:46:05.516] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2052729865, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:05.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:46:05.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:46:05.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:05.524] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53dcf67b]
[18:46:05.525] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:05.525] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234b3301] was not registered for synchronization because synchronization is not active
[18:46:05.527] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [96582959, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:05.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:46:05.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:46:05.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:46:05.538] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@234b3301]
[18:46:05.538] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:05.538] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@684b8ba1] was not registered for synchronization because synchronization is not active
[18:46:05.542] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [193100971, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:05.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:46:05.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:46:05.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:46:05.579] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@684b8ba1]
[18:46:17.320] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.321] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eae11f7] was not registered for synchronization because synchronization is not active
[18:46:17.332] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1967202786, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[18:46:17.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[18:46:17.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:17.332] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eae11f7]
[18:46:17.341] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.341] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ba7a22] was not registered for synchronization because synchronization is not active
[18:46:17.341] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1335578288, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.341] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:46:17.341] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[18:46:17.341] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:17.341] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19ba7a22]
[18:46:17.341] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.341] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@751b3c4c] was not registered for synchronization because synchronization is not active
[18:46:17.349] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [642557121, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:46:17.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:46:17.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:17.349] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@751b3c4c]
[18:46:17.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf75f91] was not registered for synchronization because synchronization is not active
[18:46:17.349] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2146200960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:46:17.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:46:17.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:46:17.357] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf75f91]
[18:46:17.357] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.357] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd8f962] was not registered for synchronization because synchronization is not active
[18:46:17.365] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [849058220, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:46:17.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:46:17.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:46:17.407] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd8f962]
[18:46:17.731] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.732] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e5a7b6] was not registered for synchronization because synchronization is not active
[18:46:17.733] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1340393097, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:46:17.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[18:46:17.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:17.736] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e5a7b6]
[18:46:17.736] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.737] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b21659] was not registered for synchronization because synchronization is not active
[18:46:17.738] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1957539804, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.738] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:46:17.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:46:17.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:46:17.743] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14b21659]
[18:46:17.744] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.744] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60a717e3] was not registered for synchronization because synchronization is not active
[18:46:17.746] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2045961493, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:46:17.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:46:17.754] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:46:17.754] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60a717e3]
[18:46:17.755] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:46:17.755] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6949803c] was not registered for synchronization because synchronization is not active
[18:46:17.758] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1091515678, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:46:17.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:46:17.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:46:17.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:46:17.797] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6949803c]
