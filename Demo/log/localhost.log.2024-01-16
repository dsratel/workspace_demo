[10:09:39.077] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[10:10:27.852] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:27.862] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e4b31a] was not registered for synchronization because synchronization is not active
[10:10:28.251] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [601669674, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:28.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[10:10:28.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[10:10:28.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:28.331] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e4b31a]
[10:10:28.463] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:28.464] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61f63c31] was not registered for synchronization because synchronization is not active
[10:10:28.467] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1169289737, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:28.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:28.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:28.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:28.476] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61f63c31]
[10:10:28.480] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:28.481] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eabbe0a] was not registered for synchronization because synchronization is not active
[10:10:28.534] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2047624892, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:28.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:28.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:28.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:28.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eabbe0a]
[10:10:28.544] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:28.544] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30048fff] was not registered for synchronization because synchronization is not active
[10:10:28.546] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [110610579, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:28.547] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:28.547] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:28.557] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:28.558] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30048fff]
[10:10:28.559] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:28.559] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454e66c6] was not registered for synchronization because synchronization is not active
[10:10:28.570] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [869901610, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:28.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:28.583] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:10:28.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:10:28.627] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454e66c6]
[10:10:34.817] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:34.818] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2507036b] was not registered for synchronization because synchronization is not active
[10:10:34.820] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2057486141, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:34.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:34.821] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:34.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:34.824] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2507036b]
[10:10:34.826] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:34.826] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f23ca7] was not registered for synchronization because synchronization is not active
[10:10:34.828] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [606939377, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:34.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:34.829] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:34.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:34.832] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f23ca7]
[10:10:34.832] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:34.832] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1df6d] was not registered for synchronization because synchronization is not active
[10:10:34.833] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [911008961, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:34.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:34.835] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:34.844] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:34.845] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1df6d]
[10:10:34.846] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:34.846] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e0a1f79] was not registered for synchronization because synchronization is not active
[10:10:34.849] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [348271470, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:34.849] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:34.860] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:10:34.894] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:10:34.895] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e0a1f79]
[10:10:38.090] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:38.091] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e39665] was not registered for synchronization because synchronization is not active
[10:10:38.092] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [303449946, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:38.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:38.093] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:38.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:38.097] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e39665]
[10:10:38.098] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:38.098] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24d61ce6] was not registered for synchronization because synchronization is not active
[10:10:38.100] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1644190499, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:38.100] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:38.101] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:38.103] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:38.104] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24d61ce6]
[10:10:38.105] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:38.105] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b531f2e] was not registered for synchronization because synchronization is not active
[10:10:38.106] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1446975974, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:38.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:38.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:38.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:38.117] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b531f2e]
[10:10:38.117] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:38.117] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4651d4cc] was not registered for synchronization because synchronization is not active
[10:10:38.120] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2098505361, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:38.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:38.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[10:10:38.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:10:38.158] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4651d4cc]
[10:10:39.251] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:39.252] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8696f3] was not registered for synchronization because synchronization is not active
[10:10:39.254] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [206412016, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:39.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:39.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:39.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:39.258] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8696f3]
[10:10:39.259] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:39.259] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720c5225] was not registered for synchronization because synchronization is not active
[10:10:39.261] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1653366554, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:39.261] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:39.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:39.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:39.266] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720c5225]
[10:10:39.266] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:39.266] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511173b3] was not registered for synchronization because synchronization is not active
[10:10:39.268] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1426473441, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:39.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:39.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:39.280] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:39.282] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511173b3]
[10:10:39.283] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:39.283] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b49b13] was not registered for synchronization because synchronization is not active
[10:10:39.287] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [231117679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:39.288] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:39.298] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[10:10:39.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[10:10:39.309] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b49b13]
[10:10:40.951] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:40.952] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf552bd] was not registered for synchronization because synchronization is not active
[10:10:40.953] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1321660010, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:40.953] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:40.954] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:40.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:40.959] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf552bd]
[10:10:40.960] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:40.960] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78e7c7] was not registered for synchronization because synchronization is not active
[10:10:40.961] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1207799514, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:40.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:40.963] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:40.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:40.966] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78e7c7]
[10:10:40.966] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:40.966] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286f49b9] was not registered for synchronization because synchronization is not active
[10:10:40.968] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [706182805, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:40.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:40.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:40.975] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:40.976] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@286f49b9]
[10:10:40.976] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:40.976] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50c0b014] was not registered for synchronization because synchronization is not active
[10:10:40.978] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1733907665, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:40.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:40.988] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[10:10:40.998] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[10:10:41.000] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50c0b014]
[10:10:42.163] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:42.163] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37803b9d] was not registered for synchronization because synchronization is not active
[10:10:42.165] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [780104102, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:42.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:10:42.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[10:10:42.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:42.170] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37803b9d]
[10:10:42.170] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:42.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17c84878] was not registered for synchronization because synchronization is not active
[10:10:42.172] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [970063816, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:42.172] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:10:42.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:10:42.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:10:42.176] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17c84878]
[10:10:42.176] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:42.176] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@714bab90] was not registered for synchronization because synchronization is not active
[10:10:42.177] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [543668060, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:42.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:10:42.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:10:42.186] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:10:42.187] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@714bab90]
[10:10:42.187] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:10:42.187] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cdfbc8] was not registered for synchronization because synchronization is not active
[10:10:42.189] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1394247132, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:10:42.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:10:42.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[10:10:42.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[10:10:42.210] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59cdfbc8]
[11:48:48.499] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:48.501] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1040fac0] was not registered for synchronization because synchronization is not active
[11:48:48.514] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1302632461, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:48.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:48:48.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:48:48.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:48.527] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1040fac0]
[11:48:48.527] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:48.527] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12359e2c] was not registered for synchronization because synchronization is not active
[11:48:48.528] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1754193817, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:48.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:48:48.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:48:48.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:48:48.538] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12359e2c]
[11:48:48.538] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:48.539] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b1dc70] was not registered for synchronization because synchronization is not active
[11:48:48.541] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [683026313, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:48.541] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:48:48.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:48:48.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:48:48.684] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b1dc70]
[11:48:58.477] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:58.478] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47eda661] was not registered for synchronization because synchronization is not active
[11:48:58.482] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [73743194, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:58.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[11:48:58.484] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:48:58.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:58.493] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47eda661]
[11:48:58.601] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:58.601] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709fd5e9] was not registered for synchronization because synchronization is not active
[11:48:58.603] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1928672494, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:58.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:48:58.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:48:58.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:58.610] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709fd5e9]
[11:48:58.611] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:58.611] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc210d8] was not registered for synchronization because synchronization is not active
[11:48:58.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [903313510, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:58.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:48:58.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:48:58.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:58.616] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dc210d8]
[11:48:58.616] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:58.616] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc5106d] was not registered for synchronization because synchronization is not active
[11:48:58.617] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [182194501, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:58.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:48:58.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:48:58.627] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:48:58.628] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc5106d]
[11:48:58.628] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:58.629] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521e7bc0] was not registered for synchronization because synchronization is not active
[11:48:58.631] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1372644020, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:58.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:48:58.641] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:48:58.669] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:48:58.670] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521e7bc0]
[11:49:00.438] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:00.438] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40bb9a7f] was not registered for synchronization because synchronization is not active
[11:49:00.440] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [741965769, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:00.441] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:00.442] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:00.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:00.444] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40bb9a7f]
[11:49:00.445] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:00.446] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c15bd3c] was not registered for synchronization because synchronization is not active
[11:49:00.449] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [994707274, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:00.449] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:49:00.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:49:00.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:00.453] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c15bd3c]
[11:49:00.454] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:00.454] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9fcb3] was not registered for synchronization because synchronization is not active
[11:49:00.456] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1562829795, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:00.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:49:00.457] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(String)
[11:49:00.459] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:00.460] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9fcb3]
[11:49:00.460] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:00.460] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e226d5a] was not registered for synchronization because synchronization is not active
[11:49:00.462] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [931092624, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:00.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:49:00.463] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:49:00.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:49:00.468] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e226d5a]
[11:49:00.468] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:00.469] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff98a3a] was not registered for synchronization because synchronization is not active
[11:49:00.470] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1835748175, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:00.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:49:00.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:49:00.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:49:00.519] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff98a3a]
[11:49:02.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:02.350] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7814bbf8] was not registered for synchronization because synchronization is not active
[11:49:02.351] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [151733766, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:02.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:02.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:02.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:02.354] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7814bbf8]
[11:49:02.355] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:02.355] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d1bd78] was not registered for synchronization because synchronization is not active
[11:49:02.356] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1431417988, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:02.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:49:02.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:49:02.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:02.362] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d1bd78]
[11:49:02.362] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:02.362] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67493980] was not registered for synchronization because synchronization is not active
[11:49:02.364] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [524091236, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:02.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:49:02.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:49:02.371] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:49:02.372] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67493980]
[11:49:02.372] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:02.372] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eac4036] was not registered for synchronization because synchronization is not active
[11:49:02.375] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [720562389, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:02.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:49:02.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:49:02.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:49:02.410] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eac4036]
[11:49:07.157] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:07.158] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7571c6] was not registered for synchronization because synchronization is not active
[11:49:07.159] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [522403433, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:07.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:07.161] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:07.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:07.164] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c7571c6]
[11:49:07.165] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:07.165] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1642575a] was not registered for synchronization because synchronization is not active
[11:49:07.166] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1027660849, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:07.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:49:07.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[11:49:07.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:07.170] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1642575a]
[11:49:07.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:07.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4faa3e50] was not registered for synchronization because synchronization is not active
[11:49:07.172] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [956824763, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:07.172] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:07.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:07.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:07.175] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4faa3e50]
[11:49:12.308] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:12.308] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16cfb2dd] was not registered for synchronization because synchronization is not active
[11:49:12.310] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [59563246, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:12.310] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:12.311] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:12.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:12.314] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16cfb2dd]
[11:49:12.314] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:12.314] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2490ca] was not registered for synchronization because synchronization is not active
[11:49:12.316] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1203090127, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:12.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:49:12.317] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:49:12.319] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:12.320] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b2490ca]
[11:49:12.320] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:12.320] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b8f0e4] was not registered for synchronization because synchronization is not active
[11:49:12.321] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [397228126, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:12.322] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:49:12.322] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:49:12.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:49:12.329] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b8f0e4]
[11:49:12.330] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:12.330] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f6e8b3] was not registered for synchronization because synchronization is not active
[11:49:12.331] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [99786708, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:12.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:49:12.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:49:12.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:49:12.369] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f6e8b3]
[11:49:14.915] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:14.915] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c1d5c1] was not registered for synchronization because synchronization is not active
[11:49:14.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [657454127, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:14.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:14.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:14.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:14.921] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26c1d5c1]
[11:49:14.923] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:14.923] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c7b0b0c] was not registered for synchronization because synchronization is not active
[11:49:14.932] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [487599878, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:14.932] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[11:49:14.933] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[11:49:14.937] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:14.937] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c7b0b0c]
[11:49:14.938] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:14.938] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54362e76] was not registered for synchronization because synchronization is not active
[11:49:14.939] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1715294557, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:14.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[11:49:14.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String), 0(Integer), 10(Integer)
[11:49:14.945] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:14.946] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54362e76]
[11:49:22.916] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:22.916] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20513760] was not registered for synchronization because synchronization is not active
[11:49:22.918] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1154326044, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:22.918] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:49:22.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:49:22.921] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:22.921] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20513760]
[11:49:22.922] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:22.922] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7710dad7] was not registered for synchronization because synchronization is not active
[11:49:22.924] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [679222240, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:22.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:49:22.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:49:22.927] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:49:22.928] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7710dad7]
[11:49:22.928] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:22.928] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c68299f] was not registered for synchronization because synchronization is not active
[11:49:22.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1563449973, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:22.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:49:22.931] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:49:22.937] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:49:22.938] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c68299f]
[11:49:22.938] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:49:22.939] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d6fffc4] was not registered for synchronization because synchronization is not active
[11:49:22.940] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1390992358, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:49:22.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:49:22.950] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:49:22.977] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:49:22.978] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d6fffc4]
[13:05:24.911] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:24.911] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a207d71] was not registered for synchronization because synchronization is not active
[13:05:24.915] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1948978184, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:24.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:05:24.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:05:24.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:24.921] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a207d71]
[13:05:24.922] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:24.922] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c20c1c6] was not registered for synchronization because synchronization is not active
[13:05:24.923] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [292684133, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:24.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:05:24.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:05:24.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:05:24.931] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c20c1c6]
[13:05:24.931] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:24.931] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63188ab] was not registered for synchronization because synchronization is not active
[13:05:24.933] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1996701565, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:24.934] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:05:24.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:05:24.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:05:24.972] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63188ab]
[13:05:28.495] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:28.496] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e72dda1] was not registered for synchronization because synchronization is not active
[13:05:28.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1491451305, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:28.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:05:28.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:05:28.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:28.502] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e72dda1]
[13:05:28.502] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:28.502] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba94ef2] was not registered for synchronization because synchronization is not active
[13:05:28.503] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [16290287, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:28.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:05:28.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:05:28.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:05:28.512] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba94ef2]
[13:05:28.512] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:28.513] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa82fab] was not registered for synchronization because synchronization is not active
[13:05:28.514] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1672666838, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:28.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:05:28.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:05:28.547] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:05:28.547] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa82fab]
[13:05:31.656] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:31.656] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fe748] was not registered for synchronization because synchronization is not active
[13:05:31.658] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1952393762, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:31.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:05:31.659] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[13:05:31.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:31.663] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fe748]
[13:05:31.716] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:31.716] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b51f2b] was not registered for synchronization because synchronization is not active
[13:05:31.718] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1253327633, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:31.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:05:31.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[13:05:31.723] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:31.724] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b51f2b]
[13:05:31.724] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:31.724] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e531927] was not registered for synchronization because synchronization is not active
[13:05:31.726] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [804074777, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:31.727] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:05:31.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:05:31.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:31.730] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e531927]
[13:05:31.730] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:31.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2820a24] was not registered for synchronization because synchronization is not active
[13:05:31.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1424143716, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:31.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:05:31.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:05:31.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:05:31.740] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2820a24]
[13:05:31.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:31.740] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1486bd5f] was not registered for synchronization because synchronization is not active
[13:05:31.743] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [245227585, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:31.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:05:31.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:05:31.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:05:31.775] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1486bd5f]
[13:05:37.743] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:37.743] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@603accfb] was not registered for synchronization because synchronization is not active
[13:05:37.745] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [794773491, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:37.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:05:37.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[13:05:37.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:37.748] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@603accfb]
[13:05:37.749] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:37.752] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d8b482] was not registered for synchronization because synchronization is not active
[13:05:37.753] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2074297293, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:37.753] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:05:37.754] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:05:37.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:37.758] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d8b482]
[13:05:37.758] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:37.758] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be7b113] was not registered for synchronization because synchronization is not active
[13:05:37.759] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1299215862, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:37.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:05:37.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[13:05:37.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:37.763] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be7b113]
[13:05:37.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:37.763] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530db831] was not registered for synchronization because synchronization is not active
[13:05:37.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1459084955, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:37.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:05:37.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:05:37.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:05:37.770] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530db831]
[13:05:37.771] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:37.771] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bb17bf] was not registered for synchronization because synchronization is not active
[13:05:37.772] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [897640415, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:37.772] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:05:37.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:05:37.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:05:37.856] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57bb17bf]
[13:05:39.631] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:39.632] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521fcac2] was not registered for synchronization because synchronization is not active
[13:05:39.633] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1008168168, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:39.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:05:39.634] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[13:05:39.636] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:39.636] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521fcac2]
[13:05:39.637] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:39.637] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33dc3e9e] was not registered for synchronization because synchronization is not active
[13:05:39.638] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [73513638, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:39.639] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:05:39.639] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:05:39.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:39.643] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33dc3e9e]
[13:05:39.643] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:39.643] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef1664e] was not registered for synchronization because synchronization is not active
[13:05:39.645] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [158944891, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:39.646] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:05:39.646] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:05:39.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:05:39.653] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef1664e]
[13:05:39.653] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:39.653] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3210459d] was not registered for synchronization because synchronization is not active
[13:05:39.655] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1718320478, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:39.656] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:05:39.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:05:39.687] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:05:39.688] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3210459d]
[13:05:53.619] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:53.619] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abb2649] was not registered for synchronization because synchronization is not active
[13:05:53.630] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1338891087, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:53.630] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:05:53.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:05:53.634] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:53.635] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abb2649]
[13:05:56.113] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:56.114] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d93ed9e] was not registered for synchronization because synchronization is not active
[13:05:56.124] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [221442660, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:56.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:05:56.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:05:56.126] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:05:56.127] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d93ed9e]
[13:05:56.127] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:05:56.127] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e149bf3] was not registered for synchronization because synchronization is not active
[13:05:56.128] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [221406731, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:05:56.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:05:56.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:05:56.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:05:56.152] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e149bf3]
[13:06:00.599] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:00.599] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a93d89] was not registered for synchronization because synchronization is not active
[13:06:00.601] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1017309674, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:00.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:06:00.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:06:00.603] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:00.604] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a93d89]
[13:06:00.605] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:00.605] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512113fd] was not registered for synchronization because synchronization is not active
[13:06:00.606] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [758864121, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:00.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:06:00.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:06:00.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:00.634] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@512113fd]
[13:06:02.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:02.224] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a8b4a9a] was not registered for synchronization because synchronization is not active
[13:06:02.226] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1943854154, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:02.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:06:02.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:06:02.228] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:02.229] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a8b4a9a]
[13:06:02.229] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:02.229] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff857ee] was not registered for synchronization because synchronization is not active
[13:06:02.230] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [664541223, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:02.231] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:06:02.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:06:02.244] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:06:02.245] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ff857ee]
[13:06:04.238] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:04.238] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4508ee] was not registered for synchronization because synchronization is not active
[13:06:04.240] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [907001949, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:04.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:06:04.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:06:04.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:04.244] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4508ee]
[13:06:04.244] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:04.244] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28c642d] was not registered for synchronization because synchronization is not active
[13:06:04.246] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [973003596, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:04.246] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:06:04.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:06:04.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:04.272] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28c642d]
[13:06:06.654] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:06.654] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371ddafd] was not registered for synchronization because synchronization is not active
[13:06:06.656] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [715626279, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:06.656] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:06:06.657] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:06:06.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:06.659] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371ddafd]
[13:06:06.659] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:06.660] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d7bf72] was not registered for synchronization because synchronization is not active
[13:06:06.665] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [64310623, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:06.665] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:06:06.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:06:06.674] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:06:06.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d7bf72]
[13:06:16.191] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:16.191] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4d75e3] was not registered for synchronization because synchronization is not active
[13:06:16.193] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [822041576, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:16.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:06:16.194] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:06:16.196] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:16.197] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4d75e3]
[13:06:16.197] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:16.197] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e17675] was not registered for synchronization because synchronization is not active
[13:06:16.198] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [843183582, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:16.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:06:16.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:06:16.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:06:16.209] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e17675]
[13:06:16.209] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:16.209] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a452b9e] was not registered for synchronization because synchronization is not active
[13:06:16.211] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2103755113, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:16.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:06:16.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:06:16.244] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:16.245] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a452b9e]
[13:06:24.788] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:24.788] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@551d0fdd] was not registered for synchronization because synchronization is not active
[13:06:24.790] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1988714062, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:24.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:06:24.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:06:24.792] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:24.793] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@551d0fdd]
[13:06:24.793] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:24.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c6a9bd] was not registered for synchronization because synchronization is not active
[13:06:24.794] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1895011772, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:24.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:06:24.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:06:24.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:06:24.802] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c6a9bd]
[13:06:24.803] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:24.803] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ddbb04b] was not registered for synchronization because synchronization is not active
[13:06:24.804] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [517976666, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:24.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:06:24.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[13:06:24.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:24.835] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ddbb04b]
[13:06:43.226] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:43.227] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ae0dffe] was not registered for synchronization because synchronization is not active
[13:06:43.228] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1443453316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:43.229] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:06:43.229] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:06:43.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:43.232] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ae0dffe]
[13:06:43.233] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:43.233] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@302c886d] was not registered for synchronization because synchronization is not active
[13:06:43.234] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2009904587, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:43.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:06:43.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:06:43.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:06:43.241] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@302c886d]
[13:06:43.242] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:43.242] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37028c2e] was not registered for synchronization because synchronization is not active
[13:06:43.244] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2065973436, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:43.244] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:06:43.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[13:06:43.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[13:06:43.262] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37028c2e]
[13:06:44.560] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:44.561] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41fa23c] was not registered for synchronization because synchronization is not active
[13:06:44.562] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [660249454, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:44.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:06:44.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:06:44.565] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:06:44.566] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41fa23c]
[13:06:44.566] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:44.566] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379ffa96] was not registered for synchronization because synchronization is not active
[13:06:44.568] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [121221699, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:44.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:06:44.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:06:44.574] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:06:44.575] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@379ffa96]
[13:06:44.575] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:06:44.575] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f5db38] was not registered for synchronization because synchronization is not active
[13:06:44.577] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1146498044, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:06:44.577] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:06:44.584] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[13:06:44.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:06:44.608] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11f5db38]
[13:07:07.953] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:07:07.954] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469ea183] was not registered for synchronization because synchronization is not active
[13:07:07.956] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [875053917, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:07:07.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:07:07.957] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:07:07.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:07:07.959] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@469ea183]
[13:07:07.959] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:07:07.959] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b39ac2] was not registered for synchronization because synchronization is not active
[13:07:07.961] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [189347876, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:07:07.961] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:07:07.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:07:07.984] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:07:07.984] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42b39ac2]
[13:07:13.648] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:07:13.648] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db487db] was not registered for synchronization because synchronization is not active
[13:07:13.650] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1185735898, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:07:13.650] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:07:13.651] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:07:13.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:07:13.653] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db487db]
[13:07:13.653] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:07:13.653] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e09f4] was not registered for synchronization because synchronization is not active
[13:07:13.654] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2058122095, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:07:13.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:07:13.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[13:07:13.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:07:13.682] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e09f4]
[13:08:22.202] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:08:22.202] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9a3616] was not registered for synchronization because synchronization is not active
[13:08:22.204] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1023270005, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:08:22.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:08:22.205] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:08:22.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:08:22.207] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e9a3616]
[13:08:22.208] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:08:22.208] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cae705d] was not registered for synchronization because synchronization is not active
[13:08:22.209] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [262625661, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:08:22.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:08:22.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:08:22.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:08:22.233] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cae705d]
[13:09:21.568] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:09:21.568] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358abc5f] was not registered for synchronization because synchronization is not active
[13:09:21.570] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [99252413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:09:21.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:09:21.571] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:09:21.573] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:09:21.574] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358abc5f]
[13:09:21.574] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:09:21.574] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddcc8c9] was not registered for synchronization because synchronization is not active
[13:09:21.575] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [746997400, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:09:21.575] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:09:21.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:09:21.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:09:21.602] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddcc8c9]
[13:21:22.892] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:23:17.099] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:17.111] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f0109b] was not registered for synchronization because synchronization is not active
[13:23:17.530] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [713117975, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:17.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:23:17.567] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:23:17.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:17.608] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64f0109b]
[13:23:18.748] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:18.748] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a96f0b] was not registered for synchronization because synchronization is not active
[13:23:18.761] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1862308120, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:18.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:23:18.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:23:18.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:18.767] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a96f0b]
[13:23:18.768] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:18.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23aeb83] was not registered for synchronization because synchronization is not active
[13:23:18.775] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1928462886, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:18.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:23:18.777] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:23:18.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:18.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23aeb83]
[13:23:32.453] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:32.453] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b32eea0] was not registered for synchronization because synchronization is not active
[13:23:32.455] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1668930541, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:32.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:23:32.457] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:23:32.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:32.466] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b32eea0]
[13:23:32.466] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:32.466] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3acce19a] was not registered for synchronization because synchronization is not active
[13:23:32.469] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [358882126, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:32.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:23:32.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:23:32.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:23:32.479] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3acce19a]
[13:23:32.479] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:32.479] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b4605e] was not registered for synchronization because synchronization is not active
[13:23:32.487] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2125876421, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:32.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:23:32.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:23:32.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:32.655] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b4605e]
[13:23:37.379] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:37.379] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db5581] was not registered for synchronization because synchronization is not active
[13:23:37.381] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1448784130, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:37.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[13:23:37.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[13:23:37.388] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:37.389] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44db5581]
[13:23:37.389] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:37.389] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118ce1aa] was not registered for synchronization because synchronization is not active
[13:23:37.391] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [538770892, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:37.391] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[13:23:37.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[13:23:37.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:37.413] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118ce1aa]
[13:23:40.082] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:40.083] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ea3967] was not registered for synchronization because synchronization is not active
[13:23:40.084] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [989228930, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:40.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:23:40.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:23:40.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:40.089] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78ea3967]
[13:23:40.089] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:40.090] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd6742] was not registered for synchronization because synchronization is not active
[13:23:40.091] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [184562853, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:40.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:23:40.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:23:40.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:23:40.100] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd6742]
[13:23:40.100] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:40.100] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5de3ff54] was not registered for synchronization because synchronization is not active
[13:23:40.104] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [378518788, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:40.104] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:23:40.114] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:23:40.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:40.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5de3ff54]
[13:23:44.769] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:44.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c6685e6] was not registered for synchronization because synchronization is not active
[13:23:44.771] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1297846237, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:44.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:23:44.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:23:44.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:44.776] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c6685e6]
[13:23:44.776] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:44.776] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c8574ab] was not registered for synchronization because synchronization is not active
[13:23:44.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [882415606, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:44.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:23:44.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:23:44.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:44.814] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c8574ab]
[13:23:50.645] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:50.645] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a46597] was not registered for synchronization because synchronization is not active
[13:23:50.646] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1282908603, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:50.647] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:23:50.647] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), devvv(String)
[13:23:50.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:50.650] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a46597]
[13:24:06.113] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:06.114] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2726af3d] was not registered for synchronization because synchronization is not active
[13:24:06.116] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1247968822, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:06.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:06.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:24:06.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:06.120] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2726af3d]
[13:24:06.120] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:06.120] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66010e5c] was not registered for synchronization because synchronization is not active
[13:24:06.122] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1956560907, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:06.122] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:06.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:24:06.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:24:06.137] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66010e5c]
[13:24:08.533] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:08.534] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c51e55c] was not registered for synchronization because synchronization is not active
[13:24:08.535] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1310637258, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:08.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:08.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test010(String)
[13:24:08.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:08.542] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c51e55c]
[13:24:10.503] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:10.503] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77dba7e6] was not registered for synchronization because synchronization is not active
[13:24:10.504] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [921087453, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:10.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:10.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:24:10.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:10.508] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77dba7e6]
[13:24:10.509] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:10.509] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b67dabf] was not registered for synchronization because synchronization is not active
[13:24:10.513] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [201582416, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:10.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:10.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:24:10.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:24:10.526] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b67dabf]
[13:24:12.015] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:12.015] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a433b55] was not registered for synchronization because synchronization is not active
[13:24:12.017] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [902643729, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:12.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:12.018] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: Test011(String)
[13:24:12.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:12.023] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a433b55]
[13:24:12.848] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:12.851] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c98b6] was not registered for synchronization because synchronization is not active
[13:24:12.853] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [75301517, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:12.854] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:12.854] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:24:12.856] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:12.857] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56c98b6]
[13:24:12.857] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:12.857] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e2ecea] was not registered for synchronization because synchronization is not active
[13:24:12.859] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1938408680, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:12.860] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:12.861] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:24:12.871] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:24:12.871] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59e2ecea]
[13:24:13.975] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:13.975] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad92c42] was not registered for synchronization because synchronization is not active
[13:24:13.978] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [154709093, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:13.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:13.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test012(String)
[13:24:13.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:13.983] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ad92c42]
[13:24:15.559] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:15.559] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a487a28] was not registered for synchronization because synchronization is not active
[13:24:15.561] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [915187169, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:15.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:15.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[13:24:15.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:15.565] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a487a28]
[13:24:15.566] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:15.566] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@504632e5] was not registered for synchronization because synchronization is not active
[13:24:15.567] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1074530144, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:15.567] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:15.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[13:24:15.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[13:24:15.577] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@504632e5]
[13:24:19.986] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:19.987] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52ed954f] was not registered for synchronization because synchronization is not active
[13:24:19.988] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2001460043, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:19.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:19.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:19.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:19.992] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52ed954f]
[13:24:19.992] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:19.992] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf5e1d4] was not registered for synchronization because synchronization is not active
[13:24:19.993] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [180109459, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:19.994] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:19.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:20.020] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:20.020] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf5e1d4]
[13:24:25.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:25.223] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641eb73b] was not registered for synchronization because synchronization is not active
[13:24:25.225] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1207413684, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:25.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:25.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[13:24:25.229] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:25.230] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@641eb73b]
[13:24:25.231] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:25.231] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8a91ce] was not registered for synchronization because synchronization is not active
[13:24:25.232] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1681437263, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:25.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:24:25.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:24:25.237] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:25.238] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e8a91ce]
[13:24:26.654] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:26.655] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5feb7512] was not registered for synchronization because synchronization is not active
[13:24:26.656] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [963108580, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:26.657] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:26.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:26.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:26.661] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5feb7512]
[13:24:26.661] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:26.661] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59385e64] was not registered for synchronization because synchronization is not active
[13:24:26.662] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1103638057, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:26.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:26.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:26.689] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:26.690] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59385e64]
[13:24:32.967] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:32.968] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1690284b] was not registered for synchronization because synchronization is not active
[13:24:32.969] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [715303508, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:32.970] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:32.970] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test015(String)
[13:24:32.974] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:32.974] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1690284b]
[13:24:34.230] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:34.231] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6db8d4f3] was not registered for synchronization because synchronization is not active
[13:24:34.232] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [379645157, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:34.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:34.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:34.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:34.236] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6db8d4f3]
[13:24:34.236] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:34.236] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f373acf] was not registered for synchronization because synchronization is not active
[13:24:34.238] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1596164067, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:34.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:34.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:34.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:34.263] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f373acf]
[13:24:36.239] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:36.240] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f448b62] was not registered for synchronization because synchronization is not active
[13:24:36.241] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2010929078, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:36.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:36.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test017(String)
[13:24:36.245] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:36.246] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f448b62]
[13:24:37.327] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:37.327] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b47589d] was not registered for synchronization because synchronization is not active
[13:24:37.329] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [134858133, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:37.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:37.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:37.331] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:37.332] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b47589d]
[13:24:37.332] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:37.332] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c64e8d] was not registered for synchronization because synchronization is not active
[13:24:37.334] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [165979910, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:37.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:37.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:37.359] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:37.359] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c64e8d]
[13:24:39.344] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:39.344] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173f1374] was not registered for synchronization because synchronization is not active
[13:24:39.345] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1714173461, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:39.345] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[13:24:39.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tester02(String)
[13:24:39.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:39.350] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@173f1374]
[13:24:39.351] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:39.351] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6143e447] was not registered for synchronization because synchronization is not active
[13:24:39.353] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1517444431, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:39.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:24:39.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 115(Integer), member(String)
[13:24:39.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:39.357] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6143e447]
[13:24:42.864] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:42.864] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29edc414] was not registered for synchronization because synchronization is not active
[13:24:42.866] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [220185221, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:42.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:42.867] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:42.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:42.869] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29edc414]
[13:24:42.870] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:42.870] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80804] was not registered for synchronization because synchronization is not active
[13:24:42.871] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [844284571, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:42.872] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:42.873] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:42.897] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:42.898] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e80804]
[13:24:48.545] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:48.545] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633d33ed] was not registered for synchronization because synchronization is not active
[13:24:48.547] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1360680942, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:48.547] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:24:48.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:24:48.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:48.551] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633d33ed]
[13:24:48.551] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:48.551] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59108732] was not registered for synchronization because synchronization is not active
[13:24:48.552] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2011496960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:48.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:24:48.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:24:48.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:48.577] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59108732]
[13:24:50.231] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:50.232] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0a435d] was not registered for synchronization because synchronization is not active
[13:24:50.233] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2110000755, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:50.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:24:50.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:24:50.236] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:24:50.237] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0a435d]
[13:24:50.237] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:50.237] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4397e729] was not registered for synchronization because synchronization is not active
[13:24:50.238] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1594107751, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:50.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:24:50.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:24:50.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:24:50.247] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4397e729]
[13:24:50.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:24:50.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b27c00c] was not registered for synchronization because synchronization is not active
[13:24:50.251] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2142128280, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:24:50.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:24:50.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:24:50.285] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:24:50.286] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b27c00c]
[13:25:31.923] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:31.923] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43303155] was not registered for synchronization because synchronization is not active
[13:25:31.933] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [452520778, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:31.933] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:25:31.933] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:25:31.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:31.937] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43303155]
[13:25:31.938] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:31.938] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a58593c] was not registered for synchronization because synchronization is not active
[13:25:31.940] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [815149034, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:31.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:25:31.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[13:25:31.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:31.943] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a58593c]
[13:25:31.944] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:31.944] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27e18c7f] was not registered for synchronization because synchronization is not active
[13:25:31.945] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [726584468, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:31.945] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:25:31.946] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:25:31.947] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:25:31.948] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27e18c7f]
[13:25:31.948] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:31.948] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd7c607] was not registered for synchronization because synchronization is not active
[13:25:31.949] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [909636861, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:31.950] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:25:31.950] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:25:32.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:25:32.334] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd7c607]
[13:25:33.895] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:33.895] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2c9dd2] was not registered for synchronization because synchronization is not active
[13:25:33.897] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [56012196, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:33.897] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:25:33.898] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:25:33.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:33.901] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b2c9dd2]
[13:25:33.901] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:33.901] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11751878] was not registered for synchronization because synchronization is not active
[13:25:33.902] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1823587560, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:33.902] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:25:33.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:25:33.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:25:33.911] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11751878]
[13:25:33.911] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:33.911] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56923fc9] was not registered for synchronization because synchronization is not active
[13:25:33.914] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1897219251, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:33.915] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:25:33.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:25:33.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:25:33.949] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56923fc9]
[13:25:45.031] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:45.032] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d273f12] was not registered for synchronization because synchronization is not active
[13:25:45.034] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [85568779, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:45.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:25:45.035] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:25:45.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:45.039] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d273f12]
[13:25:45.040] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:45.040] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b466a02] was not registered for synchronization because synchronization is not active
[13:25:45.041] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1882878267, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:45.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:25:45.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(String)
[13:25:45.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:45.046] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b466a02]
[13:25:45.047] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:45.047] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26bf2983] was not registered for synchronization because synchronization is not active
[13:25:45.048] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1440298365, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:45.048] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:25:45.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:25:45.051] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:25:45.051] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26bf2983]
[13:25:45.052] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:45.052] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14791604] was not registered for synchronization because synchronization is not active
[13:25:45.053] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1009535283, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:45.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:25:45.054] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:25:45.104] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:25:45.104] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14791604]
[13:25:46.927] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:46.928] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6ddf31] was not registered for synchronization because synchronization is not active
[13:25:46.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1449235799, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:46.929] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:25:46.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:25:46.932] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:46.933] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6ddf31]
[13:25:46.933] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:46.934] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787c8251] was not registered for synchronization because synchronization is not active
[13:25:46.935] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1081883366, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:46.935] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:25:46.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:25:46.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:25:46.944] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@787c8251]
[13:25:46.944] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:46.944] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a449ce9] was not registered for synchronization because synchronization is not active
[13:25:46.946] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2146460830, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:46.947] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:25:46.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:25:46.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:25:46.979] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a449ce9]
[13:25:48.338] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:48.338] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6275aade] was not registered for synchronization because synchronization is not active
[13:25:48.340] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1324112560, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:48.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:25:48.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:25:48.343] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:48.344] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6275aade]
[13:25:48.344] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:48.344] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e1c5d61] was not registered for synchronization because synchronization is not active
[13:25:48.345] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [312494646, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:48.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:25:48.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(String)
[13:25:48.348] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:48.349] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e1c5d61]
[13:25:48.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:48.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4abd04c5] was not registered for synchronization because synchronization is not active
[13:25:48.350] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1522891332, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:48.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:25:48.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:25:48.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 5
[13:25:48.364] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4abd04c5]
[13:25:48.364] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:48.365] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8f08d0] was not registered for synchronization because synchronization is not active
[13:25:48.366] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1529541148, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:48.366] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:25:48.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:25:48.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:25:48.480] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a8f08d0]
[13:25:50.406] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:50.407] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@685038dc] was not registered for synchronization because synchronization is not active
[13:25:50.408] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [934203591, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:50.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:25:50.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:25:50.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:50.412] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@685038dc]
[13:25:50.413] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:50.413] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf1a51e] was not registered for synchronization because synchronization is not active
[13:25:50.414] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [917162650, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:50.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:25:50.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:25:50.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:25:50.423] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cf1a51e]
[13:25:50.424] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:50.424] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d89106] was not registered for synchronization because synchronization is not active
[13:25:50.427] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1700407166, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:50.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:25:50.437] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:25:50.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:25:50.462] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d89106]
[13:26:26.394] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:26.394] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fabbc96] was not registered for synchronization because synchronization is not active
[13:26:26.396] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1882361534, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:26.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:26:26.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:26:26.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:26.400] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fabbc96]
[13:26:26.400] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:26.400] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2893096c] was not registered for synchronization because synchronization is not active
[13:26:26.401] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [179945153, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:26.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:26:26.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[13:26:26.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:26.404] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2893096c]
[13:26:26.405] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:26.405] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd621e8] was not registered for synchronization because synchronization is not active
[13:26:26.406] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1993082074, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:26.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:26:26.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:26:26.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:26:26.411] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd621e8]
[13:26:26.411] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:26.411] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e573086] was not registered for synchronization because synchronization is not active
[13:26:26.413] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1051595255, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:26.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:26:26.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:26:26.494] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:26:26.494] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e573086]
[13:26:34.446] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:34.447] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376c81a] was not registered for synchronization because synchronization is not active
[13:26:34.448] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [964192996, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:34.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:26:34.449] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:26:34.452] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:34.452] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376c81a]
[13:26:34.453] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:34.453] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e04acc] was not registered for synchronization because synchronization is not active
[13:26:34.454] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [753160491, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:34.454] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:26:34.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:26:34.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:26:34.461] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e04acc]
[13:26:34.462] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:34.462] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f719f02] was not registered for synchronization because synchronization is not active
[13:26:34.464] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1535138715, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:34.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:26:34.474] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:26:34.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:26:34.498] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f719f02]
[13:27:01.497] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:27:01.498] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348db1e4] was not registered for synchronization because synchronization is not active
[13:27:01.499] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1881337446, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:27:01.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:27:01.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:27:01.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:27:01.503] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348db1e4]
[13:27:01.503] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:27:01.504] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc7cfcd] was not registered for synchronization because synchronization is not active
[13:27:01.505] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1276936756, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:27:01.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:27:01.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[13:27:01.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:27:01.507] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bc7cfcd]
[13:27:01.508] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:27:01.508] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b28773] was not registered for synchronization because synchronization is not active
[13:27:01.509] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1820868619, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:27:01.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:27:01.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:27:01.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:27:01.512] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40b28773]
[13:27:01.512] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:27:01.512] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70848f1] was not registered for synchronization because synchronization is not active
[13:27:01.513] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [889665328, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:27:01.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:27:01.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:27:01.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:27:01.562] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70848f1]
[13:28:58.546] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:28:58.546] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9d434f] was not registered for synchronization because synchronization is not active
[13:28:58.547] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [803437216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:28:58.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:28:58.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:28:58.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:28:58.551] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c9d434f]
[13:28:58.551] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:28:58.551] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42ffb3c8] was not registered for synchronization because synchronization is not active
[13:28:58.552] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [441170842, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:28:58.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:28:58.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:28:58.560] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:28:58.561] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42ffb3c8]
[13:28:58.561] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:28:58.561] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@548649eb] was not registered for synchronization because synchronization is not active
[13:28:58.564] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2103297569, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:28:58.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:28:58.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:28:58.596] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:28:58.597] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@548649eb]
[13:29:00.072] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:00.072] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e3708da] was not registered for synchronization because synchronization is not active
[13:29:00.073] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [123861843, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:00.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:29:00.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:00.077] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:00.078] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e3708da]
[13:29:00.078] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:00.078] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485b1aea] was not registered for synchronization because synchronization is not active
[13:29:00.080] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1530982322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:00.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:29:00.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[13:29:00.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:00.082] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485b1aea]
[13:29:00.083] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:00.083] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b20f802] was not registered for synchronization because synchronization is not active
[13:29:00.084] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [351087866, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:00.084] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:29:00.084] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:00.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:29:00.087] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b20f802]
[13:29:00.087] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:00.087] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea188bb] was not registered for synchronization because synchronization is not active
[13:29:00.088] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1035717695, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:00.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:29:00.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:00.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:29:00.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea188bb]
[13:29:01.551] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:01.551] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbeb0ae] was not registered for synchronization because synchronization is not active
[13:29:01.553] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2009565769, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:01.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:29:01.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:29:01.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:01.557] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbeb0ae]
[13:29:01.557] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:01.557] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1352510b] was not registered for synchronization because synchronization is not active
[13:29:01.558] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [517286433, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:01.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:29:01.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:29:01.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:29:01.567] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1352510b]
[13:29:01.567] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:01.567] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c3b011] was not registered for synchronization because synchronization is not active
[13:29:01.569] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1358172673, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:01.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:29:01.577] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:29:01.603] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:29:01.603] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c3b011]
[13:29:03.137] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:03.137] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df8a251] was not registered for synchronization because synchronization is not active
[13:29:03.138] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [129089576, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:03.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:29:03.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:03.143] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:03.143] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df8a251]
[13:29:03.144] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:03.144] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@309389d6] was not registered for synchronization because synchronization is not active
[13:29:03.145] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1789334907, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:03.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:29:03.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[13:29:03.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:03.148] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@309389d6]
[13:29:03.149] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:03.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19548978] was not registered for synchronization because synchronization is not active
[13:29:03.150] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [841495794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:03.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:29:03.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:03.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:29:03.153] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19548978]
[13:29:03.153] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:03.153] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d51d425] was not registered for synchronization because synchronization is not active
[13:29:03.154] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [898579181, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:03.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:29:03.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[13:29:03.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:29:03.192] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d51d425]
[13:29:04.423] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:04.424] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773bfffe] was not registered for synchronization because synchronization is not active
[13:29:04.425] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1128786151, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:04.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:29:04.426] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:29:04.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:04.429] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773bfffe]
[13:29:04.429] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:04.429] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@136f0a84] was not registered for synchronization because synchronization is not active
[13:29:04.431] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [237066072, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:04.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:29:04.432] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:29:04.439] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:29:04.439] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@136f0a84]
[13:29:04.440] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:04.440] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2624cf48] was not registered for synchronization because synchronization is not active
[13:29:04.442] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1734113322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:04.443] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:29:04.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:29:04.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:29:04.476] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2624cf48]
[13:29:05.609] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:05.609] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43154ade] was not registered for synchronization because synchronization is not active
[13:29:05.610] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [344588740, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:05.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:29:05.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:29:05.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:05.615] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43154ade]
[13:29:05.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:05.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@370c720c] was not registered for synchronization because synchronization is not active
[13:29:05.619] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1352104551, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:05.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:29:05.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:29:05.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:05.622] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@370c720c]
[13:29:05.622] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:05.622] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41990714] was not registered for synchronization because synchronization is not active
[13:29:05.623] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1707256443, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:05.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:29:05.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:29:05.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:29:05.626] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41990714]
[13:29:05.627] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:05.627] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3c2dd2] was not registered for synchronization because synchronization is not active
[13:29:05.628] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [22120462, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:05.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:29:05.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:29:05.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:29:05.737] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b3c2dd2]
[13:29:07.645] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:07.646] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edfc22] was not registered for synchronization because synchronization is not active
[13:29:07.647] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1697012162, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:07.647] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:29:07.648] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:29:07.650] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:07.650] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67edfc22]
[13:29:07.651] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:07.651] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29a5a142] was not registered for synchronization because synchronization is not active
[13:29:07.653] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1849327311, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:07.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:29:07.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:29:07.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:29:07.661] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29a5a142]
[13:29:07.662] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:07.662] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e13cfc5] was not registered for synchronization because synchronization is not active
[13:29:07.664] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1985290473, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:07.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:29:07.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:29:07.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:29:07.697] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e13cfc5]
[13:29:08.945] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:08.946] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fe748] was not registered for synchronization because synchronization is not active
[13:29:08.947] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1952393762, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:08.947] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:29:08.948] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:29:08.951] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:08.952] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fe748]
[13:29:08.952] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:08.952] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f66610] was not registered for synchronization because synchronization is not active
[13:29:08.954] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [196255328, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:08.954] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:29:08.955] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[13:29:08.957] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:08.957] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f66610]
[13:29:08.958] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:08.958] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c080247] was not registered for synchronization because synchronization is not active
[13:29:08.959] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1571392621, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:08.959] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:29:08.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:29:08.964] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:08.965] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c080247]
[13:29:08.965] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:08.965] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486121] was not registered for synchronization because synchronization is not active
[13:29:08.966] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [21529283, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:08.967] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:29:08.967] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:29:09.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:29:09.010] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4486121]
[13:29:10.718] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:10.718] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e892556] was not registered for synchronization because synchronization is not active
[13:29:10.720] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1277995997, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:10.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:29:10.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:29:10.723] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:10.723] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e892556]
[13:29:10.724] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:10.724] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405d6a39] was not registered for synchronization because synchronization is not active
[13:29:10.725] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [827427139, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:10.726] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:29:10.726] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:29:10.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:29:10.733] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405d6a39]
[13:29:10.734] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:10.734] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4587650e] was not registered for synchronization because synchronization is not active
[13:29:10.735] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [755359677, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:10.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:29:10.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:29:10.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:29:10.767] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4587650e]
[13:29:13.760] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:13.761] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eae7d00] was not registered for synchronization because synchronization is not active
[13:29:13.762] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [923530822, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:13.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:29:13.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:29:13.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:13.767] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eae7d00]
[13:29:13.767] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:13.768] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421e55b0] was not registered for synchronization because synchronization is not active
[13:29:13.769] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1508869246, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:13.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:29:13.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(String)
[13:29:13.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:13.771] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421e55b0]
[13:29:13.772] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:13.772] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715e2e24] was not registered for synchronization because synchronization is not active
[13:29:13.773] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1974717427, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:13.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:29:13.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:29:13.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 5
[13:29:13.785] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715e2e24]
[13:29:13.785] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:13.785] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5acf12] was not registered for synchronization because synchronization is not active
[13:29:13.787] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1859441662, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:13.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:29:13.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[13:29:13.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:29:13.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5acf12]
[13:29:15.878] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:15.879] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5079a72f] was not registered for synchronization because synchronization is not active
[13:29:15.880] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [236063883, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:15.880] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:29:15.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:29:15.883] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:29:15.884] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5079a72f]
[13:29:15.884] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:15.884] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@628e8e2] was not registered for synchronization because synchronization is not active
[13:29:15.885] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1663571388, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:15.886] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:29:15.886] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:29:15.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:29:15.893] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@628e8e2]
[13:29:15.893] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:29:15.893] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22668b52] was not registered for synchronization because synchronization is not active
[13:29:15.896] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [869026821, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:29:15.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:29:15.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:29:15.927] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:29:15.927] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22668b52]
[13:32:30.637] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:30.637] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2b9c98] was not registered for synchronization because synchronization is not active
[13:32:30.639] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1772841699, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:30.639] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:32:30.640] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:32:30.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:30.643] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f2b9c98]
[13:32:30.643] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:30.643] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29634d6b] was not registered for synchronization because synchronization is not active
[13:32:30.644] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [116716033, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:30.644] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:32:30.645] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:32:30.651] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:32:30.651] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29634d6b]
[13:32:30.652] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:30.652] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c659e5] was not registered for synchronization because synchronization is not active
[13:32:30.653] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [535406433, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:30.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:32:30.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[13:32:30.686] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:32:30.686] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c659e5]
[13:32:36.673] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:36.673] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d93de09] was not registered for synchronization because synchronization is not active
[13:32:36.675] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [232569201, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:36.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:32:36.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:32:36.679] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:36.679] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d93de09]
[13:32:36.680] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:36.680] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd0e587] was not registered for synchronization because synchronization is not active
[13:32:36.681] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [577322273, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:36.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:32:36.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:32:36.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:32:36.689] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd0e587]
[13:32:36.689] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:36.689] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6df8073] was not registered for synchronization because synchronization is not active
[13:32:36.691] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [199206567, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:36.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:32:36.698] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:32:36.722] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:32:36.723] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6df8073]
[13:32:54.178] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:54.179] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65dacdaf] was not registered for synchronization because synchronization is not active
[13:32:54.180] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1709632446, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:54.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:32:54.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:32:54.183] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:54.184] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65dacdaf]
[13:32:54.184] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:54.184] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110c6656] was not registered for synchronization because synchronization is not active
[13:32:54.185] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [267066705, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:54.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:32:54.186] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:32:54.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:32:54.193] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@110c6656]
[13:32:54.193] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:54.193] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f49c20c] was not registered for synchronization because synchronization is not active
[13:32:54.195] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1782205746, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:54.195] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:32:54.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[13:32:54.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[13:32:54.214] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f49c20c]
[13:32:57.417] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:57.417] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215e347f] was not registered for synchronization because synchronization is not active
[13:32:57.418] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [205467977, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:57.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:32:57.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 14(Integer)
[13:32:57.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:57.423] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215e347f]
[13:32:57.423] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:57.423] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bc1ce5] was not registered for synchronization because synchronization is not active
[13:32:57.424] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1246881621, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:57.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:32:57.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 14(String)
[13:32:57.426] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:57.427] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75bc1ce5]
[13:32:57.427] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:57.427] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d4ee5] was not registered for synchronization because synchronization is not active
[13:32:57.428] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [878120448, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:57.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:32:57.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 14(Integer)
[13:32:57.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:32:57.432] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@522d4ee5]
[13:32:57.433] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:57.433] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ca9c9ba] was not registered for synchronization because synchronization is not active
[13:32:57.434] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1524851899, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:57.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:32:57.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 14(Integer)
[13:32:57.549] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:32:57.550] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ca9c9ba]
[13:32:59.261] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:59.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e5b76f1] was not registered for synchronization because synchronization is not active
[13:32:59.262] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1130302628, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:59.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:32:59.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:32:59.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:32:59.265] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e5b76f1]
[13:32:59.266] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:59.266] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c86d691] was not registered for synchronization because synchronization is not active
[13:32:59.267] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1429999838, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:59.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:32:59.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:32:59.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:32:59.275] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c86d691]
[13:32:59.275] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:32:59.275] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be253dc] was not registered for synchronization because synchronization is not active
[13:32:59.277] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [286743595, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:32:59.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:32:59.285] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:32:59.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:32:59.310] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1be253dc]
[13:33:02.378] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:33:02.378] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193787fd] was not registered for synchronization because synchronization is not active
[13:33:02.379] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [581280550, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:33:02.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND masteryn = 'n' AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[13:33:02.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[13:33:02.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:33:02.383] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193787fd]
[13:33:02.383] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:33:02.383] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a11962] was not registered for synchronization because synchronization is not active
[13:33:02.384] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [404533352, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:33:02.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE masteryn = 'n' AND status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[13:33:02.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[13:33:02.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:33:02.412] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a11962]
[18:03:11.187] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:11.187] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140290d2] was not registered for synchronization because synchronization is not active
[18:03:11.197] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1378499839, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:11.197] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[18:03:11.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[18:03:11.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:11.204] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140290d2]
[18:03:11.325] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:11.325] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bbde5] was not registered for synchronization because synchronization is not active
[18:03:11.327] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2129868365, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:11.327] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:11.328] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:11.330] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:11.331] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50bbde5]
[18:03:11.331] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:11.332] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e1c50d] was not registered for synchronization because synchronization is not active
[18:03:11.333] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2072738161, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:11.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:03:11.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:03:11.341] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:11.341] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60e1c50d]
[18:03:11.342] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:11.342] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb63192] was not registered for synchronization because synchronization is not active
[18:03:11.343] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1835874115, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:11.344] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:03:11.344] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:03:11.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:03:11.351] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb63192]
[18:03:11.352] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:11.352] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1f8fb9] was not registered for synchronization because synchronization is not active
[18:03:11.357] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1137275235, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:11.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:03:11.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:03:11.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:03:11.500] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b1f8fb9]
[18:03:18.751] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:18.752] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6410a31f] was not registered for synchronization because synchronization is not active
[18:03:18.753] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1355196844, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:18.753] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:18.754] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:18.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:18.756] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6410a31f]
[18:03:18.757] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:18.757] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bcb822e] was not registered for synchronization because synchronization is not active
[18:03:18.758] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [509417973, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:18.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:03:18.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:03:18.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:18.761] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bcb822e]
[18:03:18.761] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:18.761] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c7522f1] was not registered for synchronization because synchronization is not active
[18:03:18.762] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1750701858, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:18.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:03:18.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:03:18.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:03:18.770] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c7522f1]
[18:03:18.771] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:18.771] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2546812f] was not registered for synchronization because synchronization is not active
[18:03:18.772] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [40529475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:18.772] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:03:18.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:03:18.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:03:18.802] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2546812f]
[18:03:24.968] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:24.969] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6097c279] was not registered for synchronization because synchronization is not active
[18:03:24.970] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [722706921, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:24.970] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:24.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:24.973] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:24.973] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6097c279]
[18:03:24.974] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:24.974] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@136338ef] was not registered for synchronization because synchronization is not active
[18:03:24.975] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [762348485, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:24.975] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[18:03:24.976] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[18:03:24.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:24.979] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@136338ef]
[18:03:24.980] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:24.980] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d31f550] was not registered for synchronization because synchronization is not active
[18:03:24.981] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1456307492, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:24.981] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:24.982] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:24.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:24.984] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d31f550]
[18:03:30.598] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:30.598] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f168fec] was not registered for synchronization because synchronization is not active
[18:03:30.600] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1039632739, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:30.600] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:30.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:30.603] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:30.604] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f168fec]
[18:03:30.604] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:30.604] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18d01080] was not registered for synchronization because synchronization is not active
[18:03:30.605] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [486618264, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:30.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? AND masteryn = 'n' 
[18:03:30.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[18:03:30.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:30.609] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18d01080]
[18:03:30.610] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:03:30.610] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96eec4] was not registered for synchronization because synchronization is not active
[18:03:30.611] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1759536223, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:03:30.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:03:30.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:03:30.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:03:30.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96eec4]
[18:33:08.510] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:08.510] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28d4237e] was not registered for synchronization because synchronization is not active
[18:33:08.512] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1469278617, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:08.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:33:08.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[18:33:08.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:33:08.516] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28d4237e]
[18:33:08.517] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:08.517] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5451a7c8] was not registered for synchronization because synchronization is not active
[18:33:08.518] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [177084744, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:08.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:33:08.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:33:08.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:33:08.521] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5451a7c8]
[18:33:08.521] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:08.521] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de1c727] was not registered for synchronization because synchronization is not active
[18:33:08.523] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1351386815, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:08.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:33:08.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:33:08.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:33:08.530] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de1c727]
[18:33:08.530] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:08.531] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e7755c] was not registered for synchronization because synchronization is not active
[18:33:08.532] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [267326224, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:08.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:33:08.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:33:08.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:33:08.565] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e7755c]
