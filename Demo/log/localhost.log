[10:22:40.882] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[10:31:50.174] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:50.187] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5475e00a] was not registered for synchronization because synchronization is not active
[10:31:51.196] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1580800190, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:51.202] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[10:31:51.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:31:51.289] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:51.294] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5475e00a]
[10:31:51.309] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:51.310] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489] was not registered for synchronization because synchronization is not active
[10:31:51.313] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [5807794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:51.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:31:51.315] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:31:51.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:51.334] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489]
[10:31:51.339] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:51.340] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cdca0] was not registered for synchronization because synchronization is not active
[10:31:51.350] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1450687940, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:51.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:31:51.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:31:51.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:51.384] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cdca0]
[10:31:51.386] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:51.387] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3fa267] was not registered for synchronization because synchronization is not active
[10:31:51.389] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1201158083, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:51.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:31:51.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:31:51.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:31:51.402] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3fa267]
[10:31:51.402] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:51.403] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f201ef] was not registered for synchronization because synchronization is not active
[10:31:51.415] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [446561246, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:51.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:31:51.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:31:51.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:31:51.559] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f201ef]
[10:32:10.430] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:32:10.430] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5032442c] was not registered for synchronization because synchronization is not active
[10:32:10.432] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1598681167, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:32:10.432] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:32:10.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:32:10.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:32:10.436] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5032442c]
[10:32:10.437] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:32:10.437] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be9884] was not registered for synchronization because synchronization is not active
[10:32:10.439] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1420907532, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:32:10.439] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:32:10.440] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:32:10.443] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:32:10.444] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be9884]
[10:32:10.444] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:32:10.444] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cef109] was not registered for synchronization because synchronization is not active
[10:32:10.446] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [908888406, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:32:10.446] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:32:10.447] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:32:10.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:32:10.456] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cef109]
[10:32:10.456] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:32:10.456] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d7ae64] was not registered for synchronization because synchronization is not active
[10:32:10.460] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1183655107, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:32:10.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:32:10.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:32:10.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:32:10.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d7ae64]
[10:46:55.209] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:55.210] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@460062dc] was not registered for synchronization because synchronization is not active
[10:46:55.212] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [121465063, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:55.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:46:55.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:46:55.215] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:55.216] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@460062dc]
[10:46:55.217] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:55.218] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c2b294] was not registered for synchronization because synchronization is not active
[10:46:55.219] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1406358668, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:55.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:46:55.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:46:55.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:55.224] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71c2b294]
[10:46:55.224] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:55.225] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f125da] was not registered for synchronization because synchronization is not active
[10:46:55.226] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2027644908, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:55.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:46:55.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:46:55.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:46:55.236] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41f125da]
[10:46:55.236] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:55.236] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23336ec6] was not registered for synchronization because synchronization is not active
[10:46:55.240] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1416199447, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:55.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:46:55.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[10:46:55.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:46:55.278] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23336ec6]
[10:46:56.613] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:56.613] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72dd7d29] was not registered for synchronization because synchronization is not active
[10:46:56.615] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1447925847, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:56.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:46:56.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:46:56.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:56.619] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72dd7d29]
[10:46:56.620] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:56.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f7b491b] was not registered for synchronization because synchronization is not active
[10:46:56.628] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1500068396, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:56.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:46:56.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:46:56.632] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:56.633] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f7b491b]
[10:46:56.634] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:56.634] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77aa8112] was not registered for synchronization because synchronization is not active
[10:46:56.635] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1713100507, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:56.636] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[10:46:56.636] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:46:56.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[10:46:56.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77aa8112]
[10:46:56.675] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:56.675] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e04c7f] was not registered for synchronization because synchronization is not active
[10:46:56.676] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [774034411, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:56.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[10:46:56.677] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:46:56.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[10:46:56.709] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e04c7f]
[10:46:59.043] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:59.044] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c30b6c6] was not registered for synchronization because synchronization is not active
[10:46:59.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1649059806, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:59.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:46:59.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:46:59.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:59.049] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c30b6c6]
[10:46:59.050] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:59.050] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ba6fb6] was not registered for synchronization because synchronization is not active
[10:46:59.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [860877694, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:59.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:46:59.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:46:59.056] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:59.057] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35ba6fb6]
[10:51:37.360] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:51:37.360] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0791c8] was not registered for synchronization because synchronization is not active
[10:51:37.361] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1315641771, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:51:37.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:51:37.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:51:37.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:51:37.365] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0791c8]
[10:51:37.365] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:51:37.365] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a9817ed] was not registered for synchronization because synchronization is not active
[10:51:37.366] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1723792866, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:51:37.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:51:37.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:51:37.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:51:37.371] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a9817ed]
[10:54:40.575] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:54:40.575] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab22897] was not registered for synchronization because synchronization is not active
[10:54:40.577] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [630414739, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:54:40.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:54:40.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:54:40.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:54:40.581] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ab22897]
[10:54:40.582] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:54:40.582] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b8538c] was not registered for synchronization because synchronization is not active
[10:54:40.583] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [394510118, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:54:40.584] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:54:40.584] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[10:54:40.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:54:40.589] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b8538c]
[10:56:08.290] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:08.291] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1880a529] was not registered for synchronization because synchronization is not active
[10:56:08.293] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1821515376, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:08.293] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:08.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:08.295] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:08.296] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1880a529]
[10:56:08.297] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:08.297] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276a8cb5] was not registered for synchronization because synchronization is not active
[10:56:08.298] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1719974959, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:08.299] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:56:08.300] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:56:08.301] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:08.302] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276a8cb5]
[10:56:08.302] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:08.303] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231ace30] was not registered for synchronization because synchronization is not active
[10:56:08.304] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157952650, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:08.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:56:08.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:56:08.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:56:08.313] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@231ace30]
[10:56:08.313] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:08.314] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a271da6] was not registered for synchronization because synchronization is not active
[10:56:08.316] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [828518051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:08.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:56:08.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:56:08.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:56:08.355] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a271da6]
[10:56:11.599] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:11.599] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5522a986] was not registered for synchronization because synchronization is not active
[10:56:11.601] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [816654772, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:11.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:11.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:11.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:11.604] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5522a986]
[10:56:11.605] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:11.605] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc2356b] was not registered for synchronization because synchronization is not active
[10:56:11.607] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1535655722, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:11.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:56:11.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:56:11.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:11.612] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc2356b]
[10:56:11.613] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:11.613] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62e97663] was not registered for synchronization because synchronization is not active
[10:56:11.614] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [4027517, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:11.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:56:11.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:56:11.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:56:11.622] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62e97663]
[10:56:11.622] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:11.622] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad91a2b] was not registered for synchronization because synchronization is not active
[10:56:11.625] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [16698929, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:11.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:56:11.634] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[10:56:11.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:56:11.662] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad91a2b]
[10:56:12.798] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:12.799] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f4c81] was not registered for synchronization because synchronization is not active
[10:56:12.800] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1171678586, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:12.800] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:12.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:12.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:12.804] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f4c81]
[10:56:12.805] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:12.805] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57d16aa1] was not registered for synchronization because synchronization is not active
[10:56:12.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1642830426, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:12.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:56:12.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[10:56:12.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:12.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57d16aa1]
[10:56:12.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:12.811] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4de5a8a6] was not registered for synchronization because synchronization is not active
[10:56:12.813] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1942298579, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:12.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[10:56:12.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(String)
[10:56:12.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[10:56:12.817] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4de5a8a6]
[10:56:12.818] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:12.818] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@766fde5] was not registered for synchronization because synchronization is not active
[10:56:12.819] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [499748213, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:12.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[10:56:12.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[10:56:12.822] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[10:56:12.822] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@766fde5]
[10:56:12.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:12.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@319a2f39] was not registered for synchronization because synchronization is not active
[10:56:12.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1486341234, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:12.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[10:56:12.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[10:56:12.874] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[10:56:12.874] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@319a2f39]
[10:56:15.570] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:15.571] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541da477] was not registered for synchronization because synchronization is not active
[10:56:15.572] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1916469166, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:15.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:15.573] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:15.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:15.576] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541da477]
[10:56:15.577] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:15.577] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@279d22fb] was not registered for synchronization because synchronization is not active
[10:56:15.578] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [97008792, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:15.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:56:15.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:56:15.582] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:15.583] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@279d22fb]
[10:56:15.583] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:15.583] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e178aaf] was not registered for synchronization because synchronization is not active
[10:56:15.584] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1985678611, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:15.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:56:15.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:56:15.591] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:56:15.592] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e178aaf]
[10:56:15.593] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:15.593] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1f0274] was not registered for synchronization because synchronization is not active
[10:56:15.595] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [596116512, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:15.596] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:56:15.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:56:15.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:56:15.631] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1f0274]
[10:56:18.140] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:18.141] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c095e24] was not registered for synchronization because synchronization is not active
[10:56:18.143] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [758404127, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:18.143] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:18.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:18.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:18.146] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c095e24]
[10:56:18.147] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:18.147] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd089b9] was not registered for synchronization because synchronization is not active
[10:56:18.148] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [94395811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:18.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:56:18.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[10:56:18.153] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:18.153] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd089b9]
[10:56:18.154] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:18.154] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e3fcf8] was not registered for synchronization because synchronization is not active
[10:56:18.155] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2062724545, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:18.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[10:56:18.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(String)
[10:56:18.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:18.158] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54e3fcf8]
[10:56:18.159] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:18.159] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@799ec452] was not registered for synchronization because synchronization is not active
[10:56:18.160] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1580768390, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:18.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[10:56:18.161] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[10:56:18.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[10:56:18.163] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@799ec452]
[10:56:18.163] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:18.164] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52116a00] was not registered for synchronization because synchronization is not active
[10:56:18.165] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1401924811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:18.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[10:56:18.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[10:56:18.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[10:56:18.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52116a00]
[10:56:19.906] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:19.906] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ac2f34] was not registered for synchronization because synchronization is not active
[10:56:19.908] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [878758853, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:19.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:19.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:19.911] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:19.911] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ac2f34]
[10:56:19.912] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:19.912] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8c2f28] was not registered for synchronization because synchronization is not active
[10:56:19.913] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1507169351, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:19.914] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:56:19.914] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:56:19.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:19.917] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a8c2f28]
[10:56:19.918] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:19.918] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5de460fb] was not registered for synchronization because synchronization is not active
[10:56:19.919] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2133041987, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:19.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:56:19.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:56:19.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:56:19.927] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5de460fb]
[10:56:19.927] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:19.927] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5e9065] was not registered for synchronization because synchronization is not active
[10:56:19.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [665146279, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:19.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:56:19.938] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:56:19.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:56:19.963] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c5e9065]
[10:56:21.798] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:21.799] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15183335] was not registered for synchronization because synchronization is not active
[10:56:21.800] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1372304136, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:21.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:21.804] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:21.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:21.807] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15183335]
[10:56:21.808] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:21.808] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e7b080] was not registered for synchronization because synchronization is not active
[10:56:21.809] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [420409911, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:21.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:56:21.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:56:21.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:21.812] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e7b080]
[10:56:21.813] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:21.813] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b46bfa4] was not registered for synchronization because synchronization is not active
[10:56:21.814] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1888679880, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:21.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:56:21.815] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:56:21.821] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[10:56:21.821] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b46bfa4]
[10:56:21.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:21.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158c5d9b] was not registered for synchronization because synchronization is not active
[10:56:21.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [36197877, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:21.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:56:21.833] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[10:56:21.857] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:56:21.857] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158c5d9b]
[10:56:23.453] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:23.454] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6095c55f] was not registered for synchronization because synchronization is not active
[10:56:23.455] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1082245225, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:23.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:23.457] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:23.458] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:23.459] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6095c55f]
[10:56:23.459] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:23.460] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e8c736a] was not registered for synchronization because synchronization is not active
[10:56:23.461] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1092225663, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:23.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:56:23.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[10:56:23.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:23.465] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e8c736a]
[10:56:23.465] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:23.465] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4744aa85] was not registered for synchronization because synchronization is not active
[10:56:23.467] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [141506599, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:23.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[10:56:23.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[10:56:23.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[10:56:23.469] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4744aa85]
[10:56:23.470] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:23.470] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df69adc] was not registered for synchronization because synchronization is not active
[10:56:23.471] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [383416449, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:23.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[10:56:23.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[10:56:23.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[10:56:23.514] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df69adc]
[10:56:25.066] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:25.066] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f382] was not registered for synchronization because synchronization is not active
[10:56:25.067] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1441274948, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:25.067] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:56:25.068] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:56:25.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:25.070] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4017f382]
[10:56:25.071] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:56:25.071] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3baf6c93] was not registered for synchronization because synchronization is not active
[10:56:25.072] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [191154535, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:56:25.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:56:25.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[10:56:25.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:56:25.077] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3baf6c93]
[10:58:02.584] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:58:02.584] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@115a4590] was not registered for synchronization because synchronization is not active
[10:58:02.586] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [914436653, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:58:02.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:58:02.587] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:58:02.589] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:58:02.590] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@115a4590]
[10:58:02.590] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:58:02.591] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a11cc09] was not registered for synchronization because synchronization is not active
[10:58:02.592] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [696062085, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:58:02.592] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[10:58:02.592] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[10:58:02.595] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:58:02.596] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a11cc09]
[11:01:36.086] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:01:36.086] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db77a66] was not registered for synchronization because synchronization is not active
[11:01:36.087] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1826492216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:01:36.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:01:36.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:01:36.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:01:36.091] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3db77a66]
[11:01:36.092] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:01:36.092] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d18bbb] was not registered for synchronization because synchronization is not active
[11:01:36.093] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [970999086, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:01:36.093] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:01:36.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[11:01:36.098] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:01:36.099] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d18bbb]
[11:02:52.205] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:02:52.205] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d93de4] was not registered for synchronization because synchronization is not active
[11:02:52.208] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [809873447, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:02:52.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:02:52.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:02:52.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:02:52.212] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79d93de4]
[11:02:52.213] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:02:52.213] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@714eaa98] was not registered for synchronization because synchronization is not active
[11:02:52.214] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [371137419, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:02:52.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:02:52.215] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[11:02:52.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:02:52.218] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@714eaa98]
[11:04:05.230] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:04:05.231] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6004d462] was not registered for synchronization because synchronization is not active
[11:04:05.233] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [646869967, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:04:05.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:04:05.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:04:05.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:04:05.236] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6004d462]
[11:04:05.237] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:04:05.237] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3572bef] was not registered for synchronization because synchronization is not active
[11:04:05.238] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [5495096, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:04:05.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:04:05.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[11:04:05.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:04:05.242] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3572bef]
[11:05:24.205] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:05:24.205] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d6f20ee] was not registered for synchronization because synchronization is not active
[11:05:24.207] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [434941413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:05:24.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:05:24.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:05:24.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:05:24.210] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d6f20ee]
[11:05:24.211] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:05:24.211] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350b1667] was not registered for synchronization because synchronization is not active
[11:05:24.212] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [123749540, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:05:24.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:05:24.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[11:05:24.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:05:24.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@350b1667]
[11:06:48.286] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:06:48.286] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df7cf7] was not registered for synchronization because synchronization is not active
[11:06:48.287] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1225219464, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:06:48.287] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:06:48.288] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:06:48.293] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:06:48.293] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df7cf7]
[11:06:48.294] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:06:48.294] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a158817] was not registered for synchronization because synchronization is not active
[11:06:48.295] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1929156977, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:06:48.295] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:06:48.296] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[11:06:48.299] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:06:48.299] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a158817]
[11:08:34.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c4e05d7] was not registered for synchronization because synchronization is not active
[11:08:34.124] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [185660666, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:34.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:34.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:34.128] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c4e05d7]
[11:08:34.128] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.129] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51050dc0] was not registered for synchronization because synchronization is not active
[11:08:34.130] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2088670858, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:08:34.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:08:34.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:34.135] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51050dc0]
[11:08:34.135] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.135] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ac0eb] was not registered for synchronization because synchronization is not active
[11:08:34.137] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [473684471, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:08:34.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:08:34.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:08:34.145] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71ac0eb]
[11:08:34.145] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.145] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46dd2e5d] was not registered for synchronization because synchronization is not active
[11:08:34.147] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1921443057, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:08:34.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:08:34.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:08:34.182] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46dd2e5d]
[11:08:34.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.921] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a16b5d2] was not registered for synchronization because synchronization is not active
[11:08:34.923] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1537551513, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:34.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:34.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:34.926] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a16b5d2]
[11:08:34.927] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.927] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c2ceec] was not registered for synchronization because synchronization is not active
[11:08:34.928] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [161712206, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.928] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:08:34.928] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:34.931] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:34.932] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c2ceec]
[11:08:34.933] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.933] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea9c2f5] was not registered for synchronization because synchronization is not active
[11:08:34.934] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1512732568, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.934] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:08:34.935] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[11:08:34.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:34.937] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea9c2f5]
[11:08:34.937] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.937] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8363fb] was not registered for synchronization because synchronization is not active
[11:08:34.939] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [131541578, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:08:34.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:34.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:08:34.942] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c8363fb]
[11:08:34.942] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:34.942] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212755a4] was not registered for synchronization because synchronization is not active
[11:08:34.943] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [954047813, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:34.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:08:34.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:35.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:08:35.339] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@212755a4]
[11:08:39.978] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:39.978] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6042afd6] was not registered for synchronization because synchronization is not active
[11:08:39.980] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [459855007, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:39.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:39.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:39.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:39.984] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6042afd6]
[11:08:39.984] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:39.984] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc73801] was not registered for synchronization because synchronization is not active
[11:08:39.986] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1266788936, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:39.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:08:39.987] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:08:39.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:39.990] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc73801]
[11:08:39.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:39.991] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e564e26] was not registered for synchronization because synchronization is not active
[11:08:39.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [818928121, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:39.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:08:39.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:08:39.998] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:08:39.999] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e564e26]
[11:08:39.999] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:39.999] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3978c83a] was not registered for synchronization because synchronization is not active
[11:08:40.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1538978931, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:40.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:08:40.011] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:08:40.038] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:08:40.039] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3978c83a]
[11:08:41.198] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:41.198] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1909fbc8] was not registered for synchronization because synchronization is not active
[11:08:41.200] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1077082304, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:41.200] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:41.201] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:41.202] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:41.203] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1909fbc8]
[11:08:41.203] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:41.203] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4765eb76] was not registered for synchronization because synchronization is not active
[11:08:41.205] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [53314376, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:41.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:08:41.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[11:08:41.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:41.211] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4765eb76]
[11:08:41.211] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:41.211] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741550fd] was not registered for synchronization because synchronization is not active
[11:08:41.212] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1338753592, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:41.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:08:41.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(String)
[11:08:41.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:41.215] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741550fd]
[11:08:41.215] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:41.215] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c699161] was not registered for synchronization because synchronization is not active
[11:08:41.217] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1165805676, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:41.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:08:41.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[11:08:41.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:08:41.219] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c699161]
[11:08:41.220] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:41.220] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a18d691] was not registered for synchronization because synchronization is not active
[11:08:41.221] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1763504938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:41.222] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:08:41.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[11:08:41.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:08:41.256] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a18d691]
[11:08:43.563] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:43.563] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@100830fe] was not registered for synchronization because synchronization is not active
[11:08:43.565] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [370353993, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:43.565] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:43.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:43.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:43.568] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@100830fe]
[11:08:43.569] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:43.569] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64362898] was not registered for synchronization because synchronization is not active
[11:08:43.571] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1557604947, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:43.571] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:08:43.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:08:43.574] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:43.575] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64362898]
[11:08:43.575] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:43.575] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f307449] was not registered for synchronization because synchronization is not active
[11:08:43.577] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2014197483, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:43.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:08:43.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:08:43.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:08:43.585] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f307449]
[11:08:43.586] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:43.586] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38707d5e] was not registered for synchronization because synchronization is not active
[11:08:43.588] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [789926809, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:43.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:08:43.597] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:08:43.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:08:43.621] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38707d5e]
[11:08:46.484] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:46.485] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e961c7] was not registered for synchronization because synchronization is not active
[11:08:46.487] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [459236437, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:46.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:46.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:46.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:46.490] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e961c7]
[11:08:46.490] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:46.491] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e65e] was not registered for synchronization because synchronization is not active
[11:08:46.492] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1473819668, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:46.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:08:46.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:46.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:46.496] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1774e65e]
[11:08:46.497] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:46.497] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fedb555] was not registered for synchronization because synchronization is not active
[11:08:46.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [813316318, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:46.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:08:46.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[11:08:46.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:46.501] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fedb555]
[11:08:46.501] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:46.501] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2986b84b] was not registered for synchronization because synchronization is not active
[11:08:46.502] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [872016965, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:46.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:08:46.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:46.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:08:46.505] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2986b84b]
[11:08:46.506] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:46.506] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b90926b] was not registered for synchronization because synchronization is not active
[11:08:46.507] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [515809776, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:46.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:08:46.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[11:08:46.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:08:46.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b90926b]
[11:08:49.258] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:49.258] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bde7417] was not registered for synchronization because synchronization is not active
[11:08:49.260] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [645699049, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:49.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:49.261] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:49.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:49.264] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bde7417]
[11:08:49.264] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:49.265] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1099a1ea] was not registered for synchronization because synchronization is not active
[11:08:49.266] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [150731974, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:49.266] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:08:49.266] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:08:49.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:49.269] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1099a1ea]
[11:08:49.269] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:49.269] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434c3fc7] was not registered for synchronization because synchronization is not active
[11:08:49.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [867423440, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:49.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:08:49.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:08:49.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:08:49.278] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@434c3fc7]
[11:08:49.278] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:49.278] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2744ba74] was not registered for synchronization because synchronization is not active
[11:08:49.281] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1262595392, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:49.282] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:08:49.290] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:08:49.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:08:49.317] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2744ba74]
[11:08:50.639] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:50.639] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405eaa55] was not registered for synchronization because synchronization is not active
[11:08:50.641] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [133581443, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:50.641] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:50.641] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:50.643] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:50.644] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@405eaa55]
[11:08:59.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:59.522] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769c580] was not registered for synchronization because synchronization is not active
[11:08:59.524] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1020557715, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:59.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:08:59.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:08:59.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:59.527] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@769c580]
[11:08:59.528] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:59.528] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da919fb] was not registered for synchronization because synchronization is not active
[11:08:59.529] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2100408646, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:59.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:08:59.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:08:59.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:08:59.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@da919fb]
[11:08:59.533] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:59.533] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bd20106] was not registered for synchronization because synchronization is not active
[11:08:59.534] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1472529481, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:59.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:08:59.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:08:59.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:08:59.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bd20106]
[11:08:59.541] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:08:59.541] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48923727] was not registered for synchronization because synchronization is not active
[11:08:59.543] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1627563812, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:08:59.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:08:59.551] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:08:59.575] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:08:59.576] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48923727]
[11:09:02.091] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:02.092] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41b09172] was not registered for synchronization because synchronization is not active
[11:09:02.093] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1364385185, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:02.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:02.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:02.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:02.097] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41b09172]
[11:09:02.097] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:02.097] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d6ec13f] was not registered for synchronization because synchronization is not active
[11:09:02.099] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [405147523, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:02.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:09:02.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[11:09:02.102] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:02.102] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d6ec13f]
[11:09:02.103] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:02.103] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee9a14f] was not registered for synchronization because synchronization is not active
[11:09:02.104] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1405905559, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:02.104] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:09:02.105] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[11:09:02.106] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:02.107] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ee9a14f]
[11:09:02.107] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:02.107] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38108287] was not registered for synchronization because synchronization is not active
[11:09:02.108] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [697037159, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:02.108] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:09:02.109] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[11:09:02.113] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:02.114] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38108287]
[11:09:02.114] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:02.114] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c993b3b] was not registered for synchronization because synchronization is not active
[11:09:02.115] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1580859265, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:02.115] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:09:02.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[11:09:02.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:09:02.183] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c993b3b]
[11:09:03.794] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:03.795] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6ba4db] was not registered for synchronization because synchronization is not active
[11:09:03.796] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1863747300, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:03.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:03.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:03.799] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:03.799] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d6ba4db]
[11:09:03.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:03.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76694c5c] was not registered for synchronization because synchronization is not active
[11:09:03.801] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [539423180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:03.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:09:03.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:09:03.804] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:03.804] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76694c5c]
[11:09:03.805] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:03.805] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58a2e905] was not registered for synchronization because synchronization is not active
[11:09:03.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2130915424, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:03.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:09:03.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:09:03.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:09:03.814] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58a2e905]
[11:09:03.814] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:03.815] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7538f46f] was not registered for synchronization because synchronization is not active
[11:09:03.819] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [409687985, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:03.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:09:03.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:09:03.870] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:09:03.871] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7538f46f]
[11:09:05.189] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:05.190] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24409741] was not registered for synchronization because synchronization is not active
[11:09:05.191] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1508904576, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:05.194] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:05.196] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:05.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:05.199] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24409741]
[11:09:05.199] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:05.199] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a9239d3] was not registered for synchronization because synchronization is not active
[11:09:05.201] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [421249415, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:05.201] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:09:05.201] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:09:05.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:05.205] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a9239d3]
[11:09:05.205] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:05.205] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3966ebf3] was not registered for synchronization because synchronization is not active
[11:09:05.206] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [410914106, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:05.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:09:05.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(String)
[11:09:05.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:05.209] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3966ebf3]
[11:09:05.209] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:05.209] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e47c77] was not registered for synchronization because synchronization is not active
[11:09:05.210] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1166717716, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:05.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:09:05.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:09:05.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:09:05.214] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e47c77]
[11:09:05.214] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:05.215] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78fd0272] was not registered for synchronization because synchronization is not active
[11:09:05.216] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [9869411, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:05.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:09:05.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:09:05.246] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:09:05.248] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78fd0272]
[11:09:06.489] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:06.489] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d9441f4] was not registered for synchronization because synchronization is not active
[11:09:06.490] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1977087804, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:06.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:06.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:06.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:06.493] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d9441f4]
[11:09:06.494] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:06.494] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@684d03e7] was not registered for synchronization because synchronization is not active
[11:09:06.495] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1481893247, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:06.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:09:06.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:09:06.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:06.499] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@684d03e7]
[11:09:06.500] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:06.500] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@474ad73] was not registered for synchronization because synchronization is not active
[11:09:06.501] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1337772085, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:06.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:09:06.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:09:06.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:09:06.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@474ad73]
[11:09:06.510] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:06.510] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e91cb] was not registered for synchronization because synchronization is not active
[11:09:06.512] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2038063526, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:06.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:09:06.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:09:06.551] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:09:06.551] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@363e91cb]
[11:09:07.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:07.764] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a86d11f] was not registered for synchronization because synchronization is not active
[11:09:07.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [106090894, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:07.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:07.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:07.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:07.770] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a86d11f]
[11:09:07.770] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:07.770] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375d80b2] was not registered for synchronization because synchronization is not active
[11:09:07.772] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [929374413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:07.772] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:09:07.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:09:07.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:07.776] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@375d80b2]
[11:09:07.776] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:07.776] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6816a0bb] was not registered for synchronization because synchronization is not active
[11:09:07.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1854255967, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:07.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:09:07.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(String)
[11:09:07.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:07.781] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6816a0bb]
[11:09:07.782] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:07.782] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0c7e57] was not registered for synchronization because synchronization is not active
[11:09:07.784] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1215840701, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:07.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:09:07.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:09:07.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:09:07.786] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0c7e57]
[11:09:07.787] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:07.787] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5764f551] was not registered for synchronization because synchronization is not active
[11:09:07.788] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [633594919, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:07.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:09:07.789] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:09:08.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:09:08.007] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5764f551]
[11:09:09.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:09.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6653179d] was not registered for synchronization because synchronization is not active
[11:09:09.251] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1521858204, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:09.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:09.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:09.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:09.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6653179d]
[11:09:09.255] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:09.255] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56aa1c3] was not registered for synchronization because synchronization is not active
[11:09:09.256] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [629205224, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:09.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:09:09.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:09:09.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:09.260] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56aa1c3]
[11:09:09.260] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:09.260] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16480afe] was not registered for synchronization because synchronization is not active
[11:09:09.261] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [207391633, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:09.261] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:09:09.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:09:09.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:09:09.269] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16480afe]
[11:09:09.270] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:09.270] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cdf4621] was not registered for synchronization because synchronization is not active
[11:09:09.272] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1255721237, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:09.272] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:09:09.279] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:09:09.303] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:09:09.304] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cdf4621]
[11:09:12.059] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:09:12.059] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c7fb89] was not registered for synchronization because synchronization is not active
[11:09:12.061] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [856315923, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:09:12.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:09:12.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:09:12.063] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:09:12.064] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c7fb89]
[11:22:13.475] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:13.476] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59801c16] was not registered for synchronization because synchronization is not active
[11:22:13.477] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [552613989, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:13.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:22:13.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:22:13.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:22:13.481] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59801c16]
[11:22:13.482] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:13.482] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39139ccb] was not registered for synchronization because synchronization is not active
[11:22:13.483] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [670673170, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:13.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:22:13.484] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:22:13.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:22:13.486] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39139ccb]
[11:22:13.486] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:13.487] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22232edc] was not registered for synchronization because synchronization is not active
[11:22:13.487] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [414281839, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:13.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:22:13.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:22:13.494] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:22:13.495] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22232edc]
[11:22:13.495] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:13.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224ce5d6] was not registered for synchronization because synchronization is not active
[11:22:13.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [201137337, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:13.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:22:13.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:22:13.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:22:13.528] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@224ce5d6]
[11:22:17.679] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:17.679] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3180c697] was not registered for synchronization because synchronization is not active
[11:22:17.680] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1480795720, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:17.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:22:17.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:22:17.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:22:17.683] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3180c697]
[11:22:44.392] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:44.392] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d32c9a] was not registered for synchronization because synchronization is not active
[11:22:44.393] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1584758089, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:44.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:22:44.394] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:22:44.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:22:44.397] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d32c9a]
[11:23:36.117] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:36.118] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e56d152] was not registered for synchronization because synchronization is not active
[11:23:36.119] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1573096466, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:36.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:23:36.120] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:23:36.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:36.124] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e56d152]
[11:23:45.361] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:45.362] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7aa788] was not registered for synchronization because synchronization is not active
[11:23:45.363] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1158127392, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:45.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:23:45.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:23:45.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:45.366] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f7aa788]
[11:23:45.367] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:45.367] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185f9a7] was not registered for synchronization because synchronization is not active
[11:23:45.368] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [115283247, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:45.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:23:45.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:23:45.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:45.371] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185f9a7]
[11:23:45.371] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:45.371] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73bb1a9] was not registered for synchronization because synchronization is not active
[11:23:45.372] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1772082822, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:45.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:23:45.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:23:45.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:23:45.380] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73bb1a9]
[11:23:45.380] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:45.380] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268e8f7c] was not registered for synchronization because synchronization is not active
[11:23:45.382] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [914486771, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:45.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:23:45.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:23:45.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:23:45.412] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268e8f7c]
[11:23:48.605] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:48.606] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32322698] was not registered for synchronization because synchronization is not active
[11:23:48.607] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [254031664, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:48.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:23:48.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:23:48.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:48.612] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32322698]
[11:23:48.612] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:48.612] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4055daae] was not registered for synchronization because synchronization is not active
[11:23:48.613] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1682031242, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:48.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:23:48.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:23:48.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:48.617] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4055daae]
[11:23:48.617] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:48.617] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b095b1e] was not registered for synchronization because synchronization is not active
[11:23:48.618] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1131501657, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:48.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:23:48.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:23:48.627] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:23:48.628] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b095b1e]
[11:23:48.628] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:48.628] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7782b80e] was not registered for synchronization because synchronization is not active
[11:23:48.630] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [989463681, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:48.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:23:48.638] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:23:48.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:23:48.662] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7782b80e]
[11:23:49.788] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:49.789] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6487b975] was not registered for synchronization because synchronization is not active
[11:23:49.790] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [379238869, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:49.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:23:49.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:23:49.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:49.794] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6487b975]
[11:23:49.795] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:49.795] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ef2911] was not registered for synchronization because synchronization is not active
[11:23:49.796] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1888027532, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:49.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:23:49.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:23:49.799] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:49.799] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40ef2911]
[11:23:49.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:49.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec10bbf] was not registered for synchronization because synchronization is not active
[11:23:49.801] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2146213147, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:49.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:23:49.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:23:49.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[11:23:49.811] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec10bbf]
[11:23:49.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:49.812] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21d9995e] was not registered for synchronization because synchronization is not active
[11:23:49.813] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1857115198, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:49.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:23:49.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:23:49.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:23:49.925] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21d9995e]
[11:23:52.326] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:52.327] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bebaa4d] was not registered for synchronization because synchronization is not active
[11:23:52.329] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [152597252, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:52.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:23:52.330] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:23:52.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:52.332] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bebaa4d]
[11:23:52.333] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:23:52.333] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a7c7b3] was not registered for synchronization because synchronization is not active
[11:23:52.334] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1942318135, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:23:52.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:23:52.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:23:52.337] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:23:52.338] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25a7c7b3]
[11:24:15.302] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:15.302] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e8adc2] was not registered for synchronization because synchronization is not active
[11:24:15.304] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839179379, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:15.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:24:15.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:24:15.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:15.307] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22e8adc2]
[11:24:15.308] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:15.308] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e78d43] was not registered for synchronization because synchronization is not active
[11:24:15.309] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2113447699, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:15.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:24:15.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:24:15.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:15.312] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e78d43]
[11:24:33.262] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:33.263] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@621ab4ba] was not registered for synchronization because synchronization is not active
[11:24:33.264] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1451937187, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:33.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:24:33.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:24:33.267] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:33.267] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@621ab4ba]
[11:24:33.268] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:33.269] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ddcd51] was not registered for synchronization because synchronization is not active
[11:24:33.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [277324594, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:33.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:24:33.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[11:24:33.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:33.274] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ddcd51]
[11:24:33.275] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:33.275] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d427b] was not registered for synchronization because synchronization is not active
[11:24:33.276] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [842042937, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:33.276] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:24:33.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:24:33.278] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:33.279] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43d427b]
[11:24:36.066] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:36.066] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25009469] was not registered for synchronization because synchronization is not active
[11:24:36.068] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1303315262, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:36.068] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:24:36.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:24:36.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:36.071] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25009469]
[11:24:36.071] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:36.071] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfa733e] was not registered for synchronization because synchronization is not active
[11:24:36.073] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1904482152, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:36.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:24:36.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:24:36.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:24:36.076] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cfa733e]
[11:24:36.077] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:36.077] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@461de00e] was not registered for synchronization because synchronization is not active
[11:24:36.078] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1554847195, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:36.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:24:36.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:24:36.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:24:36.085] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@461de00e]
[11:24:36.085] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:24:36.086] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300fa252] was not registered for synchronization because synchronization is not active
[11:24:36.088] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1049096620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:24:36.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:24:36.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:24:36.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:24:36.118] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300fa252]
[11:26:32.662] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:32.662] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@156d3bd0] was not registered for synchronization because synchronization is not active
[11:26:32.664] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [900139501, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:32.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:32.665] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:32.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:32.667] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@156d3bd0]
[11:26:39.323] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:39.323] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aaa3410] was not registered for synchronization because synchronization is not active
[11:26:39.325] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1947411257, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:39.325] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:39.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:39.327] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:39.328] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aaa3410]
[11:26:39.329] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:39.329] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a803f68] was not registered for synchronization because synchronization is not active
[11:26:39.331] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [385504795, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:39.331] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:26:39.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:26:39.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:39.334] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a803f68]
[11:26:39.335] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:39.335] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@159ddf83] was not registered for synchronization because synchronization is not active
[11:26:39.336] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1076901401, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:39.336] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:26:39.337] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:26:39.343] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:26:39.344] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@159ddf83]
[11:26:39.344] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:39.344] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad7ac3e] was not registered for synchronization because synchronization is not active
[11:26:39.346] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [215720029, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:39.347] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:26:39.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:26:39.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:26:39.381] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ad7ac3e]
[11:26:41.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:41.173] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75ad4ec7] was not registered for synchronization because synchronization is not active
[11:26:41.174] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [778684144, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:41.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:41.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:41.177] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:41.177] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75ad4ec7]
[11:26:41.178] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:41.178] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e4da63] was not registered for synchronization because synchronization is not active
[11:26:41.179] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [292194756, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:41.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:26:41.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:26:41.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:41.183] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71e4da63]
[11:26:41.183] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:41.183] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709e7e2e] was not registered for synchronization because synchronization is not active
[11:26:41.184] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1579540348, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:41.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:26:41.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:26:41.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:26:41.192] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709e7e2e]
[11:26:41.192] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:41.192] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6137e7a3] was not registered for synchronization because synchronization is not active
[11:26:41.193] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1072601794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:41.194] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:26:41.201] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:26:41.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:26:41.226] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6137e7a3]
[11:26:43.162] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:43.163] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4750eaea] was not registered for synchronization because synchronization is not active
[11:26:43.164] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1030554131, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:43.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:43.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:43.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:43.167] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4750eaea]
[11:26:43.168] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:43.168] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@453583f] was not registered for synchronization because synchronization is not active
[11:26:43.169] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [27735502, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:43.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:26:43.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:26:43.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:43.173] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@453583f]
[11:26:43.173] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:43.173] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d7c54a] was not registered for synchronization because synchronization is not active
[11:26:43.174] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [80770705, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:43.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:26:43.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:26:43.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[11:26:43.182] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67d7c54a]
[11:26:43.182] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:43.182] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5989a37f] was not registered for synchronization because synchronization is not active
[11:26:43.183] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1573601123, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:43.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:26:43.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:26:43.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:26:43.233] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5989a37f]
[11:26:44.614] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:44.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b016d91] was not registered for synchronization because synchronization is not active
[11:26:44.616] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [260108944, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:44.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:44.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:44.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:44.619] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b016d91]
[11:26:44.620] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:44.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5158f11c] was not registered for synchronization because synchronization is not active
[11:26:44.621] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1139550556, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:44.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:26:44.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:26:44.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:44.625] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5158f11c]
[11:26:47.759] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:47.759] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fac443f] was not registered for synchronization because synchronization is not active
[11:26:47.760] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1020497305, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:47.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:26:47.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:26:47.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:47.764] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fac443f]
[11:26:47.764] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:47.764] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d677ab9] was not registered for synchronization because synchronization is not active
[11:26:47.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1705918191, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:47.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:26:47.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:26:47.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:26:47.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d677ab9]
[11:26:47.769] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:47.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d76c19] was not registered for synchronization because synchronization is not active
[11:26:47.770] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1658272361, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:47.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:26:47.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:26:47.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:26:47.778] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d76c19]
[11:26:47.779] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:26:47.779] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@206b2684] was not registered for synchronization because synchronization is not active
[11:26:47.780] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1514051742, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:26:47.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:26:47.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:26:47.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:26:47.811] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@206b2684]
[11:27:10.804] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:10.805] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dddd326] was not registered for synchronization because synchronization is not active
[11:27:10.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1287695307, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:10.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:27:10.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:27:10.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:10.809] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dddd326]
[11:27:10.809] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:10.809] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb173a3] was not registered for synchronization because synchronization is not active
[11:27:10.810] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1016554632, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:10.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:27:10.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[11:27:10.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:10.818] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb173a3]
[11:27:10.818] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:10.818] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c28bf8] was not registered for synchronization because synchronization is not active
[11:27:10.819] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [163092486, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:10.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:27:10.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(String)
[11:27:10.821] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:10.822] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c28bf8]
[11:27:10.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:10.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d5c509] was not registered for synchronization because synchronization is not active
[11:27:10.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1708977700, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:10.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:27:10.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[11:27:10.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 5
[11:27:10.837] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d5c509]
[11:27:10.837] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:10.837] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18661b45] was not registered for synchronization because synchronization is not active
[11:27:10.838] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [648530937, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:10.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:27:10.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 39(Integer)
[11:27:10.876] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:27:10.876] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18661b45]
[11:27:12.664] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:12.664] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@296e3618] was not registered for synchronization because synchronization is not active
[11:27:12.666] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1695358236, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:12.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:27:12.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:27:12.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:12.669] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@296e3618]
[11:27:12.670] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:12.670] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1980b9f6] was not registered for synchronization because synchronization is not active
[11:27:12.671] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1745144891, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:12.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:27:12.672] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:27:12.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:12.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1980b9f6]
[11:27:12.674] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:12.674] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ceca2a8] was not registered for synchronization because synchronization is not active
[11:27:12.675] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [615365544, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:12.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:27:12.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:27:12.681] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:27:12.682] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ceca2a8]
[11:27:12.682] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:12.683] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@626f5390] was not registered for synchronization because synchronization is not active
[11:27:12.684] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1231101370, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:12.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:27:12.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:27:12.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:27:12.716] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@626f5390]
[11:27:27.348] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:27.348] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5760a] was not registered for synchronization because synchronization is not active
[11:27:27.349] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1765808841, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:27.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:27:27.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:27:27.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:27.353] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5760a]
[11:27:27.353] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:27.353] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2747257f] was not registered for synchronization because synchronization is not active
[11:27:27.354] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1849743244, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:27.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:27:27.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:27:27.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:27.358] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2747257f]
[11:27:27.358] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:27.358] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f80c10e] was not registered for synchronization because synchronization is not active
[11:27:27.360] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [539309694, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:27.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:27:27.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:27:27.366] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:27:27.367] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f80c10e]
[11:27:27.367] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:27.367] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7087d2] was not registered for synchronization because synchronization is not active
[11:27:27.369] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1259515394, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:27.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:27:27.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:27:27.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:27:27.398] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7087d2]
[11:27:28.494] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:28.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4e96c3] was not registered for synchronization because synchronization is not active
[11:27:28.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [412407618, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:28.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:27:28.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:27:28.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:28.500] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4e96c3]
[11:27:28.501] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:28.501] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e7f69] was not registered for synchronization because synchronization is not active
[11:27:28.503] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2121592221, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:28.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:27:28.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:27:28.510] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:28.511] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e7f69]
[11:27:28.512] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:28.512] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ce3943] was not registered for synchronization because synchronization is not active
[11:27:28.513] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [258041782, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:28.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:27:28.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:27:28.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:27:28.520] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ce3943]
[11:27:28.521] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:28.521] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89bbfff] was not registered for synchronization because synchronization is not active
[11:27:28.522] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1065224570, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:28.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:27:28.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:27:28.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:27:28.554] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89bbfff]
[11:27:52.793] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:27:52.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387ffbed] was not registered for synchronization because synchronization is not active
[11:27:52.795] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [778163207, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:27:52.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:27:52.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:27:52.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:27:52.798] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387ffbed]
[11:28:43.725] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:28:43.725] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b740ce] was not registered for synchronization because synchronization is not active
[11:28:43.727] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2067144381, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:28:43.727] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:28:43.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:28:43.730] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:28:43.730] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77b740ce]
[11:29:03.501] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:29:27.511] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:27.521] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea4b176] was not registered for synchronization because synchronization is not active
[11:29:27.948] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1725444398, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:27.954] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[11:29:27.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[11:29:28.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:28.027] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea4b176]
[11:29:28.040] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.041] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40bb9a7f] was not registered for synchronization because synchronization is not active
[11:29:28.044] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [25595972, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:29:28.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:29:28.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:28.054] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40bb9a7f]
[11:29:28.063] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.063] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b19225a] was not registered for synchronization because synchronization is not active
[11:29:28.075] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1643836216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.075] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:29:28.077] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:29:28.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:28.087] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b19225a]
[11:29:28.089] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.089] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd5eddf] was not registered for synchronization because synchronization is not active
[11:29:28.091] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2147128631, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:29:28.093] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:29:28.105] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:29:28.106] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd5eddf]
[11:29:28.106] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.106] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e136dcb] was not registered for synchronization because synchronization is not active
[11:29:28.118] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [575364970, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:29:28.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:29:28.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:29:28.270] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e136dcb]
[11:29:28.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78db67ec] was not registered for synchronization because synchronization is not active
[11:29:28.802] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [685667258, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:29:28.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:29:28.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:28.806] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78db67ec]
[11:29:28.807] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.808] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72dccd6d] was not registered for synchronization because synchronization is not active
[11:29:28.809] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1679001599, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:29:28.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:29:28.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:28.815] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72dccd6d]
[11:29:28.816] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.816] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7434e241] was not registered for synchronization because synchronization is not active
[11:29:28.818] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1830760241, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:29:28.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:29:28.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:29:28.829] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7434e241]
[11:29:28.830] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:28.830] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ac73fe] was not registered for synchronization because synchronization is not active
[11:29:28.834] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [92364741, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:28.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:29:28.845] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:29:28.886] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:29:28.887] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63ac73fe]
[11:29:31.474] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:31.475] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a5e695b] was not registered for synchronization because synchronization is not active
[11:29:31.476] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157763889, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:31.477] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:29:31.477] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:29:31.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:31.481] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a5e695b]
[11:29:31.482] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:31.482] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c079f3a] was not registered for synchronization because synchronization is not active
[11:29:31.484] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [115180187, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:31.485] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:29:31.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:29:31.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:31.489] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c079f3a]
[11:29:31.490] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:31.490] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa4198c] was not registered for synchronization because synchronization is not active
[11:29:31.491] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [752470140, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:31.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:29:31.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:29:31.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:29:31.502] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fa4198c]
[11:29:31.503] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:31.503] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ccaa4d] was not registered for synchronization because synchronization is not active
[11:29:31.507] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1400626903, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:31.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:29:31.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:29:31.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:29:31.549] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ccaa4d]
[11:29:32.715] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:32.715] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42512e] was not registered for synchronization because synchronization is not active
[11:29:32.718] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2122275605, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:32.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:29:32.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:29:32.722] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:32.723] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42512e]
[11:29:32.723] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:32.724] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb19728] was not registered for synchronization because synchronization is not active
[11:29:32.733] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1296007801, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:32.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:29:32.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:29:32.738] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:32.739] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb19728]
[11:29:32.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:32.740] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72edbc6e] was not registered for synchronization because synchronization is not active
[11:29:32.741] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [632484823, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:32.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:29:32.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:29:32.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[11:29:32.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72edbc6e]
[11:29:32.759] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:32.760] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394d3099] was not registered for synchronization because synchronization is not active
[11:29:32.761] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1008636884, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:32.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:29:32.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:29:32.884] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:29:32.885] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@394d3099]
[11:29:38.161] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:38.161] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fcb33e6] was not registered for synchronization because synchronization is not active
[11:29:38.166] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [346321595, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:38.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:29:38.167] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:29:38.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:38.170] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fcb33e6]
[11:29:38.170] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:29:38.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aee61] was not registered for synchronization because synchronization is not active
[11:29:38.172] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1911701766, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:29:38.172] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:29:38.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:29:38.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:29:38.179] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aee61]
[11:31:24.216] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:24.217] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@230640c6] was not registered for synchronization because synchronization is not active
[11:31:24.219] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [362826051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:24.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:31:24.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:31:24.221] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:24.222] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@230640c6]
[11:31:24.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:24.223] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e64e32] was not registered for synchronization because synchronization is not active
[11:31:24.224] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [349950843, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:24.224] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:31:24.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:31:24.228] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:24.229] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e64e32]
[11:31:33.419] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:33.420] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b01b59e] was not registered for synchronization because synchronization is not active
[11:31:33.422] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [902404144, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:33.423] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:31:33.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:31:33.426] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:33.427] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b01b59e]
[11:31:33.427] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:33.427] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb8db54] was not registered for synchronization because synchronization is not active
[11:31:33.429] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [650685100, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:33.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:31:33.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:31:33.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:33.434] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cb8db54]
[11:31:38.665] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:38.666] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489] was not registered for synchronization because synchronization is not active
[11:31:38.668] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1555972031, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:38.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:31:38.669] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:31:38.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:38.672] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41659489]
[11:31:38.673] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:38.673] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2160b4db] was not registered for synchronization because synchronization is not active
[11:31:38.674] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [268878316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:38.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:31:38.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:31:38.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:38.680] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2160b4db]
[11:31:38.681] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:38.681] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5677bdc4] was not registered for synchronization because synchronization is not active
[11:31:38.682] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1725069742, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:38.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:31:38.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:31:38.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:31:38.693] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5677bdc4]
[11:31:38.693] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:38.694] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3fa267] was not registered for synchronization because synchronization is not active
[11:31:38.697] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1201158083, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:38.697] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:31:38.706] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:31:38.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:31:38.736] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a3fa267]
[11:31:41.805] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:31:41.806] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6384929b] was not registered for synchronization because synchronization is not active
[11:31:41.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [899613180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:31:41.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:31:41.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:31:41.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:31:41.811] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6384929b]
[11:39:23.923] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:39:23.923] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d981819] was not registered for synchronization because synchronization is not active
[11:39:23.925] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1783364482, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:39:23.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:39:23.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:39:23.928] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:39:23.928] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d981819]
[11:39:26.633] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:39:26.634] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a62407] was not registered for synchronization because synchronization is not active
[11:39:26.635] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [815317747, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:39:26.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:39:26.636] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:39:26.637] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:39:26.638] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a62407]
[11:39:26.639] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:39:26.639] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cac57f3] was not registered for synchronization because synchronization is not active
[11:39:26.640] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [621533596, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:39:26.640] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:39:26.641] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:39:26.644] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:39:26.644] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cac57f3]
[11:39:26.645] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:39:26.645] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e56d152] was not registered for synchronization because synchronization is not active
[11:39:26.646] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1573096466, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:39:26.646] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:39:26.647] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:39:26.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:39:26.654] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e56d152]
[11:39:26.655] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:39:26.655] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6445d07c] was not registered for synchronization because synchronization is not active
[11:39:26.657] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1736897566, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:39:26.657] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:39:26.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:39:26.693] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:39:26.694] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6445d07c]
[11:41:58.839] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:58.839] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b0b3559] was not registered for synchronization because synchronization is not active
[11:41:58.840] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1339883599, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:58.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:41:58.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:41:58.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:58.844] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b0b3559]
[11:41:58.845] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:58.845] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62e1ff7b] was not registered for synchronization because synchronization is not active
[11:41:58.846] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [569440010, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:58.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:41:58.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:41:58.849] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:58.850] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62e1ff7b]
[11:41:58.850] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:58.850] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b27d11] was not registered for synchronization because synchronization is not active
[11:41:58.851] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1491024388, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:58.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:41:58.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:41:58.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:41:58.860] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b27d11]
[11:41:58.860] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:58.860] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4834] was not registered for synchronization because synchronization is not active
[11:41:58.862] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1979622881, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:58.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:41:58.872] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:41:58.899] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:41:58.899] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4834]
[11:42:10.400] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:10.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5080c245] was not registered for synchronization because synchronization is not active
[11:42:10.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [777384758, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:10.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:42:10.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:42:10.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:42:10.407] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5080c245]
[11:42:10.408] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:10.408] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b40efb2] was not registered for synchronization because synchronization is not active
[11:42:10.410] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1943843372, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:10.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:42:10.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:42:10.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:42:10.413] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b40efb2]
[11:42:10.414] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:10.414] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed2cfa] was not registered for synchronization because synchronization is not active
[11:42:10.415] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [172813244, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:10.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:42:10.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:42:10.423] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:42:10.424] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14ed2cfa]
[11:42:10.424] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:10.424] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd314fc] was not registered for synchronization because synchronization is not active
[11:42:10.426] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1460754423, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:10.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:42:10.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:42:10.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:42:10.464] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fd314fc]
[11:42:31.899] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:31.900] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6248c503] was not registered for synchronization because synchronization is not active
[11:42:31.902] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2012418818, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:31.902] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:42:31.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:42:31.905] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:42:31.906] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6248c503]
[11:42:31.907] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:31.907] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5239ca88] was not registered for synchronization because synchronization is not active
[11:42:31.908] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [815035809, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:31.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:42:31.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:42:31.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:42:31.912] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5239ca88]
[11:42:31.913] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:31.913] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632eb20b] was not registered for synchronization because synchronization is not active
[11:42:31.915] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1016866945, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:31.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:42:31.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:42:31.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:42:31.925] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632eb20b]
[11:42:31.925] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:31.925] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c31f9b5] was not registered for synchronization because synchronization is not active
[11:42:31.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [205600842, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:31.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:42:31.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:42:31.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:42:31.969] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c31f9b5]
[11:43:07.802] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:07.803] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af01a1d] was not registered for synchronization because synchronization is not active
[11:43:07.804] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [533828322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:07.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:43:07.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:43:07.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:43:07.808] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af01a1d]
[11:43:07.809] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:07.809] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376ba1c] was not registered for synchronization because synchronization is not active
[11:43:07.810] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1958933154, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:07.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:43:07.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:43:07.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:43:07.814] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6376ba1c]
[11:43:07.815] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:07.815] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@426e231d] was not registered for synchronization because synchronization is not active
[11:43:07.816] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [437861758, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:07.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:43:07.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:43:07.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:43:07.824] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@426e231d]
[11:43:07.824] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:07.824] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7c8126] was not registered for synchronization because synchronization is not active
[11:43:07.826] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1548894595, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:07.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:43:07.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:43:07.858] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:43:07.859] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7c8126]
[11:43:34.817] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:34.817] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78861a6f] was not registered for synchronization because synchronization is not active
[11:43:34.819] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1730311743, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:34.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:43:34.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:43:34.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:43:34.824] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78861a6f]
[11:43:34.824] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:34.825] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27697f76] was not registered for synchronization because synchronization is not active
[11:43:34.826] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2015586563, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:34.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:43:34.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:43:34.829] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:43:34.829] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27697f76]
[11:43:34.830] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:34.830] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d3263b] was not registered for synchronization because synchronization is not active
[11:43:34.831] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [210757674, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:34.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:43:34.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:43:34.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:43:34.839] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d3263b]
[11:43:34.839] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:43:34.839] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b8e2f] was not registered for synchronization because synchronization is not active
[11:43:34.841] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [93589357, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:43:34.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:43:34.853] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:43:34.878] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:43:34.879] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33b8e2f]
[11:44:29.809] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:29.810] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20215804] was not registered for synchronization because synchronization is not active
[11:44:29.811] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1061989740, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:29.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:44:29.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:44:29.815] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:29.815] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20215804]
[11:44:29.816] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:29.816] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106b60c2] was not registered for synchronization because synchronization is not active
[11:44:29.817] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [761454897, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:29.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:44:29.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:44:29.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:29.821] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106b60c2]
[11:44:29.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:29.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@112c0d24] was not registered for synchronization because synchronization is not active
[11:44:29.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1075920073, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:29.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:44:29.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:44:29.833] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:44:29.833] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@112c0d24]
[11:44:29.834] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:29.834] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@652443b9] was not registered for synchronization because synchronization is not active
[11:44:29.836] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1847849025, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:29.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:44:29.845] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:44:29.876] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:44:29.877] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@652443b9]
[11:44:44.056] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:44.057] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70136272] was not registered for synchronization because synchronization is not active
[11:44:44.059] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [585674178, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:44.059] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:44:44.060] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:44:44.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:44.063] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70136272]
[11:44:44.063] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:44.063] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4937fa8b] was not registered for synchronization because synchronization is not active
[11:44:44.064] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [837258563, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:44.065] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:44:44.065] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:44:44.067] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:44.068] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4937fa8b]
[11:44:44.068] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:44.068] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f5d485] was not registered for synchronization because synchronization is not active
[11:44:44.069] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [500174131, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:44.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:44:44.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:44:44.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:44:44.077] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f5d485]
[11:44:44.077] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:44.078] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55a6704] was not registered for synchronization because synchronization is not active
[11:44:44.079] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1150379488, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:44.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:44:44.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:44:44.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:44:44.112] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55a6704]
[11:44:54.146] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:54.147] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108b3d8e] was not registered for synchronization because synchronization is not active
[11:44:54.148] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1556185024, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:54.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:44:54.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:44:54.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:54.151] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108b3d8e]
[11:44:54.152] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:54.152] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539a07e1] was not registered for synchronization because synchronization is not active
[11:44:54.154] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [818391970, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:54.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:44:54.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:44:54.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:54.158] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@539a07e1]
[11:44:54.158] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:54.158] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646ea7d1] was not registered for synchronization because synchronization is not active
[11:44:54.160] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [61506771, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:54.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:44:54.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:44:54.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:54.163] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646ea7d1]
[11:44:54.163] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:54.163] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d573ba2] was not registered for synchronization because synchronization is not active
[11:44:54.164] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [506836716, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:54.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:44:54.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:44:54.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:54.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d573ba2]
[11:44:58.231] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:58.232] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43744034] was not registered for synchronization because synchronization is not active
[11:44:58.233] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [351361852, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:58.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:44:58.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:44:58.235] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:58.236] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43744034]
[11:44:58.237] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:58.237] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fef7467] was not registered for synchronization because synchronization is not active
[11:44:58.238] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [415247392, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:58.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:44:58.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:44:58.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:58.243] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fef7467]
[11:44:58.243] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:58.243] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7ac166] was not registered for synchronization because synchronization is not active
[11:44:58.244] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [621038045, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:58.245] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:44:58.245] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:44:58.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:58.248] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7ac166]
[11:44:58.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:58.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289e7580] was not registered for synchronization because synchronization is not active
[11:44:58.250] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1921554039, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:58.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:44:58.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:44:58.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:58.257] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289e7580]
[11:46:09.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:09.764] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e3db8a8] was not registered for synchronization because synchronization is not active
[11:46:09.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1941014082, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:09.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:46:09.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:46:09.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:09.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e3db8a8]
[11:46:09.769] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:09.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d520151] was not registered for synchronization because synchronization is not active
[11:46:09.770] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [134659349, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:09.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:46:09.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:46:09.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:09.774] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d520151]
[11:46:09.774] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:09.774] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff810ee] was not registered for synchronization because synchronization is not active
[11:46:09.776] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1112175306, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:09.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:46:09.777] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:46:09.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:09.780] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ff810ee]
[11:46:09.780] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:09.780] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@353f589d] was not registered for synchronization because synchronization is not active
[11:46:09.781] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [9338238, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:09.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:46:09.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:46:09.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:09.789] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@353f589d]
[11:46:12.815] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:12.815] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1c577a] was not registered for synchronization because synchronization is not active
[11:46:12.816] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [721249637, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:12.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:46:12.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:46:12.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:12.820] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1c577a]
[11:46:12.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:12.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbe4416] was not registered for synchronization because synchronization is not active
[11:46:12.823] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1144738455, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:12.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:46:12.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:46:12.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:12.826] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbe4416]
[11:46:12.826] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:12.827] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4653fee8] was not registered for synchronization because synchronization is not active
[11:46:12.828] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [79233341, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:12.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:46:12.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:46:12.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:12.832] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4653fee8]
[11:46:12.833] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:12.833] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467eec94] was not registered for synchronization because synchronization is not active
[11:46:12.833] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [166173858, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:12.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:46:12.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:46:12.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:12.839] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@467eec94]
[11:46:47.090] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:47.091] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afbcc53] was not registered for synchronization because synchronization is not active
[11:46:47.092] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1336986319, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:47.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:46:47.093] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:46:47.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:47.095] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6afbcc53]
[11:46:47.095] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:47.095] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f32726d] was not registered for synchronization because synchronization is not active
[11:46:47.097] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1079776401, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:47.097] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:46:47.098] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:46:47.100] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:47.101] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f32726d]
[11:46:47.101] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:47.101] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3372a4ba] was not registered for synchronization because synchronization is not active
[11:46:47.102] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [428592978, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:47.103] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:46:47.103] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:46:47.105] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:47.105] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3372a4ba]
[11:46:47.106] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:46:47.106] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b4ac33] was not registered for synchronization because synchronization is not active
[11:46:47.107] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [438879154, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:46:47.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:46:47.108] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:46:47.112] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:46:47.112] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b4ac33]
[11:48:03.699] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:03.699] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f5ddb0] was not registered for synchronization because synchronization is not active
[11:48:03.701] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [138339063, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:03.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:48:03.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:48:03.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:03.704] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f5ddb0]
[11:48:03.705] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:03.705] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7988007a] was not registered for synchronization because synchronization is not active
[11:48:03.707] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1100451620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:03.707] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:48:03.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:48:03.710] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:03.711] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7988007a]
[11:48:03.711] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:03.712] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f595378] was not registered for synchronization because synchronization is not active
[11:48:03.713] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [879816112, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:03.713] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:48:03.714] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:48:03.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:03.717] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f595378]
[11:48:03.717] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:03.717] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55328965] was not registered for synchronization because synchronization is not active
[11:48:03.719] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1685519810, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:03.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:48:03.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:48:03.724] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:03.725] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55328965]
[11:48:18.826] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:18.827] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11258899] was not registered for synchronization because synchronization is not active
[11:48:18.828] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [533087216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:18.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:48:18.829] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:48:18.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:18.832] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11258899]
[11:48:18.832] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:18.832] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4d0ce9] was not registered for synchronization because synchronization is not active
[11:48:18.834] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1281973260, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:18.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:48:18.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:48:18.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:18.837] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e4d0ce9]
[11:48:18.837] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:18.837] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfa4a9d] was not registered for synchronization because synchronization is not active
[11:48:18.839] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1691902387, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:18.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:48:18.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:48:18.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:18.844] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfa4a9d]
[11:48:18.844] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:18.844] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30de8da5] was not registered for synchronization because synchronization is not active
[11:48:18.846] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [255823514, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:18.846] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:48:18.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:48:18.851] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:18.852] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30de8da5]
[11:48:22.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:22.991] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b366e24] was not registered for synchronization because synchronization is not active
[11:48:22.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1480110807, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:22.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:48:22.993] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:48:22.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:22.996] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b366e24]
[11:48:22.997] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:22.997] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de8b74c] was not registered for synchronization because synchronization is not active
[11:48:22.998] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1109059236, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:22.998] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:48:22.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:48:23.003] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:23.003] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de8b74c]
[11:48:23.004] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:23.004] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4570327d] was not registered for synchronization because synchronization is not active
[11:48:23.005] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1741830352, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:23.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:48:23.006] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:48:23.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:23.008] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4570327d]
[11:48:23.008] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:48:23.008] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b7cd41] was not registered for synchronization because synchronization is not active
[11:48:23.009] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [68922877, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:48:23.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:48:23.011] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:48:23.015] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:48:23.016] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b7cd41]
[11:54:53.159] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:54:53.160] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f3a30b] was not registered for synchronization because synchronization is not active
[11:54:53.161] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [809327231, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:54:53.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:54:53.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:54:53.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:54:53.165] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f3a30b]
[11:54:53.166] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:54:53.166] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1822a6] was not registered for synchronization because synchronization is not active
[11:54:53.168] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1713454042, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:54:53.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:54:53.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:54:53.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:54:53.172] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1822a6]
[11:54:53.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:54:53.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dde31d0] was not registered for synchronization because synchronization is not active
[11:54:53.173] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1256586995, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:54:53.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:54:53.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:54:53.176] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:54:53.177] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dde31d0]
[11:54:53.177] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:54:53.177] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2857f289] was not registered for synchronization because synchronization is not active
[11:54:53.178] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1846204424, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:54:53.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:54:53.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:54:53.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:54:53.186] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2857f289]
[11:55:27.124] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:27.124] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcc31ce] was not registered for synchronization because synchronization is not active
[11:55:27.125] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1134674315, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:27.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:27.126] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:27.128] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:27.128] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcc31ce]
[11:55:27.129] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:27.129] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d1b7ea8] was not registered for synchronization because synchronization is not active
[11:55:27.130] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [135180663, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:27.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[11:55:27.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String), free(String), SEUNGWAN NA(String)
[11:55:27.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:27.135] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d1b7ea8]
[11:55:27.135] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:27.135] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f4bf22f] was not registered for synchronization because synchronization is not active
[11:55:27.136] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1197398543, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:27.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[11:55:27.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), SEUNGWAN NA(String)
[11:55:27.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:27.140] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f4bf22f]
[11:55:27.140] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:27.140] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4254aaba] was not registered for synchronization because synchronization is not active
[11:55:27.141] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [372064988, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:27.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:27.142] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), 0(Integer), 10(Integer)
[11:55:27.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:27.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4254aaba]
[11:55:45.600] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:45.600] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a1675db] was not registered for synchronization because synchronization is not active
[11:55:45.602] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1133887938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:45.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:45.603] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:45.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:45.606] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a1675db]
[11:55:45.606] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:45.606] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba48a35] was not registered for synchronization because synchronization is not active
[11:55:45.607] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2012084500, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:45.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:45.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:45.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:45.611] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ba48a35]
[11:55:45.611] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:45.611] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8494c1] was not registered for synchronization because synchronization is not active
[11:55:45.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1288588222, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:45.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:45.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:45.620] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:55:45.620] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8494c1]
[11:55:45.621] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:45.621] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4796d545] was not registered for synchronization because synchronization is not active
[11:55:45.625] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1391102053, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:45.625] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:45.633] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:55:45.657] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:55:45.658] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4796d545]
[11:55:47.381] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:47.382] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f48525] was not registered for synchronization because synchronization is not active
[11:55:47.383] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1847950199, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:47.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:47.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:47.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:47.387] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45f48525]
[11:55:47.388] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:47.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13804b01] was not registered for synchronization because synchronization is not active
[11:55:47.389] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [886599476, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:47.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:55:47.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[11:55:47.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:47.393] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13804b01]
[11:55:47.394] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:47.394] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a87b9] was not registered for synchronization because synchronization is not active
[11:55:47.395] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1125169335, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:47.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:55:47.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[11:55:47.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:47.398] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34a87b9]
[11:55:47.399] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:47.399] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7379f446] was not registered for synchronization because synchronization is not active
[11:55:47.400] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [651680883, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:47.400] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:55:47.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[11:55:47.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:55:47.404] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7379f446]
[11:55:47.404] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:47.405] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c16e2f8] was not registered for synchronization because synchronization is not active
[11:55:47.406] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [47769424, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:47.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:55:47.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[11:55:47.447] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:55:47.448] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c16e2f8]
[11:55:51.550] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:51.550] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55c7c1bf] was not registered for synchronization because synchronization is not active
[11:55:51.551] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [574696499, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:51.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:51.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:51.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:51.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55c7c1bf]
[11:55:51.555] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:51.556] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd19066] was not registered for synchronization because synchronization is not active
[11:55:51.557] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [795895193, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:51.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:51.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:51.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:51.562] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bd19066]
[11:55:51.562] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:51.562] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@597595f1] was not registered for synchronization because synchronization is not active
[11:55:51.563] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [243800694, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:51.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:51.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:51.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:55:51.571] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@597595f1]
[11:55:51.571] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:51.571] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cad8337] was not registered for synchronization because synchronization is not active
[11:55:51.573] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1433558466, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:51.574] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:51.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:55:51.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:55:51.607] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cad8337]
[11:55:54.720] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:54.721] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3d1f04] was not registered for synchronization because synchronization is not active
[11:55:54.722] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1952838158, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:54.722] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:54.723] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:54.725] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:54.726] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b3d1f04]
[11:55:54.726] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:54.726] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fc8f3e] was not registered for synchronization because synchronization is not active
[11:55:54.728] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1856980514, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:54.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:54.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:54.730] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:54.731] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37fc8f3e]
[11:55:54.731] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:54.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c63616] was not registered for synchronization because synchronization is not active
[11:55:54.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [891421933, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:54.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:54.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:54.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:55:54.740] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c63616]
[11:55:54.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:54.740] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f6c3e] was not registered for synchronization because synchronization is not active
[11:55:54.743] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1549297053, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:54.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:54.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[11:55:54.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[11:55:54.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713f6c3e]
[11:55:57.513] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:57.513] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e7614d] was not registered for synchronization because synchronization is not active
[11:55:57.515] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1828789799, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:57.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:57.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:57.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:57.518] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e7614d]
[11:55:57.519] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:57.519] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c9f33] was not registered for synchronization because synchronization is not active
[11:55:57.520] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1899687430, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:57.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:57.521] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:57.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:57.523] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c9f33]
[11:55:57.523] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:57.524] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d47f437] was not registered for synchronization because synchronization is not active
[11:55:57.525] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1383956775, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:57.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:57.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:57.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:55:57.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d47f437]
[11:55:57.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:57.533] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b34596] was not registered for synchronization because synchronization is not active
[11:55:57.534] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [174507402, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:57.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:57.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:55:57.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:55:57.569] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44b34596]
[11:56:15.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:15.616] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e202cb3] was not registered for synchronization because synchronization is not active
[11:56:15.617] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1957619811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:15.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:15.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:15.620] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:15.621] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e202cb3]
[11:56:15.622] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:15.622] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e5d259] was not registered for synchronization because synchronization is not active
[11:56:15.623] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1457704383, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:15.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:56:15.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:56:15.627] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:15.628] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e5d259]
[11:56:15.628] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:15.629] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b76fd9e] was not registered for synchronization because synchronization is not active
[11:56:15.631] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1567024202, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:15.631] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:56:15.632] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:56:15.639] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[11:56:15.640] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b76fd9e]
[11:56:15.640] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:15.640] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369e10e3] was not registered for synchronization because synchronization is not active
[11:56:15.641] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1838291200, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:15.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:56:15.642] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[11:56:15.695] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:56:15.696] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@369e10e3]
[11:56:34.356] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:34.356] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e94e8dd] was not registered for synchronization because synchronization is not active
[11:56:34.358] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1006316829, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:34.359] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:34.359] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:34.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:34.362] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e94e8dd]
[11:56:34.362] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:34.363] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@542ac2ad] was not registered for synchronization because synchronization is not active
[11:56:34.364] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [373446078, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:34.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:34.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:34.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:34.369] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@542ac2ad]
[11:56:34.369] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:34.369] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dec0b25] was not registered for synchronization because synchronization is not active
[11:56:34.373] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1696123270, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:34.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:34.374] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:34.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:34.381] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dec0b25]
[11:56:34.381] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:34.382] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e5afa5] was not registered for synchronization because synchronization is not active
[11:56:34.384] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [661292177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:34.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:34.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:56:34.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:34.419] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38e5afa5]
[11:56:36.023] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:36.023] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30cef2e8] was not registered for synchronization because synchronization is not active
[11:56:36.024] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1395636667, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:36.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:36.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:36.027] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:36.028] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30cef2e8]
[11:56:36.028] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:36.028] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed70e34] was not registered for synchronization because synchronization is not active
[11:56:36.030] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1633331417, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:36.030] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:56:36.030] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:56:36.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:36.034] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed70e34]
[11:56:36.035] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:36.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbc411] was not registered for synchronization because synchronization is not active
[11:56:36.036] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1493090711, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:36.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:56:36.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(String)
[11:56:36.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:36.039] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fbc411]
[11:56:36.040] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:36.040] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494eb057] was not registered for synchronization because synchronization is not active
[11:56:36.041] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [182818506, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:36.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:56:36.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:56:36.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:56:36.043] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494eb057]
[11:56:36.044] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:36.044] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e89b4a] was not registered for synchronization because synchronization is not active
[11:56:36.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1256274830, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:36.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:56:36.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[11:56:36.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:56:36.091] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e89b4a]
[11:56:38.076] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:38.076] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a17b5bd] was not registered for synchronization because synchronization is not active
[11:56:38.078] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1930749221, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:38.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:38.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:38.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:38.081] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a17b5bd]
[11:56:38.081] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:38.081] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6b8e95] was not registered for synchronization because synchronization is not active
[11:56:38.082] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [204126460, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:38.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:38.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:38.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:38.086] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6b8e95]
[11:56:38.086] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:38.086] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23815cdc] was not registered for synchronization because synchronization is not active
[11:56:38.087] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1349830706, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:38.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:38.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:38.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:38.095] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23815cdc]
[11:56:38.095] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:38.095] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7590915b] was not registered for synchronization because synchronization is not active
[11:56:38.097] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1122573208, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:38.097] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:38.106] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:56:38.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:38.129] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7590915b]
[11:56:39.902] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:39.902] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9d5df3] was not registered for synchronization because synchronization is not active
[11:56:39.903] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1087106124, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:39.904] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:39.904] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:39.906] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:39.907] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9d5df3]
[11:56:39.907] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:39.907] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@235e93ed] was not registered for synchronization because synchronization is not active
[11:56:39.908] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2041133896, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:39.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:39.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:39.911] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:39.912] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@235e93ed]
[11:56:39.912] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:39.912] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d42bfea] was not registered for synchronization because synchronization is not active
[11:56:39.913] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1220060527, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:39.913] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:39.914] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:39.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:39.921] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d42bfea]
[11:56:39.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:39.921] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d5b0a4] was not registered for synchronization because synchronization is not active
[11:56:39.924] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [627431137, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:39.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:39.935] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[11:56:39.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[11:56:39.944] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56d5b0a4]
[11:56:40.805] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:40.806] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c98c] was not registered for synchronization because synchronization is not active
[11:56:40.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [923100801, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:40.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:40.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:40.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:40.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ef1c98c]
[11:56:40.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:40.811] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fbfe74] was not registered for synchronization because synchronization is not active
[11:56:40.812] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [571727735, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:40.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:56:40.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[11:56:40.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:40.816] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fbfe74]
[11:56:40.817] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:40.817] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36937115] was not registered for synchronization because synchronization is not active
[11:56:40.818] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1800345401, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:40.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:56:40.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(String)
[11:56:40.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:56:40.821] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36937115]
[11:56:40.822] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:40.822] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e616d11] was not registered for synchronization because synchronization is not active
[11:56:40.823] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1979539073, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:40.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:56:40.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[11:56:40.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:56:40.826] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e616d11]
[11:56:40.826] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:40.827] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d4ba6] was not registered for synchronization because synchronization is not active
[11:56:40.827] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1244649393, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:40.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:56:40.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[11:56:40.876] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:56:40.877] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@146d4ba6]
[11:56:42.261] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:42.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd337a4] was not registered for synchronization because synchronization is not active
[11:56:42.263] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [892709994, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:42.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:42.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:42.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:42.266] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd337a4]
[11:56:42.266] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:42.266] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe4f682] was not registered for synchronization because synchronization is not active
[11:56:42.268] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1801708604, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:42.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:42.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:42.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:42.271] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe4f682]
[11:56:42.272] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:42.272] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dae7b3] was not registered for synchronization because synchronization is not active
[11:56:42.273] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1164223486, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:42.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:42.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:42.281] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:42.281] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dae7b3]
[11:56:42.282] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:42.282] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a22abd9] was not registered for synchronization because synchronization is not active
[11:56:42.283] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1801882721, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:42.283] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:42.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:56:42.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:42.314] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a22abd9]
[11:56:43.415] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:43.416] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132a0717] was not registered for synchronization because synchronization is not active
[11:56:43.417] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2099992673, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:43.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:43.418] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:43.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:43.420] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132a0717]
[11:56:43.420] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:43.421] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150b3ab0] was not registered for synchronization because synchronization is not active
[11:56:43.422] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [167802523, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:43.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:43.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:43.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:43.425] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150b3ab0]
[11:56:43.425] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:43.426] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9f0349] was not registered for synchronization because synchronization is not active
[11:56:43.427] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [962482413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:43.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:43.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:43.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:43.434] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a9f0349]
[11:56:43.434] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:43.434] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bda7a8b] was not registered for synchronization because synchronization is not active
[11:56:43.436] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [416807858, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:43.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:43.443] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[11:56:43.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:43.465] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bda7a8b]
[11:56:45.350] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:45.351] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52b184] was not registered for synchronization because synchronization is not active
[11:56:45.352] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1617872636, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:45.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:45.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:45.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:45.356] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c52b184]
[11:56:45.356] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:45.356] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b84eb2] was not registered for synchronization because synchronization is not active
[11:56:45.357] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [521262998, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:45.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:56:45.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[11:56:45.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:45.361] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b84eb2]
[11:56:45.362] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:45.362] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644ef85c] was not registered for synchronization because synchronization is not active
[11:56:45.364] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1470893703, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:45.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:56:45.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(String)
[11:56:45.366] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:45.367] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644ef85c]
[11:56:45.367] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:45.367] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b98faff] was not registered for synchronization because synchronization is not active
[11:56:45.368] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1121068977, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:45.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:56:45.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[11:56:45.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:56:45.371] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b98faff]
[11:56:45.371] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:45.371] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6307585c] was not registered for synchronization because synchronization is not active
[11:56:45.372] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1484833686, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:45.372] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:56:45.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[11:56:45.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:56:45.414] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6307585c]
[11:56:47.389] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:47.390] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b863249] was not registered for synchronization because synchronization is not active
[11:56:47.391] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1656223816, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:47.391] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:56:47.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:56:47.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:47.394] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b863249]
[11:56:47.395] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:47.395] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@610d8a3c] was not registered for synchronization because synchronization is not active
[11:56:47.397] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [396040709, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:47.397] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:56:47.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:56:47.400] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:56:47.401] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@610d8a3c]
[11:56:47.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:47.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6100598a] was not registered for synchronization because synchronization is not active
[11:56:47.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [864643716, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:47.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:56:47.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:56:47.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:56:47.409] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6100598a]
[11:56:47.410] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:56:47.410] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f2e4e5] was not registered for synchronization because synchronization is not active
[11:56:47.412] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [129466407, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:56:47.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:56:47.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:56:47.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:56:47.445] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50f2e4e5]
[11:59:53.395] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:53.395] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b3abcf] was not registered for synchronization because synchronization is not active
[11:59:53.396] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [693414745, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:53.397] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:53.397] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:53.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:53.400] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49b3abcf]
[11:59:53.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:53.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499dde60] was not registered for synchronization because synchronization is not active
[11:59:53.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [149661897, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:53.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:59:53.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:59:53.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:53.405] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499dde60]
[11:59:53.406] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:53.406] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b712ac] was not registered for synchronization because synchronization is not active
[11:59:53.407] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2126952588, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:53.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:59:53.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:59:53.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:59:53.415] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57b712ac]
[11:59:53.415] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:53.415] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@760a3afe] was not registered for synchronization because synchronization is not active
[11:59:53.417] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1547238775, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:53.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:59:53.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:59:53.446] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:59:53.447] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@760a3afe]
[11:59:55.240] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:55.240] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7408e92d] was not registered for synchronization because synchronization is not active
[11:59:55.241] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1139047543, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:55.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:55.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:55.244] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:55.244] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7408e92d]
[11:59:55.245] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:55.245] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27016ad5] was not registered for synchronization because synchronization is not active
[11:59:55.246] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [244566422, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:55.246] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:59:55.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:59:55.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:55.251] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27016ad5]
[11:59:55.251] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:55.251] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae93f] was not registered for synchronization because synchronization is not active
[11:59:55.253] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [290036737, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:55.253] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:59:55.253] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(String)
[11:59:55.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:55.256] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ae93f]
[11:59:55.256] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:55.256] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4355cebd] was not registered for synchronization because synchronization is not active
[11:59:55.257] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1923539301, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:55.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:59:55.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:59:55.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:59:55.260] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4355cebd]
[11:59:55.261] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:55.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3076b6f4] was not registered for synchronization because synchronization is not active
[11:59:55.262] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1231939201, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:55.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:59:55.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[11:59:55.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:59:55.291] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3076b6f4]
[11:59:56.901] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:56.901] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c87dd3c] was not registered for synchronization because synchronization is not active
[11:59:56.903] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [110421365, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:56.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:56.904] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:56.906] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:56.909] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c87dd3c]
[11:59:56.910] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:56.910] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2a6d94] was not registered for synchronization because synchronization is not active
[11:59:56.912] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1324025932, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:56.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:59:56.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:59:56.914] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:56.915] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2a6d94]
[11:59:56.915] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:56.915] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ebce5] was not registered for synchronization because synchronization is not active
[11:59:56.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1093294017, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:56.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:59:56.918] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:59:56.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:59:56.924] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ebce5]
[11:59:56.925] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:56.925] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a485b97] was not registered for synchronization because synchronization is not active
[11:59:56.926] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1662460631, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:56.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:59:56.934] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:59:56.957] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:59:56.958] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a485b97]
[11:59:58.445] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:58.445] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3006c] was not registered for synchronization because synchronization is not active
[11:59:58.446] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1775419678, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:58.447] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:58.447] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:58.449] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:58.450] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ca3006c]
[11:59:58.450] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:58.450] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d91b3f] was not registered for synchronization because synchronization is not active
[11:59:58.452] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [534268175, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:58.452] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:59:58.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:59:58.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:58.457] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d91b3f]
[11:59:58.457] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:58.457] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6721d] was not registered for synchronization because synchronization is not active
[11:59:58.459] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1649384356, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:58.459] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:59:58.460] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(String)
[11:59:58.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:58.462] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6721d]
[11:59:58.463] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:58.463] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e3262ec] was not registered for synchronization because synchronization is not active
[11:59:58.464] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [28721072, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:58.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:59:58.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:59:58.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[11:59:58.466] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e3262ec]
[11:59:58.467] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:58.467] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@346797c0] was not registered for synchronization because synchronization is not active
[11:59:58.468] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [168126293, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:58.468] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:59:58.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[11:59:58.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:59:58.495] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@346797c0]
[11:59:59.693] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:59.694] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fdb4d8] was not registered for synchronization because synchronization is not active
[11:59:59.695] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [28163359, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:59.695] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:59.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:59.698] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:59.698] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34fdb4d8]
[11:59:59.699] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:59.700] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76411e3b] was not registered for synchronization because synchronization is not active
[11:59:59.701] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [285902215, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:59.702] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:59:59.703] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:59:59.706] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:59.707] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76411e3b]
[11:59:59.707] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:59.707] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e852c6] was not registered for synchronization because synchronization is not active
[11:59:59.709] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1574856630, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:59.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:59:59.710] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:59:59.717] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[11:59:59.718] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36e852c6]
[11:59:59.718] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:59.718] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@264959ea] was not registered for synchronization because synchronization is not active
[11:59:59.721] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [481293847, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:59.722] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:59:59.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:59:59.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:59:59.761] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@264959ea]
[12:00:01.161] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:01.161] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d4a6a6] was not registered for synchronization because synchronization is not active
[12:00:01.163] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1965468961, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:01.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:01.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:01.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:01.166] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38d4a6a6]
[12:00:01.167] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:01.167] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719db864] was not registered for synchronization because synchronization is not active
[12:00:01.168] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2009818302, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:01.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:00:01.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[12:00:01.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:01.172] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@719db864]
[12:00:01.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:01.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f99a6f] was not registered for synchronization because synchronization is not active
[12:00:01.173] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1184584672, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:01.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:00:01.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(String)
[12:00:01.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:01.176] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f99a6f]
[12:00:01.176] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:01.176] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b6356a] was not registered for synchronization because synchronization is not active
[12:00:01.177] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [374688226, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:01.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:00:01.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[12:00:01.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:00:01.180] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b6356a]
[12:00:01.180] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:01.180] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1922d837] was not registered for synchronization because synchronization is not active
[12:00:01.181] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1400814661, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:01.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:00:01.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[12:00:01.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:00:01.208] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1922d837]
[12:00:02.485] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:02.485] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170af952] was not registered for synchronization because synchronization is not active
[12:00:02.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128632059, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:02.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:02.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:02.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:02.490] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170af952]
[12:00:02.490] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:02.490] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158d2df3] was not registered for synchronization because synchronization is not active
[12:00:02.491] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [270612633, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:02.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:02.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:02.494] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:02.495] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158d2df3]
[12:00:02.495] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:02.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a100a2] was not registered for synchronization because synchronization is not active
[12:00:02.496] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1959686843, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:02.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:02.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:02.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:02.504] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a100a2]
[12:00:02.504] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:02.504] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e653b] was not registered for synchronization because synchronization is not active
[12:00:02.506] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [204885840, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:02.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:02.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:02.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:02.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e653b]
[12:00:05.598] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:05.599] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242f7ba4] was not registered for synchronization because synchronization is not active
[12:00:05.600] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [317348926, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:05.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:05.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:05.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:05.604] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242f7ba4]
[12:00:05.605] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:05.605] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a88b64] was not registered for synchronization because synchronization is not active
[12:00:05.606] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1124617589, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:05.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:00:05.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:00:05.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:05.610] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a88b64]
[12:00:05.610] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:05.611] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45386fb5] was not registered for synchronization because synchronization is not active
[12:00:05.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1471192044, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:05.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:00:05.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[12:00:05.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:05.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45386fb5]
[12:00:05.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:05.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7593d8a8] was not registered for synchronization because synchronization is not active
[12:00:05.616] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1139322561, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:05.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:00:05.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:00:05.620] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:05.620] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7593d8a8]
[12:00:05.621] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:05.621] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8ff544] was not registered for synchronization because synchronization is not active
[12:00:05.622] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1928400941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:05.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:00:05.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[12:00:05.686] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:00:05.687] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8ff544]
[12:00:06.908] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:06.908] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eb8dc1e] was not registered for synchronization because synchronization is not active
[12:00:06.910] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1928957619, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:06.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:06.911] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:06.913] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:06.914] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eb8dc1e]
[12:00:06.914] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:06.914] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e08b9a9] was not registered for synchronization because synchronization is not active
[12:00:06.915] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [194981699, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:06.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:06.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:06.918] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:06.918] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e08b9a9]
[12:00:06.919] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:06.919] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c20eea2] was not registered for synchronization because synchronization is not active
[12:00:06.920] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1858390057, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:06.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:06.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:06.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:06.927] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c20eea2]
[12:00:06.927] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:06.927] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a81749] was not registered for synchronization because synchronization is not active
[12:00:06.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [970921055, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:06.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:06.937] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:06.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:06.961] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a81749]
[12:00:08.080] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:08.081] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3680b003] was not registered for synchronization because synchronization is not active
[12:00:08.082] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [891918136, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:08.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:08.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:08.084] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:08.085] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3680b003]
[12:00:08.085] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:08.085] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@605565f9] was not registered for synchronization because synchronization is not active
[12:00:08.086] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1308278802, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:08.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:08.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:08.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:08.090] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@605565f9]
[12:00:08.090] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:08.090] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f118843] was not registered for synchronization because synchronization is not active
[12:00:08.091] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2145319592, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:08.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:08.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:08.097] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:08.098] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f118843]
[12:00:08.098] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:08.098] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fec82a8] was not registered for synchronization because synchronization is not active
[12:00:08.100] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [554313933, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:08.100] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:08.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:08.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:08.130] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fec82a8]
[12:00:09.287] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:09.288] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2e0233] was not registered for synchronization because synchronization is not active
[12:00:09.289] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1822946887, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:09.289] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:09.290] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:09.292] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:09.292] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2e0233]
[12:00:09.293] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:09.293] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@602b0292] was not registered for synchronization because synchronization is not active
[12:00:09.294] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [527708041, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:09.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:09.295] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:09.297] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:09.298] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@602b0292]
[12:00:09.298] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:09.298] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d9bd73] was not registered for synchronization because synchronization is not active
[12:00:09.299] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [836710241, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:09.299] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:09.300] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:09.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:09.306] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37d9bd73]
[12:00:09.307] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:09.307] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36bce788] was not registered for synchronization because synchronization is not active
[12:00:09.308] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [354760274, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:09.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:09.315] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:00:09.338] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:09.339] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36bce788]
[12:00:12.061] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:12.061] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b9f442d] was not registered for synchronization because synchronization is not active
[12:00:12.063] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1690544517, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:12.063] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:12.064] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:12.066] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:12.066] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b9f442d]
[12:00:12.067] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:12.067] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@696721b7] was not registered for synchronization because synchronization is not active
[12:00:12.068] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1624429310, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:12.068] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:00:12.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[12:00:12.071] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:12.072] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@696721b7]
[12:00:12.072] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:12.073] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d15323] was not registered for synchronization because synchronization is not active
[12:00:12.074] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [95715654, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:12.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:00:12.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(String)
[12:00:12.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[12:00:12.080] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d15323]
[12:00:12.081] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:12.081] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e0df30] was not registered for synchronization because synchronization is not active
[12:00:12.082] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1655275675, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:12.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:00:12.084] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[12:00:12.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:00:12.087] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78e0df30]
[12:00:12.087] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:12.088] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f133e6] was not registered for synchronization because synchronization is not active
[12:00:12.089] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2068308695, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:12.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:00:12.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 33(Integer)
[12:00:12.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:00:12.122] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46f133e6]
[12:00:13.934] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:13.934] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391887ed] was not registered for synchronization because synchronization is not active
[12:00:13.936] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [385565193, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:13.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:13.937] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:13.938] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:13.939] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@391887ed]
[12:00:13.939] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:13.940] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5347eb] was not registered for synchronization because synchronization is not active
[12:00:13.941] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1943179679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:13.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:13.942] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:13.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:13.944] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5347eb]
[12:00:13.945] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:13.945] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1acef83e] was not registered for synchronization because synchronization is not active
[12:00:13.946] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [681588473, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:13.946] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:13.946] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:13.952] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:13.953] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1acef83e]
[12:00:13.953] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:13.953] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa0c2a1] was not registered for synchronization because synchronization is not active
[12:00:13.955] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1930032358, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:13.955] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:13.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:13.984] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:13.985] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aa0c2a1]
[12:00:15.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:15.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ccf75] was not registered for synchronization because synchronization is not active
[12:00:15.209] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [620613938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:15.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:15.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:15.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:15.212] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61ccf75]
[12:00:15.212] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:15.212] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f21e21b] was not registered for synchronization because synchronization is not active
[12:00:15.213] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2022125973, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:15.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:00:15.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[12:00:15.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:15.218] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f21e21b]
[12:00:15.218] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:15.218] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492908bf] was not registered for synchronization because synchronization is not active
[12:00:15.219] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1809828107, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:15.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:00:15.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[12:00:15.222] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:15.223] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492908bf]
[12:00:15.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:15.224] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36391e6f] was not registered for synchronization because synchronization is not active
[12:00:15.225] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [913699959, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:15.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:00:15.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[12:00:15.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:00:15.228] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36391e6f]
[12:00:15.228] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:15.228] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d29ca61] was not registered for synchronization because synchronization is not active
[12:00:15.229] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1745195145, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:15.230] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:00:15.230] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[12:00:15.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:00:15.266] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d29ca61]
[12:00:16.972] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:16.972] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c80d4ff] was not registered for synchronization because synchronization is not active
[12:00:16.973] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2099351784, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:16.974] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:16.974] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:16.976] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:16.977] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c80d4ff]
[12:00:16.977] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:16.977] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d39fe3] was not registered for synchronization because synchronization is not active
[12:00:16.978] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [407815409, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:16.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:16.979] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:16.981] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:16.981] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d39fe3]
[12:00:16.982] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:16.982] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1687231b] was not registered for synchronization because synchronization is not active
[12:00:16.983] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1100505249, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:16.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:16.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:16.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:16.990] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1687231b]
[12:00:16.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:16.990] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f3af2b6] was not registered for synchronization because synchronization is not active
[12:00:16.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [605238947, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:16.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:16.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:17.021] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:17.022] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f3af2b6]
[12:00:18.029] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:18.029] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be7115d] was not registered for synchronization because synchronization is not active
[12:00:18.031] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2127192814, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:18.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:18.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:18.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:18.034] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3be7115d]
[12:00:18.035] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:18.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457c070f] was not registered for synchronization because synchronization is not active
[12:00:18.036] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [499801086, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:18.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:00:18.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[12:00:18.040] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:18.040] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@457c070f]
[12:00:18.041] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:18.041] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14bc61d] was not registered for synchronization because synchronization is not active
[12:00:18.042] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [949789918, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:18.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:00:18.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[12:00:18.044] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:18.044] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14bc61d]
[12:00:18.045] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:18.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3009f05] was not registered for synchronization because synchronization is not active
[12:00:18.046] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1716721565, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:18.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:00:18.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[12:00:18.048] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:00:18.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3009f05]
[12:00:18.048] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:18.049] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694579f2] was not registered for synchronization because synchronization is not active
[12:00:18.049] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1626232144, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:18.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:00:18.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[12:00:18.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:00:18.193] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694579f2]
[12:00:19.483] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:19.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a98d19] was not registered for synchronization because synchronization is not active
[12:00:19.485] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1397771174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:19.485] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:00:19.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:00:19.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:19.488] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a98d19]
[12:00:19.488] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:19.489] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75eb76d] was not registered for synchronization because synchronization is not active
[12:00:19.490] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1384421950, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:19.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:00:19.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:00:19.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:00:19.494] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75eb76d]
[12:00:19.494] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:19.494] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a472e71] was not registered for synchronization because synchronization is not active
[12:00:19.495] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1467934538, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:19.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:00:19.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:00:19.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:00:19.504] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a472e71]
[12:00:19.504] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:00:19.504] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d4c344d] was not registered for synchronization because synchronization is not active
[12:00:19.506] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [72831423, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:00:19.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:00:19.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:00:19.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:00:19.538] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d4c344d]
[12:02:29.529] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:29.529] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e13d068] was not registered for synchronization because synchronization is not active
[12:02:29.530] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1631285897, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:29.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:02:29.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:02:29.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:29.534] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e13d068]
[12:02:29.534] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:29.534] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33797b76] was not registered for synchronization because synchronization is not active
[12:02:29.536] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1983542677, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:29.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:02:29.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:02:29.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:29.540] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33797b76]
[12:02:29.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:29.540] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8042e] was not registered for synchronization because synchronization is not active
[12:02:29.541] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1596342816, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:29.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:02:29.545] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:02:29.551] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:02:29.551] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b8042e]
[12:02:29.552] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:29.552] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560c1237] was not registered for synchronization because synchronization is not active
[12:02:29.554] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1809876212, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:29.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:02:29.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:02:29.583] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:02:29.584] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560c1237]
[12:02:35.039] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:35.039] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185fdcb4] was not registered for synchronization because synchronization is not active
[12:02:35.041] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [430278231, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:35.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:02:35.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:02:35.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:35.044] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185fdcb4]
[12:02:35.045] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:35.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348acd98] was not registered for synchronization because synchronization is not active
[12:02:35.046] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1640744720, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:35.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:02:35.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[12:02:35.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:02:35.050] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348acd98]
[12:02:35.050] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:35.050] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762509f3] was not registered for synchronization because synchronization is not active
[12:02:35.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1007020856, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:35.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:02:35.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[12:02:35.059] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[12:02:35.060] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762509f3]
[12:02:35.060] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:02:35.060] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a8a44] was not registered for synchronization because synchronization is not active
[12:02:35.061] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [968647216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:02:35.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:02:35.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[12:02:35.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:02:35.112] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e6a8a44]
[12:03:27.137] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:27.138] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1545c129] was not registered for synchronization because synchronization is not active
[12:03:27.139] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1679734587, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:27.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:03:27.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:03:27.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:27.142] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1545c129]
[12:03:27.143] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:27.143] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cf8376] was not registered for synchronization because synchronization is not active
[12:03:27.144] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [404377682, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:27.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:03:27.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:03:27.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:27.148] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44cf8376]
[12:03:27.148] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:27.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f5f562] was not registered for synchronization because synchronization is not active
[12:03:27.150] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1364857839, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:27.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:03:27.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:03:27.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:03:27.160] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f5f562]
[12:03:27.160] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:27.160] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@514c043a] was not registered for synchronization because synchronization is not active
[12:03:27.162] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1993488426, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:27.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:03:27.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:03:27.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:03:27.192] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@514c043a]
[12:03:28.791] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:28.791] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd3c017] was not registered for synchronization because synchronization is not active
[12:03:28.792] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [780926097, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:28.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:03:28.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:03:28.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:28.796] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd3c017]
[12:03:28.796] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:28.796] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13a522ee] was not registered for synchronization because synchronization is not active
[12:03:28.798] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1556917067, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:28.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:03:28.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[12:03:28.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:28.802] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13a522ee]
[12:03:28.802] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:28.802] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db619c6] was not registered for synchronization because synchronization is not active
[12:03:28.803] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [772736901, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:28.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:03:28.804] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[12:03:28.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:28.806] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5db619c6]
[12:03:28.806] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:28.806] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e4165] was not registered for synchronization because synchronization is not active
[12:03:28.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [520629028, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:28.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:03:28.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[12:03:28.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:03:28.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e4165]
[12:03:28.810] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:28.810] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aef5475] was not registered for synchronization because synchronization is not active
[12:03:28.812] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [319988518, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:28.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:03:28.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[12:03:29.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:03:29.180] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aef5475]
[12:03:32.956] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:32.957] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdee9f4] was not registered for synchronization because synchronization is not active
[12:03:32.958] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [863867572, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:32.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:03:32.959] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:03:32.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:32.961] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cdee9f4]
[12:03:32.961] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:32.961] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50dc2a02] was not registered for synchronization because synchronization is not active
[12:03:32.962] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1754927677, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:32.963] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:03:32.963] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:03:32.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:32.966] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50dc2a02]
[12:03:32.966] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:32.966] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b9cd23] was not registered for synchronization because synchronization is not active
[12:03:32.967] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1245670850, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:32.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:03:32.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:03:32.974] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:03:32.974] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b9cd23]
[12:03:32.975] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:32.975] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30cad39f] was not registered for synchronization because synchronization is not active
[12:03:32.976] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2074051686, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:32.976] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:03:32.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:03:33.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:03:33.006] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30cad39f]
[12:03:34.197] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:34.198] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@263a74f6] was not registered for synchronization because synchronization is not active
[12:03:34.199] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1881960157, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:34.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:03:34.200] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:03:34.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:34.203] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@263a74f6]
[12:03:34.204] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:34.204] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e39c613] was not registered for synchronization because synchronization is not active
[12:03:34.205] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1783450413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:34.205] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:03:34.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:03:34.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:34.209] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e39c613]
[12:03:34.209] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:34.210] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5348a75c] was not registered for synchronization because synchronization is not active
[12:03:34.210] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [328461791, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:34.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:03:34.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[12:03:34.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:34.213] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5348a75c]
[12:03:34.214] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:34.214] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671b0e4e] was not registered for synchronization because synchronization is not active
[12:03:34.215] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [661466922, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:34.215] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:03:34.215] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:03:34.231] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[12:03:34.232] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@671b0e4e]
[12:03:34.232] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:34.232] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a95ff7] was not registered for synchronization because synchronization is not active
[12:03:34.233] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [500474094, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:34.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:03:34.234] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[12:03:34.278] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:03:34.279] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23a95ff7]
[12:03:37.404] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.404] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c8eb8d4] was not registered for synchronization because synchronization is not active
[12:03:37.405] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [249513680, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:03:37.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:03:37.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:37.408] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c8eb8d4]
[12:03:37.409] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.409] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb94866] was not registered for synchronization because synchronization is not active
[12:03:37.410] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1001632269, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:03:37.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:03:37.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:03:37.413] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb94866]
[12:03:37.414] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.414] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4850827d] was not registered for synchronization because synchronization is not active
[12:03:37.415] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [331995965, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:03:37.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:03:37.423] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:03:37.424] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4850827d]
[12:03:37.425] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:03:37.425] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146dd66] was not registered for synchronization because synchronization is not active
[12:03:37.426] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [583332889, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:03:37.426] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:03:37.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:03:37.458] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:03:37.459] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6146dd66]
[12:04:15.376] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.376] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@617ce4d2] was not registered for synchronization because synchronization is not active
[12:04:15.378] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1972850964, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:15.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:15.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:15.381] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@617ce4d2]
[12:04:15.381] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.382] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbc1f5e] was not registered for synchronization because synchronization is not active
[12:04:15.383] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2118100634, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:15.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:15.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:15.386] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cbc1f5e]
[12:04:15.387] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.387] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7668c07] was not registered for synchronization because synchronization is not active
[12:04:15.388] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1400291453, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.388] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:15.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:15.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:15.396] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7668c07]
[12:04:15.396] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:15.396] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150ad77b] was not registered for synchronization because synchronization is not active
[12:04:15.398] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [176250586, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:15.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:15.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:04:15.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:15.432] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150ad77b]
[12:04:25.300] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:25.301] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300db69c] was not registered for synchronization because synchronization is not active
[12:04:25.302] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1294406772, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:25.302] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:25.303] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:25.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:25.305] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300db69c]
[12:04:25.306] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:25.306] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fca480] was not registered for synchronization because synchronization is not active
[12:04:25.307] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [303445078, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:25.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:04:25.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[12:04:25.310] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:25.311] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fca480]
[12:04:25.311] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:25.311] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28aefd8c] was not registered for synchronization because synchronization is not active
[12:04:25.312] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [275488618, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:25.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:04:25.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[12:04:25.314] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:04:25.315] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28aefd8c]
[12:04:25.315] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:25.315] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cee2360] was not registered for synchronization because synchronization is not active
[12:04:25.316] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [634095260, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:25.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:04:25.317] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 27(Integer)
[12:04:25.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:04:25.419] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cee2360]
[12:04:33.397] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:33.398] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec6f539] was not registered for synchronization because synchronization is not active
[12:04:33.399] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [925833192, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:33.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:33.400] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:33.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:33.403] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ec6f539]
[12:04:33.403] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:33.404] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aabf64b] was not registered for synchronization because synchronization is not active
[12:04:33.405] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [59850300, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:33.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:33.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:33.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:33.408] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aabf64b]
[12:04:33.408] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:33.408] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9cd27] was not registered for synchronization because synchronization is not active
[12:04:33.409] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [77024005, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:33.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:33.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:33.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:33.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9cd27]
[12:04:33.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:33.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b9a59b] was not registered for synchronization because synchronization is not active
[12:04:33.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [518126409, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:33.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:33.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:04:33.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:33.453] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74b9a59b]
[12:04:35.166] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:35.166] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2592d86a] was not registered for synchronization because synchronization is not active
[12:04:35.167] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2001778660, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:35.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:35.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:35.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:35.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2592d86a]
[12:04:35.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:35.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8886d42] was not registered for synchronization because synchronization is not active
[12:04:35.172] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1576122895, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:35.172] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:04:35.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[12:04:35.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:35.176] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8886d42]
[12:04:35.176] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:35.176] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21e31d4] was not registered for synchronization because synchronization is not active
[12:04:35.177] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [274126029, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:35.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:04:35.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(String)
[12:04:35.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:35.181] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21e31d4]
[12:04:35.181] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:35.181] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f9b370] was not registered for synchronization because synchronization is not active
[12:04:35.182] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [862471838, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:35.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:04:35.183] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[12:04:35.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:04:35.185] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f9b370]
[12:04:35.185] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:35.185] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371febc0] was not registered for synchronization because synchronization is not active
[12:04:35.186] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1513420085, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:35.186] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:04:35.187] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[12:04:35.296] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:04:35.296] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371febc0]
[12:04:40.747] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:40.748] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@122cf4dd] was not registered for synchronization because synchronization is not active
[12:04:40.750] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1918335827, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:40.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:40.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:40.753] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:40.754] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@122cf4dd]
[12:04:40.754] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:40.754] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23378937] was not registered for synchronization because synchronization is not active
[12:04:40.755] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [825745904, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:40.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:40.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:40.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:40.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23378937]
[12:04:40.759] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:40.759] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182b8928] was not registered for synchronization because synchronization is not active
[12:04:40.760] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [547437032, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:40.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:40.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:40.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:40.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@182b8928]
[12:04:40.768] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:40.768] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66fa5a28] was not registered for synchronization because synchronization is not active
[12:04:40.770] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1682605468, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:40.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:40.777] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:04:40.800] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:40.801] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66fa5a28]
[12:04:46.984] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:46.985] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ad6112] was not registered for synchronization because synchronization is not active
[12:04:46.986] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1196330679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:46.987] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:46.987] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:46.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:46.989] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ad6112]
[12:04:46.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:46.990] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d71e9] was not registered for synchronization because synchronization is not active
[12:04:46.991] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1628815306, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:46.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:46.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:46.994] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:46.995] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d71e9]
[12:04:46.995] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:46.995] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f73b55e] was not registered for synchronization because synchronization is not active
[12:04:46.996] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1995640788, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:46.996] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:46.997] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:47.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:47.003] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f73b55e]
[12:04:47.003] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:47.003] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e970449] was not registered for synchronization because synchronization is not active
[12:04:47.005] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [462304052, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:47.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:47.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:04:47.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:47.035] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e970449]
[12:04:56.126] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:56.126] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2409be44] was not registered for synchronization because synchronization is not active
[12:04:56.127] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1424220143, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:56.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:56.128] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:56.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:56.131] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2409be44]
[12:04:56.132] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:56.132] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687381af] was not registered for synchronization because synchronization is not active
[12:04:56.133] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1570785067, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:56.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[12:04:56.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[12:04:56.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:56.138] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@687381af]
[12:04:56.138] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:56.138] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49766730] was not registered for synchronization because synchronization is not active
[12:04:56.140] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [994516203, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:56.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[12:04:56.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(String)
[12:04:56.142] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:56.143] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49766730]
[12:04:56.143] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:56.143] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63312c28] was not registered for synchronization because synchronization is not active
[12:04:56.145] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [924965040, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:56.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[12:04:56.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[12:04:56.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:04:56.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63312c28]
[12:04:56.148] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:56.148] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a70ac4] was not registered for synchronization because synchronization is not active
[12:04:56.149] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [529440991, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:56.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[12:04:56.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 34(Integer)
[12:04:56.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[12:04:56.265] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a70ac4]
[12:04:58.574] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:58.574] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12838e1e] was not registered for synchronization because synchronization is not active
[12:04:58.575] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1668728858, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:58.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:58.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:58.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:58.579] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12838e1e]
[12:04:58.579] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:58.579] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3438c3f7] was not registered for synchronization because synchronization is not active
[12:04:58.580] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [81808076, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:58.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:04:58.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:04:58.583] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:58.584] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3438c3f7]
[12:04:58.584] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:58.585] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47235d30] was not registered for synchronization because synchronization is not active
[12:04:58.586] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1869717250, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:58.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:04:58.587] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:04:58.592] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:04:58.593] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47235d30]
[12:04:58.593] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:58.593] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@207363ee] was not registered for synchronization because synchronization is not active
[12:04:58.595] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1317430100, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:58.595] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:04:58.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:04:58.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:04:58.625] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@207363ee]
[12:05:00.976] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:00.976] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26eb5227] was not registered for synchronization because synchronization is not active
[12:05:00.977] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [824263798, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:00.977] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:05:00.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:05:00.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:00.981] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26eb5227]
[12:05:00.981] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:00.981] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e1397b8] was not registered for synchronization because synchronization is not active
[12:05:00.983] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1221543683, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:00.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:05:00.984] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:05:00.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:00.987] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e1397b8]
[12:05:00.987] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:00.987] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d416a0] was not registered for synchronization because synchronization is not active
[12:05:00.989] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1113873742, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:00.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:05:00.990] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:05:00.996] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:05:00.996] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d416a0]
[12:05:00.997] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:00.997] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e77a9b9] was not registered for synchronization because synchronization is not active
[12:05:00.998] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [509973119, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:00.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:05:01.008] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[12:05:01.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:05:01.032] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e77a9b9]
[12:05:03.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:03.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4e96c3] was not registered for synchronization because synchronization is not active
[12:05:03.249] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [412407618, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:03.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:05:03.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:05:03.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:03.252] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c4e96c3]
[12:05:03.253] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:03.253] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e7f69] was not registered for synchronization because synchronization is not active
[12:05:03.254] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2121592221, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:03.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:05:03.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:05:03.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:03.257] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4e7f69]
[12:05:03.258] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:03.258] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ce3943] was not registered for synchronization because synchronization is not active
[12:05:03.259] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [258041782, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:03.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:05:03.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:05:03.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:05:03.269] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73ce3943]
[12:05:03.269] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:03.269] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89bbfff] was not registered for synchronization because synchronization is not active
[12:05:03.271] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1065224570, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:03.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:05:03.278] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[12:05:03.286] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[12:05:03.287] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89bbfff]
[12:05:05.080] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:05.080] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8a7303] was not registered for synchronization because synchronization is not active
[12:05:05.081] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [329758989, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:05.081] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:05:05.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:05:05.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:05.084] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b8a7303]
[12:05:05.084] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:05.084] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@705618d] was not registered for synchronization because synchronization is not active
[12:05:05.085] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [926405603, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:05.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:05:05.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:05:05.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:05.088] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@705618d]
[12:05:05.089] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:05.089] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfaf2c8] was not registered for synchronization because synchronization is not active
[12:05:05.090] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [520618455, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:05.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:05:05.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:05:05.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[12:05:05.097] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dfaf2c8]
[12:05:05.097] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:05.097] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a86d11f] was not registered for synchronization because synchronization is not active
[12:05:05.099] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [106090894, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:05.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:05:05.106] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:05:05.128] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:05:05.129] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a86d11f]
[13:14:09.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:09.541] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ffa496] was not registered for synchronization because synchronization is not active
[13:14:09.546] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1647061995, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:09.546] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:14:09.546] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:14:09.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:14:09.552] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24ffa496]
[13:14:09.553] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:09.553] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d460aa] was not registered for synchronization because synchronization is not active
[13:14:09.554] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [568336719, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:09.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:14:09.555] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:14:09.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:14:09.559] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44d460aa]
[13:14:09.560] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:09.560] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a614fe] was not registered for synchronization because synchronization is not active
[13:14:09.561] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [645410587, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:09.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:14:09.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:14:09.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:14:09.567] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24a614fe]
[13:14:09.567] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:09.568] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509ad097] was not registered for synchronization because synchronization is not active
[13:14:09.568] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [21150947, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:09.569] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:14:09.569] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:14:09.599] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:14:09.599] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509ad097]
[13:14:11.712] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:11.713] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f66c1f] was not registered for synchronization because synchronization is not active
[13:14:11.714] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [489593004, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:11.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:14:11.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:14:11.721] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:14:11.721] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f66c1f]
[13:14:11.722] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:11.722] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472a2181] was not registered for synchronization because synchronization is not active
[13:14:11.723] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [316967969, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:11.723] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:14:11.724] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:14:11.731] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:14:11.731] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@472a2181]
[13:14:11.731] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:11.732] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fd3a744] was not registered for synchronization because synchronization is not active
[13:14:11.733] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1703549052, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:11.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:14:11.740] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:14:11.849] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:14:11.849] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fd3a744]
[13:14:29.497] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:29.498] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8892ec] was not registered for synchronization because synchronization is not active
[13:14:29.499] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1158128314, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:29.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:14:29.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:14:29.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:14:29.504] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d8892ec]
[13:14:29.504] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:29.505] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47dfbe86] was not registered for synchronization because synchronization is not active
[13:14:29.506] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [793307794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:29.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:14:29.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[13:14:29.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:14:29.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47dfbe86]
[13:14:29.509] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:29.509] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17189720] was not registered for synchronization because synchronization is not active
[13:14:29.510] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [693438667, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:29.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:14:29.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:14:29.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[13:14:29.525] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17189720]
[13:14:29.526] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:29.526] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c72e793] was not registered for synchronization because synchronization is not active
[13:14:29.527] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [303507783, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:29.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:14:29.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:14:29.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:14:29.559] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c72e793]
[13:16:10.402] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.402] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed6e25] was not registered for synchronization because synchronization is not active
[13:16:10.404] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128192606, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:16:10.405] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[13:16:10.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:10.409] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed6e25]
[13:16:10.413] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.413] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59277bc2] was not registered for synchronization because synchronization is not active
[13:16:10.414] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [82021363, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:10.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:10.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:10.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59277bc2]
[13:16:10.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232ae01e] was not registered for synchronization because synchronization is not active
[13:16:10.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1766116558, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:16:10.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:16:10.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:10.422] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@232ae01e]
[13:16:10.423] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.423] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba458e9] was not registered for synchronization because synchronization is not active
[13:16:10.424] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2068021019, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:16:10.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:16:10.430] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:16:10.431] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba458e9]
[13:16:10.431] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.431] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a779aec] was not registered for synchronization because synchronization is not active
[13:16:10.433] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [448602592, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:16:10.440] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:16:10.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:16:10.463] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a779aec]
[13:16:10.754] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.754] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1612ff87] was not registered for synchronization because synchronization is not active
[13:16:10.755] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [385276201, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:10.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:10.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:10.758] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1612ff87]
[13:16:10.758] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.759] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718282ae] was not registered for synchronization because synchronization is not active
[13:16:10.759] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [414629269, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:16:10.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:16:10.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:10.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718282ae]
[13:16:10.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.763] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c939be] was not registered for synchronization because synchronization is not active
[13:16:10.764] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1283809150, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:16:10.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:16:10.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:16:10.771] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44c939be]
[13:16:10.771] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:10.771] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ec79a59] was not registered for synchronization because synchronization is not active
[13:16:10.773] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2009467640, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:10.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:16:10.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:16:10.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:16:10.802] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ec79a59]
[13:16:12.848] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:12.849] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@178a2a9] was not registered for synchronization because synchronization is not active
[13:16:12.850] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1954701321, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:12.850] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:12.851] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:12.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:12.853] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@178a2a9]
[13:16:12.854] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:12.854] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30640d1e] was not registered for synchronization because synchronization is not active
[13:16:12.855] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1235553811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:12.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:16:12.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:12.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:12.860] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30640d1e]
[13:16:12.860] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:12.860] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@658b0ce] was not registered for synchronization because synchronization is not active
[13:16:12.861] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [214737286, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:12.861] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:16:12.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:16:12.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:12.864] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@658b0ce]
[13:16:12.864] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:12.864] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@acc3679] was not registered for synchronization because synchronization is not active
[13:16:12.865] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1372331220, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:12.865] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:16:12.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:12.867] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:16:12.868] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@acc3679]
[13:16:12.868] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:12.868] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c35c94d] was not registered for synchronization because synchronization is not active
[13:16:12.869] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1045978251, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:12.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:16:12.870] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:12.998] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:16:12.999] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c35c94d]
[13:16:24.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:24.208] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5933dc90] was not registered for synchronization because synchronization is not active
[13:16:24.209] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [659997908, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:24.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:24.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:24.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:24.212] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5933dc90]
[13:16:24.213] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:24.214] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee6f503] was not registered for synchronization because synchronization is not active
[13:16:24.214] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2118537741, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:24.218] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:16:24.218] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[13:16:24.222] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:24.223] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee6f503]
[13:16:24.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:24.224] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63332e85] was not registered for synchronization because synchronization is not active
[13:16:24.225] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [517490910, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:24.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:24.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:24.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:24.228] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63332e85]
[13:16:26.505] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:26.505] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66754769] was not registered for synchronization because synchronization is not active
[13:16:26.506] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [594709960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:26.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:26.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:26.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:26.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66754769]
[13:16:26.510] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:26.510] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96eec4] was not registered for synchronization because synchronization is not active
[13:16:26.511] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1759536223, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:26.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:16:26.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:16:26.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:26.515] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@96eec4]
[13:16:26.515] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:26.515] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4b411e] was not registered for synchronization because synchronization is not active
[13:16:26.516] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1808277174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:26.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:16:26.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:16:26.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:16:26.524] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a4b411e]
[13:16:26.524] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:26.524] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42880a69] was not registered for synchronization because synchronization is not active
[13:16:26.525] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [153068128, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:26.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:16:26.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:16:26.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:16:26.557] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42880a69]
[13:16:28.737] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:28.738] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d723d] was not registered for synchronization because synchronization is not active
[13:16:28.739] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [631964968, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:28.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:28.740] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:28.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:28.742] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563d723d]
[13:16:28.743] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:28.743] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495ed242] was not registered for synchronization because synchronization is not active
[13:16:28.744] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1899730566, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:28.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:16:28.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:28.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:28.747] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495ed242]
[13:16:28.748] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:28.748] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a65b6da] was not registered for synchronization because synchronization is not active
[13:16:28.749] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2086519491, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:28.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:16:28.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:16:28.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:28.751] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a65b6da]
[13:16:28.752] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:28.752] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708cec4] was not registered for synchronization because synchronization is not active
[13:16:28.753] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [293443499, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:28.753] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:16:28.753] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:28.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:16:28.756] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@708cec4]
[13:16:28.756] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:28.757] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6603054b] was not registered for synchronization because synchronization is not active
[13:16:28.758] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [219569477, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:28.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:16:28.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:28.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:16:28.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6603054b]
[13:16:51.331] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:51.332] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@736f3e3a] was not registered for synchronization because synchronization is not active
[13:16:51.333] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1011139211, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:51.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:16:51.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:16:51.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:51.335] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@736f3e3a]
[13:16:51.336] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:51.336] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9919f6b] was not registered for synchronization because synchronization is not active
[13:16:51.337] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [209719416, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:51.337] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:16:51.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:51.343] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:51.344] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9919f6b]
[13:16:51.344] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:51.344] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715b4ba4] was not registered for synchronization because synchronization is not active
[13:16:51.346] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1208783179, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:51.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:16:51.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:16:51.348] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:16:51.348] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715b4ba4]
[13:16:51.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:51.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6789cac7] was not registered for synchronization because synchronization is not active
[13:16:51.350] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [951910460, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:51.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:16:51.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:51.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:16:51.352] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6789cac7]
[13:16:51.352] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:16:51.353] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2cdef3] was not registered for synchronization because synchronization is not active
[13:16:51.353] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1236173617, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:16:51.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:16:51.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:16:51.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:16:51.403] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2cdef3]
[13:17:02.012] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:17:02.013] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a1e5e15] was not registered for synchronization because synchronization is not active
[13:17:02.014] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1616489054, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:17:02.014] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:17:02.014] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:17:02.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:17:02.017] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a1e5e15]
[13:17:02.018] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:17:02.018] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32065237] was not registered for synchronization because synchronization is not active
[13:17:02.019] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [696946112, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:17:02.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:17:02.020] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:17:02.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:17:02.023] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32065237]
[13:17:02.023] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:17:02.024] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76031361] was not registered for synchronization because synchronization is not active
[13:17:02.025] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [281212801, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:17:02.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:17:02.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:17:02.027] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:17:02.028] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76031361]
[13:17:02.028] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:17:02.028] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a7847a9] was not registered for synchronization because synchronization is not active
[13:17:02.029] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1631964923, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:17:02.029] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:17:02.030] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:17:02.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:17:02.032] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a7847a9]
[13:17:02.032] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:17:02.032] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ab7fb5] was not registered for synchronization because synchronization is not active
[13:17:02.034] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [731523155, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:17:02.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:17:02.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:17:02.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:17:02.077] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ab7fb5]
[13:17:43.321] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:18:24.309] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:24.319] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e2bf44d] was not registered for synchronization because synchronization is not active
[13:18:24.751] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [185179824, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:24.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:18:24.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[13:18:24.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:24.830] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e2bf44d]
[13:18:24.841] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:24.842] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76486a1a] was not registered for synchronization because synchronization is not active
[13:18:24.845] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [930439201, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:24.845] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:18:24.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:18:24.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:24.853] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76486a1a]
[13:18:24.861] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:24.861] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f9863a4] was not registered for synchronization because synchronization is not active
[13:18:24.870] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1711542671, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:24.870] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:18:24.872] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:18:24.880] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:24.881] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f9863a4]
[13:18:24.883] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:24.883] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfe9fd] was not registered for synchronization because synchronization is not active
[13:18:24.885] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [10421211, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:24.885] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:18:24.886] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:18:24.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:18:24.897] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfe9fd]
[13:18:24.897] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:24.897] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33f4e387] was not registered for synchronization because synchronization is not active
[13:18:24.910] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1508482959, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:24.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:18:24.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:18:25.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:18:25.044] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33f4e387]
[13:18:25.458] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:25.459] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314c45a4] was not registered for synchronization because synchronization is not active
[13:18:25.461] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [993597294, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:25.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:18:25.463] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:18:25.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:25.466] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314c45a4]
[13:18:25.467] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:25.468] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1201abd6] was not registered for synchronization because synchronization is not active
[13:18:25.469] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1365582576, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:25.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:18:25.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:18:25.474] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:25.475] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1201abd6]
[13:18:25.475] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:25.476] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2429ba19] was not registered for synchronization because synchronization is not active
[13:18:25.477] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [802012359, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:25.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:18:25.479] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:18:25.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:18:25.488] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2429ba19]
[13:18:25.489] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:25.489] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73666bb] was not registered for synchronization because synchronization is not active
[13:18:25.492] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [739921208, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:25.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:18:25.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:18:25.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:18:25.538] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73666bb]
[13:18:27.392] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:27.393] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b3dee1] was not registered for synchronization because synchronization is not active
[13:18:27.394] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1813151915, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:27.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:18:27.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:18:27.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:27.399] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b3dee1]
[13:18:27.399] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:27.399] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@357fdc5] was not registered for synchronization because synchronization is not active
[13:18:27.403] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1520722152, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:27.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:18:27.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:18:27.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:27.409] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@357fdc5]
[13:18:27.410] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:27.410] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@701b8f84] was not registered for synchronization because synchronization is not active
[13:18:27.412] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1439741233, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:27.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:18:27.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:18:27.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:27.416] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@701b8f84]
[13:18:27.417] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:27.417] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b8b8cf2] was not registered for synchronization because synchronization is not active
[13:18:27.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1036266905, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:27.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:18:27.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:18:27.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:18:27.426] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b8b8cf2]
[13:18:27.426] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:27.426] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276a58bf] was not registered for synchronization because synchronization is not active
[13:18:27.428] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [704459537, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:27.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:18:27.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:18:27.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:18:27.472] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276a58bf]
[13:18:29.959] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:29.960] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318d68fb] was not registered for synchronization because synchronization is not active
[13:18:29.961] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [596639539, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:29.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:18:29.962] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:18:29.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:29.965] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318d68fb]
[13:18:29.966] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:29.966] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64388a9b] was not registered for synchronization because synchronization is not active
[13:18:29.968] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [647272174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:29.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:18:29.970] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:18:29.972] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:18:29.973] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64388a9b]
[13:18:29.974] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:29.974] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40504c26] was not registered for synchronization because synchronization is not active
[13:18:29.975] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [801434678, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:29.975] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:18:29.976] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:18:29.985] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:18:29.986] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40504c26]
[13:18:29.987] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:18:29.987] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75de57c0] was not registered for synchronization because synchronization is not active
[13:18:29.989] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [331001925, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:18:29.990] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:18:29.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:18:30.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:18:30.027] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75de57c0]
[13:19:07.034] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:07.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@455cc30f] was not registered for synchronization because synchronization is not active
[13:19:07.036] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [330100979, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:07.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:19:07.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:19:07.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:07.039] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@455cc30f]
[13:19:07.040] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:07.040] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c60431b] was not registered for synchronization because synchronization is not active
[13:19:07.041] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [495125634, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:07.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:19:07.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:07.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:07.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c60431b]
[13:19:07.048] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:07.049] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d999ca] was not registered for synchronization because synchronization is not active
[13:19:07.050] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [392953861, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:07.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:19:07.051] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[13:19:07.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:07.054] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49d999ca]
[13:19:07.054] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:07.054] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dce24ba] was not registered for synchronization because synchronization is not active
[13:19:07.055] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1309046199, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:07.056] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:19:07.057] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:07.072] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[13:19:07.073] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dce24ba]
[13:19:07.073] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:07.073] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d44937d] was not registered for synchronization because synchronization is not active
[13:19:07.074] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2065314812, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:07.075] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:19:07.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:07.188] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:19:07.188] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d44937d]
[13:19:45.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:45.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d5bd0de] was not registered for synchronization because synchronization is not active
[13:19:45.825] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [513627253, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:45.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:19:45.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:19:45.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:45.828] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d5bd0de]
[13:19:45.828] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:45.828] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709aee61] was not registered for synchronization because synchronization is not active
[13:19:45.830] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1319010297, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:45.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:19:45.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:45.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:45.835] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709aee61]
[13:19:45.835] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:45.835] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a699bf1] was not registered for synchronization because synchronization is not active
[13:19:45.837] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2072159328, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:45.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:19:45.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[13:19:45.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:19:45.840] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a699bf1]
[13:19:45.840] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:45.840] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63869d62] was not registered for synchronization because synchronization is not active
[13:19:45.842] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1130788011, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:45.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:19:45.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:45.858] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[13:19:45.859] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63869d62]
[13:19:45.859] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:19:45.859] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba144fb] was not registered for synchronization because synchronization is not active
[13:19:45.860] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [432223320, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:19:45.861] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:19:45.861] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:19:45.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:19:45.909] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba144fb]
[13:20:28.582] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:20:28.582] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc787e] was not registered for synchronization because synchronization is not active
[13:20:28.584] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2127873333, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:20:28.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:20:28.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:20:28.587] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:20:28.588] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbc787e]
[13:20:28.589] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:20:28.589] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5535bb76] was not registered for synchronization because synchronization is not active
[13:20:28.590] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1122940593, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:20:28.590] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:20:28.591] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:20:28.594] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:20:28.595] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5535bb76]
[13:20:28.596] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:20:28.596] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66eba932] was not registered for synchronization because synchronization is not active
[13:20:28.598] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [535931254, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:20:28.598] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:20:28.599] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[13:20:28.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:20:28.601] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66eba932]
[13:20:28.602] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:20:28.602] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46936aa3] was not registered for synchronization because synchronization is not active
[13:20:28.603] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1205560656, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:20:28.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:20:28.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:20:28.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[13:20:28.623] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46936aa3]
[13:20:28.623] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:20:28.623] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137bbfb] was not registered for synchronization because synchronization is not active
[13:20:28.624] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1861739056, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:20:28.625] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:20:28.625] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:20:28.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:20:28.683] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@137bbfb]
[13:21:21.604] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:21.604] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5602809b] was not registered for synchronization because synchronization is not active
[13:21:21.605] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1114018029, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:21.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:21.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:21.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:21.608] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5602809b]
[13:21:21.609] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:21.609] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d980e9] was not registered for synchronization because synchronization is not active
[13:21:21.610] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [353557134, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:21.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:21:21.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:21:21.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:21.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64d980e9]
[13:21:21.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:21.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748c88fb] was not registered for synchronization because synchronization is not active
[13:21:21.617] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [590909220, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:21.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:21:21.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[13:21:21.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:21.620] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@748c88fb]
[13:21:21.620] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:21.621] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61eccce5] was not registered for synchronization because synchronization is not active
[13:21:21.622] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [697972441, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:21.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:21:21.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:21:21.637] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[13:21:21.638] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61eccce5]
[13:21:21.638] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:21.638] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4637571e] was not registered for synchronization because synchronization is not active
[13:21:21.639] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [315325301, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:21.640] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:21:21.640] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[13:21:21.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:21:21.666] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4637571e]
[13:21:48.466] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:48.466] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d2f5428] was not registered for synchronization because synchronization is not active
[13:21:48.468] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2083019091, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:48.468] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:48.468] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:48.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:48.471] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d2f5428]
[13:21:48.471] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:48.472] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a3fc947] was not registered for synchronization because synchronization is not active
[13:21:48.473] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1378978628, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:48.473] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:21:48.474] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:21:48.477] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:48.478] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a3fc947]
[13:21:48.478] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:48.478] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6448442a] was not registered for synchronization because synchronization is not active
[13:21:48.480] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1456527820, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:48.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:21:48.481] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:21:48.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:21:48.488] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6448442a]
[13:21:48.489] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:48.489] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e81a80] was not registered for synchronization because synchronization is not active
[13:21:48.493] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1539601088, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:48.494] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:21:48.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:21:48.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:21:48.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41e81a80]
[13:21:50.361] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:50.362] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e49244] was not registered for synchronization because synchronization is not active
[13:21:50.364] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [636446355, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:50.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:50.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:50.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:50.368] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e49244]
[13:21:50.368] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:50.369] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c92f1c7] was not registered for synchronization because synchronization is not active
[13:21:50.370] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1941633337, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:50.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:21:50.370] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:21:50.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:50.374] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c92f1c7]
[13:21:50.374] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:50.374] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8583a4] was not registered for synchronization because synchronization is not active
[13:21:50.376] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [863138420, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:50.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:21:50.377] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(String)
[13:21:50.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:50.379] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8583a4]
[13:21:50.379] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:50.380] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2a84f7] was not registered for synchronization because synchronization is not active
[13:21:50.381] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [832769228, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:50.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:21:50.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:21:50.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:21:50.384] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2a84f7]
[13:21:50.384] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:50.384] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1788d5b0] was not registered for synchronization because synchronization is not active
[13:21:50.385] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [361006392, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:50.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:21:50.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:21:50.430] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:21:50.430] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1788d5b0]
[13:21:52.239] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:52.240] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5edf41c0] was not registered for synchronization because synchronization is not active
[13:21:52.241] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [909354105, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:52.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:52.242] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:52.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:52.244] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5edf41c0]
[13:21:52.245] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:52.245] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@df47194] was not registered for synchronization because synchronization is not active
[13:21:52.247] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1743031071, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:52.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:21:52.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:21:52.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:52.250] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@df47194]
[13:21:52.250] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:52.250] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@262a5a0b] was not registered for synchronization because synchronization is not active
[13:21:52.252] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1336549876, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:52.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:21:52.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:21:52.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:21:52.259] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@262a5a0b]
[13:21:52.260] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:52.260] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e8c920] was not registered for synchronization because synchronization is not active
[13:21:52.263] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1938619191, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:52.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:21:52.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:21:52.297] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:21:52.298] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e8c920]
[13:21:53.071] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:53.071] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d9d51bb] was not registered for synchronization because synchronization is not active
[13:21:53.073] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1224005749, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:53.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:53.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:53.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:53.076] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d9d51bb]
[13:21:53.077] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:53.077] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d08db67] was not registered for synchronization because synchronization is not active
[13:21:53.078] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [994287763, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:53.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:21:53.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[13:21:53.083] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:53.083] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d08db67]
[13:21:53.084] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:53.084] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75c3507f] was not registered for synchronization because synchronization is not active
[13:21:53.085] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1297717862, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:53.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:21:53.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(String)
[13:21:53.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:53.088] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75c3507f]
[13:21:53.088] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:53.088] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a30d6a9] was not registered for synchronization because synchronization is not active
[13:21:53.089] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1025956916, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:53.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:21:53.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[13:21:53.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:21:53.092] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a30d6a9]
[13:21:53.093] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:53.093] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e847124] was not registered for synchronization because synchronization is not active
[13:21:53.094] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [691402152, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:53.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:21:53.095] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 41(Integer)
[13:21:53.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:21:53.144] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e847124]
[13:21:54.440] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:54.440] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24055e8d] was not registered for synchronization because synchronization is not active
[13:21:54.442] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1001629615, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:54.442] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:54.443] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:54.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:54.445] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24055e8d]
[13:21:54.445] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:54.445] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d3b95d7] was not registered for synchronization because synchronization is not active
[13:21:54.447] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [938480364, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:54.447] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:21:54.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:21:54.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:54.451] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d3b95d7]
[13:21:54.451] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:54.451] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55807220] was not registered for synchronization because synchronization is not active
[13:21:54.452] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1282097558, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:54.452] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:21:54.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:21:54.459] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:21:54.460] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55807220]
[13:21:54.460] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:54.460] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd80570] was not registered for synchronization because synchronization is not active
[13:21:54.462] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [450004360, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:54.463] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:21:54.473] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:21:54.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:21:54.497] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd80570]
[13:21:55.393] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:55.394] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349c746b] was not registered for synchronization because synchronization is not active
[13:21:55.395] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1627037722, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:55.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:55.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:55.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:55.399] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349c746b]
[13:21:55.399] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:55.399] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a32e5d] was not registered for synchronization because synchronization is not active
[13:21:55.401] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1950963600, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:55.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:21:55.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[13:21:55.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:55.405] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a32e5d]
[13:21:55.405] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:55.405] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36dc39f0] was not registered for synchronization because synchronization is not active
[13:21:55.407] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1011502923, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:55.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:21:55.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(String)
[13:21:55.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:55.410] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36dc39f0]
[13:21:55.410] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:55.410] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60958c52] was not registered for synchronization because synchronization is not active
[13:21:55.412] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1413201896, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:55.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:21:55.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[13:21:55.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:21:55.415] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60958c52]
[13:21:55.415] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:55.415] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23127e8e] was not registered for synchronization because synchronization is not active
[13:21:55.417] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [720705144, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:55.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:21:55.418] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 44(Integer)
[13:21:55.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:21:55.467] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23127e8e]
[13:21:56.824] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:56.824] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e0c96ee] was not registered for synchronization because synchronization is not active
[13:21:56.826] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1389551853, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:56.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:56.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:56.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:56.829] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e0c96ee]
[13:21:56.829] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:56.829] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33ace27e] was not registered for synchronization because synchronization is not active
[13:21:56.830] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [814482839, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:56.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:21:56.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:21:56.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:56.834] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33ace27e]
[13:21:56.835] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:56.835] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e304667] was not registered for synchronization because synchronization is not active
[13:21:56.836] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [62253412, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:56.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:21:56.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:21:56.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:21:56.844] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e304667]
[13:21:56.844] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:56.844] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563793a9] was not registered for synchronization because synchronization is not active
[13:21:56.846] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [386459869, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:56.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:21:56.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:21:56.879] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:21:56.879] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@563793a9]
[13:21:57.789] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:57.789] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33376cfc] was not registered for synchronization because synchronization is not active
[13:21:57.791] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2077796553, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:57.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:57.792] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:57.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:57.794] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33376cfc]
[13:21:57.794] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:57.795] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632f5812] was not registered for synchronization because synchronization is not active
[13:21:57.795] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1474305507, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:57.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:21:57.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:21:57.799] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:57.800] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632f5812]
[13:21:57.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:57.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@319716b7] was not registered for synchronization because synchronization is not active
[13:21:57.802] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1646093307, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:57.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:21:57.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[13:21:57.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:57.806] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@319716b7]
[13:21:57.806] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:57.806] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46db8c0] was not registered for synchronization because synchronization is not active
[13:21:57.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1982993882, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:57.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:21:57.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:21:57.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:21:57.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46db8c0]
[13:21:57.810] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:57.810] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276415ba] was not registered for synchronization because synchronization is not active
[13:21:57.811] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1442269608, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:57.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:21:57.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:21:57.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:21:57.855] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@276415ba]
[13:21:59.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:59.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e3d44c6] was not registered for synchronization because synchronization is not active
[13:21:59.617] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [785893254, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:59.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:21:59.618] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:21:59.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:59.621] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e3d44c6]
[13:21:59.622] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:59.622] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a803e86] was not registered for synchronization because synchronization is not active
[13:21:59.623] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1889596285, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:59.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:21:59.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:21:59.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:21:59.627] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a803e86]
[13:21:59.627] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:59.627] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35cd893a] was not registered for synchronization because synchronization is not active
[13:21:59.628] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [98368972, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:59.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:21:59.629] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:21:59.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:21:59.636] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35cd893a]
[13:21:59.637] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:21:59.637] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16aa4549] was not registered for synchronization because synchronization is not active
[13:21:59.639] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [499287497, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:21:59.639] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:21:59.648] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:21:59.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:21:59.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16aa4549]
[13:22:00.484] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:00.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d24f3f] was not registered for synchronization because synchronization is not active
[13:22:00.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1672274116, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:00.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:00.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:00.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:00.489] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d24f3f]
[13:22:00.489] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:00.489] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb061b4] was not registered for synchronization because synchronization is not active
[13:22:00.490] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1944489366, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:00.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:00.491] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:22:00.494] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:00.494] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb061b4]
[13:22:00.495] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:00.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6f675d] was not registered for synchronization because synchronization is not active
[13:22:00.496] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [981556474, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:00.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:00.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[13:22:00.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:00.499] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c6f675d]
[13:22:00.499] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:00.499] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb0217a] was not registered for synchronization because synchronization is not active
[13:22:00.500] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [804622381, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:00.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:00.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:22:00.503] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:22:00.504] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eb0217a]
[13:22:00.504] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:00.504] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d83fe35] was not registered for synchronization because synchronization is not active
[13:22:00.505] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [796224445, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:00.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:00.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[13:22:00.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:00.554] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d83fe35]
[13:22:02.047] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:02.047] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb2bbbe] was not registered for synchronization because synchronization is not active
[13:22:02.048] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1607763690, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:02.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:02.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:02.051] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:02.052] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb2bbbe]
[13:22:02.052] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:02.052] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60a1e684] was not registered for synchronization because synchronization is not active
[13:22:02.054] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2002640194, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:02.054] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:02.055] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:02.058] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:02.059] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60a1e684]
[13:22:02.059] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:02.059] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778a34f9] was not registered for synchronization because synchronization is not active
[13:22:02.060] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [688339529, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:02.060] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:02.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:02.067] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:02.068] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778a34f9]
[13:22:02.068] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:02.068] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6b1433] was not registered for synchronization because synchronization is not active
[13:22:02.071] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1069695584, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:02.071] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:02.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:02.102] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:02.102] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f6b1433]
[13:22:03.999] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:03.999] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@905f2f5] was not registered for synchronization because synchronization is not active
[13:22:04.000] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1459458199, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:04.001] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:04.001] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:04.003] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:04.004] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@905f2f5]
[13:22:04.004] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:04.005] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0df69b] was not registered for synchronization because synchronization is not active
[13:22:04.006] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1847769901, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:04.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:04.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:04.010] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:04.011] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c0df69b]
[13:22:04.011] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:04.011] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494c2468] was not registered for synchronization because synchronization is not active
[13:22:04.012] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [817152955, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:04.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:04.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[13:22:04.014] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:04.015] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@494c2468]
[13:22:04.015] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:04.016] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e73c5c] was not registered for synchronization because synchronization is not active
[13:22:04.017] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1747552573, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:04.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:04.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:04.021] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:04.022] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e73c5c]
[13:22:04.022] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:04.022] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47968e4f] was not registered for synchronization because synchronization is not active
[13:22:04.024] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [37595150, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:04.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:04.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:04.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:04.082] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47968e4f]
[13:22:10.088] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:10.088] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d6bfaad] was not registered for synchronization because synchronization is not active
[13:22:10.089] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1381085025, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:10.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:10.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:10.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:10.093] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d6bfaad]
[13:22:10.093] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:10.093] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71bb52c3] was not registered for synchronization because synchronization is not active
[13:22:10.095] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [759295061, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:10.095] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:10.096] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:10.098] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:10.099] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71bb52c3]
[13:22:10.100] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:10.100] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e3b7d2b] was not registered for synchronization because synchronization is not active
[13:22:10.101] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1015191248, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:10.101] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:10.102] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:10.108] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:10.109] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e3b7d2b]
[13:22:10.109] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:10.109] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5929f] was not registered for synchronization because synchronization is not active
[13:22:10.111] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1688448562, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:10.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:10.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:10.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:10.145] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60b5929f]
[13:22:11.473] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:11.474] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69ff24cc] was not registered for synchronization because synchronization is not active
[13:22:11.475] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [497923816, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:11.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:11.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:11.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:11.478] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69ff24cc]
[13:22:11.479] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:11.479] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4059784e] was not registered for synchronization because synchronization is not active
[13:22:11.481] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1415750551, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:11.481] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:11.482] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:11.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:11.484] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4059784e]
[13:22:11.484] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:11.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea1095] was not registered for synchronization because synchronization is not active
[13:22:11.485] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [766325666, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:11.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:11.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:11.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:11.493] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ea1095]
[13:22:11.493] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:11.493] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46086bd7] was not registered for synchronization because synchronization is not active
[13:22:11.495] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1779718362, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:11.496] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:11.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[13:22:11.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:11.530] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46086bd7]
[13:22:12.776] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:12.777] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ad0e71f] was not registered for synchronization because synchronization is not active
[13:22:12.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [738996606, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:12.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:12.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:12.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:12.782] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ad0e71f]
[13:22:12.782] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:12.783] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f38c426] was not registered for synchronization because synchronization is not active
[13:22:12.784] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [101315028, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:12.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:12.785] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 35(Integer)
[13:22:12.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:12.788] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f38c426]
[13:22:12.788] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:12.788] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5181fc] was not registered for synchronization because synchronization is not active
[13:22:12.790] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1409513378, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:12.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:12.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 35(String)
[13:22:12.792] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:12.793] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f5181fc]
[13:22:12.793] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:12.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105de9bf] was not registered for synchronization because synchronization is not active
[13:22:12.794] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [301483941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:12.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:12.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 35(Integer)
[13:22:12.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:22:12.797] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105de9bf]
[13:22:12.797] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:12.798] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762e71a9] was not registered for synchronization because synchronization is not active
[13:22:12.799] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2135051353, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:12.799] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:12.800] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 35(Integer)
[13:22:12.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:12.842] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@762e71a9]
[13:22:14.538] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:14.538] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a49852] was not registered for synchronization because synchronization is not active
[13:22:14.539] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [864745793, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:14.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:14.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:14.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:14.542] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a49852]
[13:22:14.543] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:14.543] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f564834] was not registered for synchronization because synchronization is not active
[13:22:14.544] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [397244229, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:14.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:14.545] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:14.547] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:14.548] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f564834]
[13:22:14.548] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:14.548] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21db1646] was not registered for synchronization because synchronization is not active
[13:22:14.550] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1837442864, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:14.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:14.551] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:14.557] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:14.558] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21db1646]
[13:22:14.558] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:14.558] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7370cad0] was not registered for synchronization because synchronization is not active
[13:22:14.560] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [844312852, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:14.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:14.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:14.592] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:14.593] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7370cad0]
[13:22:15.506] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:15.507] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47d6eee4] was not registered for synchronization because synchronization is not active
[13:22:15.508] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1804320064, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:15.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:15.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:15.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:15.511] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47d6eee4]
[13:22:15.512] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:15.512] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cffe112] was not registered for synchronization because synchronization is not active
[13:22:15.513] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [854320829, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:15.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:15.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:22:15.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:15.517] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cffe112]
[13:22:15.518] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:15.518] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48780654] was not registered for synchronization because synchronization is not active
[13:22:15.519] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [386866256, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:15.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:15.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(String)
[13:22:15.521] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:15.521] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48780654]
[13:22:15.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:15.522] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@148fda3d] was not registered for synchronization because synchronization is not active
[13:22:15.523] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1239706952, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:15.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:15.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:22:15.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:22:15.526] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@148fda3d]
[13:22:15.526] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:15.526] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dea6570] was not registered for synchronization because synchronization is not active
[13:22:15.527] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1517643800, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:15.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:15.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 40(Integer)
[13:22:15.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:15.559] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dea6570]
[13:22:17.161] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:17.162] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab1004] was not registered for synchronization because synchronization is not active
[13:22:17.163] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1162944154, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:17.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:17.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:17.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:17.166] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11ab1004]
[13:22:17.166] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:17.167] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7971c4d9] was not registered for synchronization because synchronization is not active
[13:22:17.168] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1893221503, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:17.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:17.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:17.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:17.172] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7971c4d9]
[13:22:17.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:17.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7dd934] was not registered for synchronization because synchronization is not active
[13:22:17.174] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1606594854, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:17.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:17.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:17.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:17.182] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7dd934]
[13:22:17.182] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:17.182] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1966cf81] was not registered for synchronization because synchronization is not active
[13:22:17.184] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2084210179, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:17.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:17.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:17.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:17.215] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1966cf81]
[13:22:18.754] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:18.755] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ea1447] was not registered for synchronization because synchronization is not active
[13:22:18.756] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1350759860, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:18.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:18.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:18.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:18.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47ea1447]
[13:22:18.760] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:18.760] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33cac84d] was not registered for synchronization because synchronization is not active
[13:22:18.761] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [417712644, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:18.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:18.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[13:22:18.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:18.765] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33cac84d]
[13:22:18.765] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:18.765] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70423d34] was not registered for synchronization because synchronization is not active
[13:22:18.766] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1016249470, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:18.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:18.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(String)
[13:22:18.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:18.769] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70423d34]
[13:22:18.769] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:18.769] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4990c8af] was not registered for synchronization because synchronization is not active
[13:22:18.770] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1774536385, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:18.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:18.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[13:22:18.773] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:22:18.773] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4990c8af]
[13:22:18.774] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:18.774] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dff0f09] was not registered for synchronization because synchronization is not active
[13:22:18.775] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [750215904, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:18.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:18.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 45(Integer)
[13:22:18.804] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:18.804] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dff0f09]
[13:22:20.783] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:20.783] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33578135] was not registered for synchronization because synchronization is not active
[13:22:20.785] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [718161960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:20.785] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:20.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:20.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:20.789] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33578135]
[13:22:20.789] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:20.790] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31124dc8] was not registered for synchronization because synchronization is not active
[13:22:20.791] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [718323284, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:20.792] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:20.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:20.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:20.796] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31124dc8]
[13:22:20.797] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:20.797] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc6d36] was not registered for synchronization because synchronization is not active
[13:22:20.798] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [403869620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:20.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:20.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:20.804] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:20.805] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bfc6d36]
[13:22:20.805] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:20.805] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227d590f] was not registered for synchronization because synchronization is not active
[13:22:20.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [147828687, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:20.808] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:20.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:20.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:20.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@227d590f]
[13:22:22.145] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:22.146] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f106854] was not registered for synchronization because synchronization is not active
[13:22:22.147] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1244071245, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:22.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:22.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:22.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:22.151] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f106854]
[13:22:22.151] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:22.151] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ecf690] was not registered for synchronization because synchronization is not active
[13:22:22.152] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [5718317, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:22.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:22.153] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:22.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:22.156] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ecf690]
[13:22:22.156] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:22.157] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4dbdd8] was not registered for synchronization because synchronization is not active
[13:22:22.158] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [329142407, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:22.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:22.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[13:22:22.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:22.161] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4dbdd8]
[13:22:22.161] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:22.161] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f10af4a] was not registered for synchronization because synchronization is not active
[13:22:22.162] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1763840889, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:22.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:22.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:22.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:22.167] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f10af4a]
[13:22:22.167] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:22.167] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18b4ff5a] was not registered for synchronization because synchronization is not active
[13:22:22.168] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [409730657, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:22.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:22.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[13:22:22.276] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:22.277] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18b4ff5a]
[13:22:24.151] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:24.152] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9eaeff1] was not registered for synchronization because synchronization is not active
[13:22:24.153] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1544241183, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:24.153] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:24.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:24.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:24.156] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9eaeff1]
[13:22:24.157] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:24.157] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204f2bca] was not registered for synchronization because synchronization is not active
[13:22:24.158] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [861040295, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:24.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:24.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:24.161] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:24.162] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204f2bca]
[13:22:24.162] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:24.162] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b72b47a] was not registered for synchronization because synchronization is not active
[13:22:24.164] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [421763205, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:24.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:24.164] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:24.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:24.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b72b47a]
[13:22:24.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:24.171] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8f6af5] was not registered for synchronization because synchronization is not active
[13:22:24.173] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2039005030, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:24.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:24.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:24.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:24.205] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8f6af5]
[13:22:25.137] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:25.137] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38bab20b] was not registered for synchronization because synchronization is not active
[13:22:25.139] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1196544974, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:25.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:25.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:25.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:25.142] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38bab20b]
[13:22:25.143] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:25.143] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b6074d] was not registered for synchronization because synchronization is not active
[13:22:25.145] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [373350167, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:25.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:25.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:25.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:25.148] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35b6074d]
[13:22:25.149] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:25.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e33181c] was not registered for synchronization because synchronization is not active
[13:22:25.150] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [813096300, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:25.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:25.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:25.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:25.158] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e33181c]
[13:22:25.158] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:25.158] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22d94784] was not registered for synchronization because synchronization is not active
[13:22:25.160] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [46165974, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:25.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:25.167] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[13:22:25.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:25.192] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22d94784]
[13:22:26.760] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:26.760] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31efdb23] was not registered for synchronization because synchronization is not active
[13:22:26.762] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [297730011, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:26.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:26.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:26.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:26.765] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31efdb23]
[13:22:26.766] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:26.766] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3251fe] was not registered for synchronization because synchronization is not active
[13:22:26.768] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1965928266, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:26.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:22:26.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[13:22:26.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:26.772] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b3251fe]
[13:22:26.772] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:26.772] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd80ea2] was not registered for synchronization because synchronization is not active
[13:22:26.773] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [161993547, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:26.774] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:22:26.774] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(String)
[13:22:26.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:26.776] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd80ea2]
[13:22:26.777] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:26.777] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d2fb7e] was not registered for synchronization because synchronization is not active
[13:22:26.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [98020056, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:26.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:22:26.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[13:22:26.785] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[13:22:26.786] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d2fb7e]
[13:22:26.786] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:26.786] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541bc323] was not registered for synchronization because synchronization is not active
[13:22:26.788] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1845220791, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:26.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:22:26.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[13:22:26.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:22:26.811] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@541bc323]
[13:22:33.496] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:33.496] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6f478e] was not registered for synchronization because synchronization is not active
[13:22:33.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [592105698, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:33.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:22:33.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:22:33.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:33.501] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b6f478e]
[13:22:33.502] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:33.502] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b00d5f] was not registered for synchronization because synchronization is not active
[13:22:33.504] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1243646941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:33.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:22:33.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:22:33.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:22:33.507] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b00d5f]
[13:22:33.507] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:33.507] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e17d8da] was not registered for synchronization because synchronization is not active
[13:22:33.508] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1427942815, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:33.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:22:33.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:22:33.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:22:33.515] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e17d8da]
[13:22:33.516] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:22:33.516] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c63607e] was not registered for synchronization because synchronization is not active
[13:22:33.517] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1923444674, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:22:33.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:22:33.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:22:33.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:22:33.549] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c63607e]
[13:34:00.391] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:00.391] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e20882f] was not registered for synchronization because synchronization is not active
[13:34:00.393] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1205910615, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:00.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:34:00.394] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:34:00.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:34:00.396] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e20882f]
[13:34:00.397] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:00.397] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f902805] was not registered for synchronization because synchronization is not active
[13:34:00.398] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1968017718, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:00.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[13:34:00.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:34:00.401] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:34:00.402] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f902805]
[13:34:00.402] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:00.402] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4a5a65] was not registered for synchronization because synchronization is not active
[13:34:00.403] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1714030848, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:00.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[13:34:00.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(String)
[13:34:00.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:34:00.407] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4a5a65]
[13:34:00.407] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:00.407] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@329aa658] was not registered for synchronization because synchronization is not active
[13:34:00.408] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [557514987, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:00.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[13:34:00.409] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:34:00.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:34:00.411] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@329aa658]
[13:34:00.411] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:00.411] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9eb31e] was not registered for synchronization because synchronization is not active
[13:34:00.412] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [827231953, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:00.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[13:34:00.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 46(Integer)
[13:34:00.473] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:34:00.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9eb31e]
[13:34:03.608] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:03.608] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@617bb3e5] was not registered for synchronization because synchronization is not active
[13:34:03.609] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1246150753, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:03.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:34:03.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[13:34:03.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:34:03.613] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@617bb3e5]
[13:34:03.613] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:03.613] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645fd78f] was not registered for synchronization because synchronization is not active
[13:34:03.614] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1671260775, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:03.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:34:03.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:34:03.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:34:03.617] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645fd78f]
[13:34:03.618] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:03.618] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c41fd4e] was not registered for synchronization because synchronization is not active
[13:34:03.619] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2002630969, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:03.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:34:03.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:34:03.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:34:03.626] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c41fd4e]
[13:34:03.626] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:34:03.627] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f3300fb] was not registered for synchronization because synchronization is not active
[13:34:03.628] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1795984921, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:34:03.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:34:03.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:34:03.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:34:03.661] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f3300fb]
[13:59:14.014] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:14.015] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f9ba9ac] was not registered for synchronization because synchronization is not active
[13:59:14.017] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1011256450, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:14.018] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:14.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:14.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:14.023] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f9ba9ac]
[13:59:18.708] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:18.709] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a61785d] was not registered for synchronization because synchronization is not active
[13:59:18.710] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [10559890, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:18.710] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:18.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:18.714] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:18.715] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a61785d]
[13:59:29.685] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:29.686] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61eb8e34] was not registered for synchronization because synchronization is not active
[13:59:29.687] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [361802219, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:29.687] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:29.687] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:29.690] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:29.691] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61eb8e34]
[13:59:30.283] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:30.284] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@361a0d46] was not registered for synchronization because synchronization is not active
[13:59:30.285] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [712082619, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:30.285] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:30.285] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:30.288] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:30.289] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@361a0d46]
[13:59:30.451] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:30.451] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acca9f9] was not registered for synchronization because synchronization is not active
[13:59:30.453] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [546833268, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:30.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:30.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:30.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:30.457] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6acca9f9]
[13:59:30.706] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:30.706] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@663cb8e9] was not registered for synchronization because synchronization is not active
[13:59:30.708] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1454374701, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:30.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:30.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:30.712] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:30.713] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@663cb8e9]
[13:59:30.893] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:30.893] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77907488] was not registered for synchronization because synchronization is not active
[13:59:30.894] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1323850548, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:30.894] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:30.895] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:30.899] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:30.899] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77907488]
[13:59:31.083] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:31.084] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e52b437] was not registered for synchronization because synchronization is not active
[13:59:31.085] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1938033232, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:31.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:31.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:31.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:31.089] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e52b437]
[13:59:31.290] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:31.290] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e7d10f5] was not registered for synchronization because synchronization is not active
[13:59:31.291] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157253473, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:31.292] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:31.292] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:31.297] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:31.297] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e7d10f5]
[13:59:31.500] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:31.500] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c21ee3] was not registered for synchronization because synchronization is not active
[13:59:31.502] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1536115988, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:31.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:31.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:31.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:31.506] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c21ee3]
[13:59:32.211] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:32.211] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd2d04] was not registered for synchronization because synchronization is not active
[13:59:32.213] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [505284947, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:32.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:32.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:32.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:32.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cd2d04]
[13:59:49.047] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:59:49.047] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9468d19] was not registered for synchronization because synchronization is not active
[13:59:49.048] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2111074310, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:59:49.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:59:49.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[13:59:49.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:59:49.053] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9468d19]
[14:01:52.879] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:01:52.879] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33314257] was not registered for synchronization because synchronization is not active
[14:01:52.893] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [191213037, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:01:52.893] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:01:52.894] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:01:52.895] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:01:52.896] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33314257]
[14:01:52.896] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:01:52.896] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b02f872] was not registered for synchronization because synchronization is not active
[14:01:52.897] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [614845825, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:01:52.897] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:01:52.898] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:01:52.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:01:52.926] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b02f872]
[14:05:48.547] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:05:48.548] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568c97c9] was not registered for synchronization because synchronization is not active
[14:05:48.549] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [424193234, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:05:48.549] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:05:48.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:05:48.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:05:48.553] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@568c97c9]
[14:05:48.553] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:05:48.554] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c3e5bd] was not registered for synchronization because synchronization is not active
[14:05:48.555] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [514764486, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:05:48.555] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:05:48.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:05:48.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:05:48.579] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c3e5bd]
[14:06:12.651] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:06:12.651] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129125c] was not registered for synchronization because synchronization is not active
[14:06:12.652] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [87672420, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:06:12.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:06:12.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:06:12.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:06:12.656] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@129125c]
[14:06:12.656] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:06:12.656] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fe071b] was not registered for synchronization because synchronization is not active
[14:06:12.657] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1644552940, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:06:12.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:06:12.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:06:12.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:06:12.681] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fe071b]
[14:07:49.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:07:49.921] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@600503c6] was not registered for synchronization because synchronization is not active
[14:07:49.922] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1267483299, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:07:49.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:07:49.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:07:49.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:07:49.925] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@600503c6]
[14:07:49.926] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:07:49.926] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5474552b] was not registered for synchronization because synchronization is not active
[14:07:49.927] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1963903754, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:07:49.927] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:07:49.928] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:07:49.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:07:49.950] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5474552b]
[14:09:01.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:09:01.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217f2047] was not registered for synchronization because synchronization is not active
[14:09:01.124] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [129732180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:09:01.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:09:01.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:09:01.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:09:01.128] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@217f2047]
[14:09:01.128] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:09:01.128] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5d439f] was not registered for synchronization because synchronization is not active
[14:09:01.130] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1431151135, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:09:01.130] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:09:01.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:09:01.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:09:01.156] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a5d439f]
[14:09:37.689] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:09:37.689] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21de7f1b] was not registered for synchronization because synchronization is not active
[14:09:37.690] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [887401544, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:09:37.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:09:37.691] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:09:37.693] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:09:37.694] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21de7f1b]
[14:09:37.694] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:09:37.694] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bce7abb] was not registered for synchronization because synchronization is not active
[14:09:37.695] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2058827594, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:09:37.695] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:09:37.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:09:37.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:09:37.719] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bce7abb]
[14:11:16.275] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:11:16.275] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f0753b] was not registered for synchronization because synchronization is not active
[14:11:16.276] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [783274331, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:11:16.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:11:16.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:11:16.279] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:11:16.280] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62f0753b]
[14:11:16.281] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:11:16.281] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce66909] was not registered for synchronization because synchronization is not active
[14:11:16.282] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [832030766, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:11:16.282] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:11:16.283] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:11:16.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:11:16.306] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ce66909]
[14:12:03.787] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:03.787] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56344c71] was not registered for synchronization because synchronization is not active
[14:12:03.788] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1788733786, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:03.789] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:12:03.789] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:12:03.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:12:03.791] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56344c71]
[14:12:03.792] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:03.792] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386744f7] was not registered for synchronization because synchronization is not active
[14:12:03.793] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1061130876, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:03.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:12:03.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:12:03.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:12:03.817] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@386744f7]
[14:12:11.242] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:11.243] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b4dbe3a] was not registered for synchronization because synchronization is not active
[14:12:11.244] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1696570835, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:11.244] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:12:11.245] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:12:11.246] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:12:11.247] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b4dbe3a]
[14:12:11.247] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:11.247] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c80e6a] was not registered for synchronization because synchronization is not active
[14:12:11.248] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [139512160, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:11.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:12:11.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:12:11.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:12:11.272] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c80e6a]
[14:12:40.818] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:40.818] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d2c1a2] was not registered for synchronization because synchronization is not active
[14:12:40.819] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [687485469, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:40.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:12:40.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:12:40.822] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:12:40.822] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23d2c1a2]
[14:12:40.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:12:40.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@479ae42c] was not registered for synchronization because synchronization is not active
[14:12:40.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1940286797, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:12:40.824] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:12:40.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:12:40.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:12:40.847] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@479ae42c]
[14:13:15.201] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:15.202] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497a48b0] was not registered for synchronization because synchronization is not active
[14:13:15.203] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2109923237, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:15.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:13:15.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:13:15.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:13:15.206] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@497a48b0]
[14:13:15.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:13:15.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8a2d33] was not registered for synchronization because synchronization is not active
[14:13:15.208] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [226859996, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:13:15.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:13:15.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:13:15.231] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:13:15.232] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a8a2d33]
[14:14:04.030] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:14:04.030] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2421025b] was not registered for synchronization because synchronization is not active
[14:14:04.032] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [873167025, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:14:04.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:14:04.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:14:04.035] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:14:04.036] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2421025b]
[14:14:04.036] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:14:04.036] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c81a9e] was not registered for synchronization because synchronization is not active
[14:14:04.037] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [932585659, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:14:04.038] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:14:04.038] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:14:04.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:14:04.061] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68c81a9e]
[14:14:09.905] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:14:09.906] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@267ce4e8] was not registered for synchronization because synchronization is not active
[14:14:09.907] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [266968292, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:14:09.907] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:14:09.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:14:09.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:14:09.910] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@267ce4e8]
[14:14:09.911] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:14:09.911] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41d95125] was not registered for synchronization because synchronization is not active
[14:14:09.912] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1078455407, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:14:09.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:14:09.913] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:14:09.935] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:14:09.935] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41d95125]
[14:18:17.356] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:18:17.356] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a0b3e] was not registered for synchronization because synchronization is not active
[14:18:17.357] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1041994746, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:18:17.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:18:17.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:18:17.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:18:17.360] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@184a0b3e]
[14:18:17.360] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:18:17.361] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b3e39cc] was not registered for synchronization because synchronization is not active
[14:18:17.362] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [876944622, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:18:17.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:18:17.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:18:17.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:18:17.386] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b3e39cc]
[14:18:42.153] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:18:42.153] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3345fd1] was not registered for synchronization because synchronization is not active
[14:18:42.155] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [185896160, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:18:42.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:18:42.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:18:42.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:18:42.159] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3345fd1]
[14:18:42.160] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:18:42.160] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cc49338] was not registered for synchronization because synchronization is not active
[14:18:42.161] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2017690800, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:18:42.161] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:18:42.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:18:42.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:18:42.186] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cc49338]
[14:22:36.491] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:22:36.491] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7473e46e] was not registered for synchronization because synchronization is not active
[14:22:36.493] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [669668378, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:22:36.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:22:36.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:22:36.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:22:36.495] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7473e46e]
[14:22:36.496] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:22:36.496] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492e34f1] was not registered for synchronization because synchronization is not active
[14:22:36.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1012757711, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:22:36.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:22:36.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:22:36.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:22:36.523] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@492e34f1]
[14:32:52.767] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:32:52.767] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d729288] was not registered for synchronization because synchronization is not active
[14:32:52.769] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [671237087, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:32:52.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:32:52.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:32:52.772] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:32:52.772] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d729288]
[14:32:52.773] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:32:52.773] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534177da] was not registered for synchronization because synchronization is not active
[14:32:52.774] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1610276050, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:32:52.774] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:32:52.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[14:32:52.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:32:52.797] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534177da]
[14:34:04.914] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:04.914] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74f769d1] was not registered for synchronization because synchronization is not active
[14:34:04.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [576646076, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:04.916] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:04.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:04.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:04.920] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74f769d1]
[14:34:04.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:04.921] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@503d5fd9] was not registered for synchronization because synchronization is not active
[14:34:04.923] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1317009188, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:04.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:04.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[14:34:04.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:04.950] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@503d5fd9]
[14:34:07.661] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:07.661] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e59e35e] was not registered for synchronization because synchronization is not active
[14:34:07.662] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [854051490, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:07.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:07.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:07.665] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:07.665] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e59e35e]
[14:34:07.666] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:07.666] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8a0c0] was not registered for synchronization because synchronization is not active
[14:34:07.667] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [147996898, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:07.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:07.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 20(Integer), 10(Integer)
[14:34:07.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[14:34:07.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e8a0c0]
[14:34:08.901] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:08.901] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5566c] was not registered for synchronization because synchronization is not active
[14:34:08.903] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1510997592, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:08.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:08.904] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:08.905] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:08.906] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b5566c]
[14:34:08.906] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:08.907] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6731a36e] was not registered for synchronization because synchronization is not active
[14:34:08.908] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1798921668, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:08.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:08.909] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[14:34:08.929] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:08.930] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6731a36e]
[14:34:10.483] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:10.483] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc54796] was not registered for synchronization because synchronization is not active
[14:34:10.484] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1206754763, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:10.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:10.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:10.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:10.491] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dc54796]
[14:34:10.491] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:10.491] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f65404c] was not registered for synchronization because synchronization is not active
[14:34:10.492] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [124360938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:10.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:10.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:34:10.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:10.515] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f65404c]
[14:34:13.788] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:13.789] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab73a24] was not registered for synchronization because synchronization is not active
[14:34:13.790] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1741853175, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:13.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:13.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:13.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:13.793] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab73a24]
[14:34:13.794] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:13.794] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f2a538] was not registered for synchronization because synchronization is not active
[14:34:13.795] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1959276232, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:13.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:13.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[14:34:13.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:13.818] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f2a538]
[14:34:22.656] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:22.657] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cef3d47] was not registered for synchronization because synchronization is not active
[14:34:22.658] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1469394183, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:22.659] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:34:22.659] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test018(String)
[14:34:22.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:22.665] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cef3d47]
[14:34:24.116] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:24.117] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19b05f23] was not registered for synchronization because synchronization is not active
[14:34:24.118] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [700522324, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:24.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:24.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:24.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:24.121] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19b05f23]
[14:34:24.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:24.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2943ed56] was not registered for synchronization because synchronization is not active
[14:34:24.123] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1349418606, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:24.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:24.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:34:24.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:24.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2943ed56]
[14:34:52.495] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:52.495] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d1780d8] was not registered for synchronization because synchronization is not active
[14:34:52.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1599932976, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:52.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:34:52.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[14:34:52.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:52.501] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d1780d8]
[14:34:54.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:54.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b232c9d] was not registered for synchronization because synchronization is not active
[14:34:54.351] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1902012085, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:54.351] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:34:54.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:34:54.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:34:54.354] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b232c9d]
[14:34:54.354] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:34:54.354] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@567b7fd8] was not registered for synchronization because synchronization is not active
[14:34:54.355] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1513873748, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:34:54.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:34:54.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:34:54.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:34:54.379] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@567b7fd8]
[14:39:06.315] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:39:06.315] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4380d7] was not registered for synchronization because synchronization is not active
[14:39:06.316] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1918455642, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:39:06.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:39:06.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tester02(String)
[14:39:06.320] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:39:06.321] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4380d7]
[14:39:06.321] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:39:06.321] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64079224] was not registered for synchronization because synchronization is not active
[14:39:06.322] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [498678864, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:39:06.323] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:39:06.323] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 115(Integer), member(String)
[14:39:06.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:39:06.326] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64079224]
[14:46:12.575] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:46:12.575] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@357002cb] was not registered for synchronization because synchronization is not active
[14:46:12.577] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1174450340, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:46:12.577] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[14:46:12.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[14:46:12.579] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:46:12.580] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@357002cb]
[14:46:12.580] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:46:12.580] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32155f0b] was not registered for synchronization because synchronization is not active
[14:46:12.582] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1785825577, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:46:12.583] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[14:46:12.584] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[14:46:12.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:46:12.609] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32155f0b]
[14:46:15.142] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:46:15.142] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d987a9] was not registered for synchronization because synchronization is not active
[14:46:15.144] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [96472318, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:46:15.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:46:15.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tester02(String)
[14:46:15.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:46:15.149] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46d987a9]
[14:46:15.149] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:46:15.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321ef0ba] was not registered for synchronization because synchronization is not active
[14:46:15.151] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1110868057, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:46:15.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:46:15.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 115(Integer), member(String)
[14:46:15.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:46:15.154] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@321ef0ba]
[14:48:33.282] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:48:33.282] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f3ef7] was not registered for synchronization because synchronization is not active
[14:48:33.283] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1354915177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:48:33.283] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:48:33.284] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tester02(String)
[14:48:33.287] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:48:33.287] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f3ef7]
[14:48:33.288] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:48:33.288] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@236a00ad] was not registered for synchronization because synchronization is not active
[14:48:33.289] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2061234838, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:48:33.289] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:48:33.290] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 115(Integer), member(String)
[14:48:33.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:48:33.292] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@236a00ad]
[14:54:32.524] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:32.525] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f4c4f47] was not registered for synchronization because synchronization is not active
[14:54:32.526] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [997285325, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:32.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[14:54:32.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test016(String)
[14:54:32.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:32.531] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f4c4f47]
[14:54:32.535] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:32.535] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d53854] was not registered for synchronization because synchronization is not active
[14:54:32.536] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2098553054, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:32.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:54:32.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[14:54:32.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:32.539] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d53854]
[14:54:32.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:32.540] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a914bdc] was not registered for synchronization because synchronization is not active
[14:54:32.541] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1341135873, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:32.541] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:54:32.541] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:54:32.543] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:32.543] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a914bdc]
[14:54:32.544] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:32.544] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180735cd] was not registered for synchronization because synchronization is not active
[14:54:32.545] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1752816009, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:32.545] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:54:32.546] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:54:32.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:54:32.552] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180735cd]
[14:54:32.553] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:32.553] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e4e9312] was not registered for synchronization because synchronization is not active
[14:54:32.555] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [79421474, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:32.555] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:54:32.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:54:32.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:54:32.586] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e4e9312]
[14:54:33.060] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:33.061] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f118c2d] was not registered for synchronization because synchronization is not active
[14:54:33.062] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1556598105, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:33.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:54:33.063] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[14:54:33.064] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:33.065] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f118c2d]
[14:54:33.066] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:33.066] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57128232] was not registered for synchronization because synchronization is not active
[14:54:33.067] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1502951317, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:33.067] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:54:33.068] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:54:33.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:33.070] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57128232]
[14:54:33.071] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:33.071] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea5dbe9] was not registered for synchronization because synchronization is not active
[14:54:33.072] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1274458618, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:33.072] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:54:33.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:54:33.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[14:54:33.079] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea5dbe9]
[14:54:33.080] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:33.080] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d72e8c2] was not registered for synchronization because synchronization is not active
[14:54:33.082] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [886515369, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:33.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:54:33.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:54:33.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:54:33.111] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d72e8c2]
[14:54:36.440] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:36.440] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1069f258] was not registered for synchronization because synchronization is not active
[14:54:36.441] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [175486239, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:36.441] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:54:36.442] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[14:54:36.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:36.444] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1069f258]
[14:54:40.726] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:54:40.726] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76bf8e78] was not registered for synchronization because synchronization is not active
[14:54:40.727] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2112793952, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:54:40.727] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[14:54:40.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[14:54:40.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:54:40.730] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76bf8e78]
[15:00:07.041] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:00:07.041] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e66b2e1] was not registered for synchronization because synchronization is not active
[15:00:07.042] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1899004068, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:00:07.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:00:07.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:00:07.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:00:07.045] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e66b2e1]
[15:00:07.046] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:00:07.046] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67e6022a] was not registered for synchronization because synchronization is not active
[15:00:07.047] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1561891802, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:00:07.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:00:07.048] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:00:07.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:00:07.050] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67e6022a]
[15:00:07.051] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:00:07.051] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17009b] was not registered for synchronization because synchronization is not active
[15:00:07.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1025841027, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:00:07.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:00:07.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:00:07.058] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:00:07.059] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17009b]
[15:00:07.059] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:00:07.059] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e2253e] was not registered for synchronization because synchronization is not active
[15:00:07.061] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1552090097, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:00:07.061] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:00:07.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:00:07.092] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:00:07.093] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e2253e]
[15:02:05.374] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:05.375] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df7294a] was not registered for synchronization because synchronization is not active
[15:02:05.376] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [785588649, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:05.377] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:02:05.377] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:02:05.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:05.379] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df7294a]
[15:02:05.380] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:05.380] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c75a249] was not registered for synchronization because synchronization is not active
[15:02:05.381] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1668677856, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:05.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:02:05.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:02:05.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:05.385] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c75a249]
[15:02:05.385] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:05.385] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@651cffe7] was not registered for synchronization because synchronization is not active
[15:02:05.386] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1377195923, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:05.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:02:05.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:02:05.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:02:05.394] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@651cffe7]
[15:02:05.394] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:05.394] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31917cc5] was not registered for synchronization because synchronization is not active
[15:02:05.396] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [285166282, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:05.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:02:05.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:02:05.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:02:05.426] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31917cc5]
[15:02:07.794] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:07.795] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f3d329f] was not registered for synchronization because synchronization is not active
[15:02:07.796] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1810331464, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:07.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:02:07.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:02:07.799] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:07.799] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f3d329f]
[15:02:07.800] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:07.800] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3040ea] was not registered for synchronization because synchronization is not active
[15:02:07.801] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1708451287, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:07.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[15:02:07.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:02:07.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:07.805] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a3040ea]
[15:02:07.806] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:07.806] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6104ea] was not registered for synchronization because synchronization is not active
[15:02:07.807] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1486825080, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:07.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[15:02:07.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[15:02:07.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:07.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e6104ea]
[15:02:07.810] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:07.810] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75728f9b] was not registered for synchronization because synchronization is not active
[15:02:07.811] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [216007111, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:07.811] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:02:07.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:02:07.815] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:07.816] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75728f9b]
[15:02:07.816] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:07.816] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e8b288] was not registered for synchronization because synchronization is not active
[15:02:07.817] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [799572038, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:07.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[15:02:07.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:02:07.880] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:02:07.881] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e8b288]
[15:02:09.889] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:09.889] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387d9b9f] was not registered for synchronization because synchronization is not active
[15:02:09.890] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2029082923, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:09.891] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:02:09.891] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:02:09.893] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:09.894] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387d9b9f]
[15:02:09.894] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:09.894] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39999293] was not registered for synchronization because synchronization is not active
[15:02:09.896] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1214288169, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:09.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:02:09.897] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:02:09.898] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:02:09.899] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39999293]
[15:02:09.899] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:09.899] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e26e453] was not registered for synchronization because synchronization is not active
[15:02:09.900] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1144813346, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:09.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:02:09.901] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:02:09.907] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:02:09.908] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e26e453]
[15:02:09.908] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:02:09.908] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f24bb] was not registered for synchronization because synchronization is not active
[15:02:09.910] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [5747680, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:02:09.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:02:09.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:02:09.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:02:09.940] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f24bb]
[15:03:55.773] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:55.773] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a52a4fe] was not registered for synchronization because synchronization is not active
[15:03:55.775] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [499648532, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:55.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:03:55.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:03:55.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:55.779] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a52a4fe]
[15:03:55.780] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:55.780] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc00fd] was not registered for synchronization because synchronization is not active
[15:03:55.781] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1539946350, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:55.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:03:55.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:03:55.783] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:55.784] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dc00fd]
[15:03:55.784] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:55.784] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d3e32] was not registered for synchronization because synchronization is not active
[15:03:55.785] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [942725195, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:55.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:03:55.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:03:55.792] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:03:55.793] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d3e32]
[15:03:55.793] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:55.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6badbf6] was not registered for synchronization because synchronization is not active
[15:03:55.795] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [722599903, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:55.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:03:55.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:03:55.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:03:55.827] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6badbf6]
[15:03:57.508] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:57.508] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ab96e5] was not registered for synchronization because synchronization is not active
[15:03:57.510] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1220124102, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:57.510] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:03:57.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:03:57.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:57.513] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ab96e5]
[15:03:57.513] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:57.513] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4205ec67] was not registered for synchronization because synchronization is not active
[15:03:57.514] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [83998619, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:57.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[15:03:57.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:03:57.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:57.518] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4205ec67]
[15:03:57.518] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:57.518] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b95fb7] was not registered for synchronization because synchronization is not active
[15:03:57.519] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1077929830, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:57.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[15:03:57.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(String)
[15:03:57.521] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:57.521] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36b95fb7]
[15:03:57.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:57.522] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@732ce738] was not registered for synchronization because synchronization is not active
[15:03:57.523] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1498295632, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:57.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[15:03:57.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:03:57.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:57.528] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@732ce738]
[15:03:57.528] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:57.528] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3e3f5] was not registered for synchronization because synchronization is not active
[15:03:57.529] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2018076436, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:57.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[15:03:57.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 49(Integer)
[15:03:57.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[15:03:57.576] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e3e3f5]
[15:03:59.256] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:59.256] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476beedc] was not registered for synchronization because synchronization is not active
[15:03:59.258] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [139888516, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:59.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[15:03:59.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 129(Integer), member(String)
[15:03:59.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:59.261] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@476beedc]
[15:03:59.261] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:59.262] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f899253] was not registered for synchronization because synchronization is not active
[15:03:59.263] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2014786466, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:59.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[15:03:59.264] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[15:03:59.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:03:59.266] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f899253]
[15:03:59.266] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:59.266] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6df7d593] was not registered for synchronization because synchronization is not active
[15:03:59.267] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [469638268, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:59.267] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[15:03:59.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[15:03:59.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[15:03:59.274] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6df7d593]
[15:03:59.274] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:03:59.274] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c7b583] was not registered for synchronization because synchronization is not active
[15:03:59.276] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [574377118, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:03:59.279] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[15:03:59.286] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[15:03:59.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:03:59.309] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25c7b583]
[15:24:52.762] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:24:52.763] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64bf0381] was not registered for synchronization because synchronization is not active
[15:24:52.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2091184339, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:24:52.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:24:52.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:24:52.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:24:52.770] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64bf0381]
[15:25:04.757] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:25:04.757] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b623b9e] was not registered for synchronization because synchronization is not active
[15:25:04.759] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1826686137, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:25:04.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:25:04.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:25:04.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:25:04.764] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b623b9e]
[15:25:25.915] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:25:25.915] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39b7e387] was not registered for synchronization because synchronization is not active
[15:25:25.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2058508226, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:25:25.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[15:25:25.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[15:25:25.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:25:25.920] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39b7e387]
[15:25:25.920] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:25:25.920] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@acb5a34] was not registered for synchronization because synchronization is not active
[15:25:25.921] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [541344918, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:25:25.922] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[15:25:25.922] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[15:25:25.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:25:25.944] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@acb5a34]
[15:25:35.358] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:25:35.358] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75dd8595] was not registered for synchronization because synchronization is not active
[15:25:35.360] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [877330349, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:25:35.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:25:35.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:25:35.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:25:35.364] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75dd8595]
[15:26:16.137] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:26:16.137] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@514ef4e4] was not registered for synchronization because synchronization is not active
[15:26:16.138] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1275349097, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:26:16.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[15:26:16.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[15:26:16.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:26:16.141] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@514ef4e4]
[15:26:16.142] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:26:16.142] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f41bf5] was not registered for synchronization because synchronization is not active
[15:26:16.143] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [549693694, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:26:16.143] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[15:26:16.144] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[15:26:16.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:26:16.167] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f41bf5]
[15:26:32.632] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:26:32.654] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7436f830] was not registered for synchronization because synchronization is not active
[15:26:32.699] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [274821488, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:26:32.727] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:26:32.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:26:33.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:26:33.080] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7436f830]
[15:27:42.787] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:27:42.787] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dba8757] was not registered for synchronization because synchronization is not active
[15:27:42.789] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1810720530, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:27:42.789] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[15:27:42.790] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[15:27:42.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:27:42.792] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dba8757]
[15:27:42.792] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:27:42.792] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3092c6] was not registered for synchronization because synchronization is not active
[15:27:42.794] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [60822700, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:27:42.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[15:27:42.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[15:27:42.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:27:42.817] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3092c6]
[15:29:34.420] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:29:34.442] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1993f553] was not registered for synchronization because synchronization is not active
[15:29:34.488] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1232616759, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:29:34.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:29:34.557] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:29:34.821] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:29:34.867] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1993f553]
[15:32:49.835] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:32:49.835] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e36f0a] was not registered for synchronization because synchronization is not active
[15:32:49.837] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [255072969, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:32:49.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[15:32:49.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[15:32:49.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:32:49.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47e36f0a]
[15:32:49.841] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:32:49.842] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645652ea] was not registered for synchronization because synchronization is not active
[15:32:49.843] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [314080703, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:32:49.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[15:32:49.844] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[15:32:49.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[15:32:49.867] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@645652ea]
[15:33:13.991] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[15:33:14.015] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@162a9f9a] was not registered for synchronization because synchronization is not active
[15:33:14.060] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1359499193, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[15:33:14.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[15:33:14.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[15:33:14.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[15:33:14.450] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@162a9f9a]
[15:38:43.636] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[16:24:16.896] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[16:24:55.617] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:24:55.627] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7370bd0b] was not registered for synchronization because synchronization is not active
[16:24:56.044] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2125481897, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:24:56.050] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[16:24:56.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[16:24:56.113] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:24:56.119] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7370bd0b]
[16:24:58.175] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:24:58.175] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29210806] was not registered for synchronization because synchronization is not active
[16:24:58.188] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [184229897, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:24:58.189] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[16:24:58.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[16:24:58.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:24:58.194] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29210806]
[16:24:58.196] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:24:58.196] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c7c1de] was not registered for synchronization because synchronization is not active
[16:24:58.203] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [800589607, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:24:58.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[16:24:58.205] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[16:24:58.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[16:24:58.241] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42c7c1de]
[16:25:05.147] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:05.147] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c2b715f] was not registered for synchronization because synchronization is not active
[16:25:05.149] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1635372879, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:05.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[16:25:05.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[16:25:05.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:25:05.155] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c2b715f]
[16:25:05.155] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:05.156] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f63d52] was not registered for synchronization because synchronization is not active
[16:25:05.157] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [770332087, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:05.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[16:25:05.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[16:25:05.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[16:25:05.172] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f63d52]
[16:25:10.466] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:10.466] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46a7b151] was not registered for synchronization because synchronization is not active
[16:25:10.468] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1432673135, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:10.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[16:25:10.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[16:25:10.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:25:10.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46a7b151]
[16:25:10.474] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:10.474] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b497fde] was not registered for synchronization because synchronization is not active
[16:25:10.475] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [536926176, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:10.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[16:25:10.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[16:25:10.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[16:25:10.509] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b497fde]
[16:25:13.195] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:13.196] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbc2d3f] was not registered for synchronization because synchronization is not active
[16:25:13.197] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839063946, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:13.197] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[16:25:13.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[16:25:13.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:25:13.206] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbc2d3f]
[16:25:13.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:13.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e5e63d8] was not registered for synchronization because synchronization is not active
[16:25:13.208] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1274381528, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:13.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[16:25:13.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[16:25:13.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[16:25:13.217] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e5e63d8]
[16:25:13.218] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:25:13.218] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd26134] was not registered for synchronization because synchronization is not active
[16:25:13.230] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1551025403, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:25:13.231] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[16:25:13.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[16:25:13.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[16:25:13.364] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd26134]
[16:26:51.730] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:26:51.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8a580a] was not registered for synchronization because synchronization is not active
[16:26:51.733] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1551977749, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:26:51.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[16:26:51.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[16:26:51.738] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[16:26:51.739] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8a580a]
[16:26:51.739] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:26:51.739] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95fe1f5] was not registered for synchronization because synchronization is not active
[16:26:51.741] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1973721107, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:26:51.741] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[16:26:51.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[16:26:51.750] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[16:26:51.751] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@95fe1f5]
[16:26:51.752] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[16:26:51.752] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@590500c4] was not registered for synchronization because synchronization is not active
[16:26:51.756] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1429005292, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[16:26:51.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[16:26:51.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[16:26:51.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[16:26:51.798] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@590500c4]
[17:21:28.750] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:21:28.751] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d309a2] was not registered for synchronization because synchronization is not active
[17:21:28.756] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1248228926, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:21:28.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:21:28.757] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:21:28.763] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:21:28.764] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55d309a2]
[17:21:28.765] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:21:28.765] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c270f03] was not registered for synchronization because synchronization is not active
[17:21:28.766] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1600365288, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:21:28.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:21:28.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:21:28.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:21:28.777] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c270f03]
[17:21:28.778] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:21:28.778] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47836366] was not registered for synchronization because synchronization is not active
[17:21:28.781] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [511532875, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:21:28.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:21:28.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:21:28.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:21:28.922] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47836366]
[17:23:04.699] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:04.700] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a66a639] was not registered for synchronization because synchronization is not active
[17:23:04.701] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1531366901, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:04.702] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:23:04.703] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:23:04.705] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:23:04.706] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a66a639]
[17:23:04.706] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:04.707] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a247b53] was not registered for synchronization because synchronization is not active
[17:23:04.708] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1616033608, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:04.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:23:04.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:23:04.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:23:04.717] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a247b53]
[17:23:04.717] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:04.717] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58068e0f] was not registered for synchronization because synchronization is not active
[17:23:04.720] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [194885276, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:04.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:23:04.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:23:04.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:23:04.756] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58068e0f]
[17:23:09.037] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:09.037] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f838b66] was not registered for synchronization because synchronization is not active
[17:23:09.039] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [672064006, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:09.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:23:09.040] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:23:09.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:23:09.043] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f838b66]
[17:23:09.043] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:09.043] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b8e28f] was not registered for synchronization because synchronization is not active
[17:23:09.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1504873553, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:09.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:23:09.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:23:09.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:23:09.053] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59b8e28f]
[17:23:09.054] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:09.054] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7343ca95] was not registered for synchronization because synchronization is not active
[17:23:09.056] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1879112273, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:09.057] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:23:09.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:23:09.094] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:23:09.096] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7343ca95]
[17:23:11.466] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:11.466] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fae2d85] was not registered for synchronization because synchronization is not active
[17:23:11.468] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1907958520, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:11.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:23:11.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:23:11.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:23:11.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fae2d85]
[17:23:11.473] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:11.473] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aee54f5] was not registered for synchronization because synchronization is not active
[17:23:11.474] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [957410186, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:11.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:23:11.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:23:11.483] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:23:11.483] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2aee54f5]
[17:23:11.484] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:23:11.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d07f8f2] was not registered for synchronization because synchronization is not active
[17:23:11.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [200012363, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:23:11.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:23:11.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:23:11.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:23:11.520] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d07f8f2]
[17:24:00.524] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:00.524] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24975bcd] was not registered for synchronization because synchronization is not active
[17:24:00.526] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [573054617, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:00.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:00.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:00.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:00.531] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24975bcd]
[17:24:00.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:00.532] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b48167] was not registered for synchronization because synchronization is not active
[17:24:00.533] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1872478262, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:00.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:00.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:00.541] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:00.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28b48167]
[17:24:00.542] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:00.542] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a88861] was not registered for synchronization because synchronization is not active
[17:24:00.544] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [240324562, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:00.545] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:00.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:24:00.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:24:00.583] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a88861]
[17:24:24.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:24.419] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d580b9] was not registered for synchronization because synchronization is not active
[17:24:24.421] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [130254213, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:24.421] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:24.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:24.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:24.425] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d580b9]
[17:24:24.425] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:24.428] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a10a97] was not registered for synchronization because synchronization is not active
[17:24:24.429] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [770063497, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:24.429] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:24.430] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:24.438] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:24.439] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a10a97]
[17:24:24.439] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:24.440] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ade8604] was not registered for synchronization because synchronization is not active
[17:24:24.441] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [30694317, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:24.442] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:24.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:24:24.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:24:24.476] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ade8604]
[17:24:26.712] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:26.712] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1de03e] was not registered for synchronization because synchronization is not active
[17:24:26.714] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1562353176, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:26.714] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:26.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:26.717] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:26.718] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1de03e]
[17:24:26.719] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:26.719] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b46fc2d] was not registered for synchronization because synchronization is not active
[17:24:26.721] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [220972693, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:26.721] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:26.722] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:26.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:26.729] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b46fc2d]
[17:24:26.730] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:26.730] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1239b] was not registered for synchronization because synchronization is not active
[17:24:26.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [447255137, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:26.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:26.744] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:24:26.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:24:26.771] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ea1239b]
[17:24:31.216] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:31.217] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12928544] was not registered for synchronization because synchronization is not active
[17:24:31.218] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [847023998, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:31.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:31.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:31.222] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:31.223] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12928544]
[17:24:31.223] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:31.223] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045693a] was not registered for synchronization because synchronization is not active
[17:24:31.225] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2140453078, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:31.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:31.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:31.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:31.233] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1045693a]
[17:24:31.234] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:31.234] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657980d6] was not registered for synchronization because synchronization is not active
[17:24:31.236] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [604059869, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:31.236] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:31.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:24:31.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:24:31.271] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@657980d6]
[17:24:32.129] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:32.130] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371ebc8c] was not registered for synchronization because synchronization is not active
[17:24:32.131] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [347200584, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:32.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:32.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:32.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:32.135] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@371ebc8c]
[17:24:32.136] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:32.136] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ba70a] was not registered for synchronization because synchronization is not active
[17:24:32.137] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1770219707, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:32.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:32.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:32.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:32.149] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e1ba70a]
[17:24:32.149] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:32.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ff4546] was not registered for synchronization because synchronization is not active
[17:24:32.152] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2003763714, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:32.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:32.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:24:32.170] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[17:24:32.171] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53ff4546]
[17:24:33.358] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:33.359] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7afc6200] was not registered for synchronization because synchronization is not active
[17:24:33.361] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1371491171, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:33.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:24:33.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:24:33.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:24:33.365] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7afc6200]
[17:24:33.365] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:33.365] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65fcbf6] was not registered for synchronization because synchronization is not active
[17:24:33.367] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [332426588, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:33.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:24:33.367] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:24:33.373] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:24:33.374] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65fcbf6]
[17:24:33.374] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:24:33.375] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eaa495] was not registered for synchronization because synchronization is not active
[17:24:33.376] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [990341773, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:24:33.377] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:24:33.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:24:33.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:24:33.411] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eaa495]
[17:29:44.173] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:29:44.173] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4236df50] was not registered for synchronization because synchronization is not active
[17:29:44.175] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [506989012, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:29:44.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:29:44.176] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:29:44.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:29:44.178] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4236df50]
[17:29:44.179] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:29:44.179] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8ee648] was not registered for synchronization because synchronization is not active
[17:29:44.180] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1438998240, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:29:44.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:29:44.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:29:44.187] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:29:44.188] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f8ee648]
[17:29:44.188] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:29:44.189] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38889929] was not registered for synchronization because synchronization is not active
[17:29:44.191] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2117821513, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:29:44.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:29:44.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:29:44.224] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:29:44.225] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38889929]
[17:32:13.772] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:13.772] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a83a377] was not registered for synchronization because synchronization is not active
[17:32:13.774] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1002350924, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:13.774] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:32:13.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:32:13.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:32:13.777] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a83a377]
[17:32:13.777] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:13.778] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8eaf436] was not registered for synchronization because synchronization is not active
[17:32:13.779] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1070651921, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:13.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:32:13.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:32:13.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:32:13.788] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8eaf436]
[17:32:13.788] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:13.788] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@782420] was not registered for synchronization because synchronization is not active
[17:32:13.791] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [560009683, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:13.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:32:13.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:32:13.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:32:13.824] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@782420]
[17:32:31.329] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:31.329] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c21ffe4] was not registered for synchronization because synchronization is not active
[17:32:31.331] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [202177489, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:31.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:32:31.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:32:31.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:32:31.335] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c21ffe4]
[17:32:31.336] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:31.336] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f07022] was not registered for synchronization because synchronization is not active
[17:32:31.338] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1871874692, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:31.338] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:32:31.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:32:31.345] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:32:31.346] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f07022]
[17:32:31.346] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:32:31.347] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bb0ee2] was not registered for synchronization because synchronization is not active
[17:32:31.348] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1836589174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:32:31.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:32:31.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:32:31.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:32:31.382] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bb0ee2]
[17:33:15.986] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:15.986] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec5a93f] was not registered for synchronization because synchronization is not active
[17:33:15.988] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1401695037, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:15.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:15.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:15.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:15.992] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec5a93f]
[17:33:15.992] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:15.992] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635f93b] was not registered for synchronization because synchronization is not active
[17:33:15.994] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1316244965, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:15.994] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:15.994] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:16.001] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:16.001] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635f93b]
[17:33:16.002] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:16.002] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@425c7d96] was not registered for synchronization because synchronization is not active
[17:33:16.003] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1392578265, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:16.004] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:16.011] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:33:16.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:16.037] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@425c7d96]
[17:33:17.696] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:17.697] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c903e6c] was not registered for synchronization because synchronization is not active
[17:33:17.698] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1588799669, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:17.698] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:17.700] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:17.702] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:17.703] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c903e6c]
[17:33:17.703] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:17.703] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c258ebe] was not registered for synchronization because synchronization is not active
[17:33:17.704] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1137071257, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:17.705] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:17.705] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:17.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:17.712] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c258ebe]
[17:33:17.712] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:17.713] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723418a6] was not registered for synchronization because synchronization is not active
[17:33:17.715] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [599732553, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:17.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:17.724] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:33:17.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:17.750] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723418a6]
[17:33:18.408] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:18.408] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1209d593] was not registered for synchronization because synchronization is not active
[17:33:18.410] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1849147312, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:18.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:18.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:18.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:18.414] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1209d593]
[17:33:18.415] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:18.415] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad0f75f] was not registered for synchronization because synchronization is not active
[17:33:18.416] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [714660737, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:18.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:18.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:18.424] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:18.425] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ad0f75f]
[17:33:18.425] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:18.425] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5047b413] was not registered for synchronization because synchronization is not active
[17:33:18.427] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [82863235, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:18.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:18.438] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:33:18.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[17:33:18.448] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5047b413]
[17:33:25.804] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:25.804] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450217] was not registered for synchronization because synchronization is not active
[17:33:25.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1457417941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:25.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:25.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:25.810] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:25.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2450217]
[17:33:25.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:25.811] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fa16e1] was not registered for synchronization because synchronization is not active
[17:33:25.812] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [548702411, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:25.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:25.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:25.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:25.820] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fa16e1]
[17:33:25.820] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:25.821] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@372222d] was not registered for synchronization because synchronization is not active
[17:33:25.822] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1831913331, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:25.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:25.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:33:25.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:25.856] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@372222d]
[17:33:27.143] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:27.144] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b95d48] was not registered for synchronization because synchronization is not active
[17:33:27.145] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [969127576, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:27.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:27.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:27.148] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:27.148] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b95d48]
[17:33:27.149] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:27.149] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63178804] was not registered for synchronization because synchronization is not active
[17:33:27.150] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [151444786, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:27.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:27.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:27.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:27.158] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63178804]
[17:33:27.158] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:27.158] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52bf1a8b] was not registered for synchronization because synchronization is not active
[17:33:27.160] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1841169675, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:27.161] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:27.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:33:27.177] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[17:33:27.178] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52bf1a8b]
[17:33:28.199] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:28.200] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3cf70] was not registered for synchronization because synchronization is not active
[17:33:28.202] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1826239611, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:28.202] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:28.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:28.205] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:28.206] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a3cf70]
[17:33:28.206] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:28.206] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f5dbb15] was not registered for synchronization because synchronization is not active
[17:33:28.207] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1205044172, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:28.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:28.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:28.215] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:28.216] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f5dbb15]
[17:33:28.216] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:28.216] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67e7e440] was not registered for synchronization because synchronization is not active
[17:33:28.218] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [391395482, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:28.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:28.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:33:28.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:28.251] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67e7e440]
[17:33:29.304] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:29.304] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc1b0e3] was not registered for synchronization because synchronization is not active
[17:33:29.306] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [912931288, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:29.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:29.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:29.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:29.309] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dc1b0e3]
[17:33:29.310] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:29.310] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e23056] was not registered for synchronization because synchronization is not active
[17:33:29.311] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [889064709, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:29.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:29.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:29.319] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:29.320] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12e23056]
[17:33:29.320] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:29.320] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35a8947f] was not registered for synchronization because synchronization is not active
[17:33:29.322] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2034301261, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:29.322] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:29.330] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:33:29.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:29.355] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35a8947f]
[17:33:41.189] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:41.190] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c255ff3] was not registered for synchronization because synchronization is not active
[17:33:41.192] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1177892855, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:41.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:41.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:41.195] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:41.196] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c255ff3]
[17:33:41.196] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:41.196] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6d4841] was not registered for synchronization because synchronization is not active
[17:33:41.198] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [939501252, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:41.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:41.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:41.206] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:41.207] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d6d4841]
[17:33:41.207] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:41.207] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495b77e4] was not registered for synchronization because synchronization is not active
[17:33:41.209] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [638056964, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:41.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:41.216] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:33:41.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:41.240] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@495b77e4]
[17:33:42.734] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:42.735] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aafc98a] was not registered for synchronization because synchronization is not active
[17:33:42.736] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1491224464, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:42.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:42.737] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:42.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:42.740] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aafc98a]
[17:33:42.740] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:42.740] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dee1970] was not registered for synchronization because synchronization is not active
[17:33:42.742] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1866436519, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:42.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:42.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:42.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:42.749] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dee1970]
[17:33:42.749] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:42.750] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c11ff94] was not registered for synchronization because synchronization is not active
[17:33:42.751] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1960995009, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:42.752] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:42.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:33:42.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[17:33:42.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c11ff94]
[17:33:44.383] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:44.383] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b5fa5c] was not registered for synchronization because synchronization is not active
[17:33:44.385] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [393936551, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:44.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:33:44.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:44.388] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:44.388] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b5fa5c]
[17:33:44.389] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:44.389] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bccb08] was not registered for synchronization because synchronization is not active
[17:33:44.390] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1577838533, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:44.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:33:44.391] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:44.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:44.399] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34bccb08]
[17:33:44.400] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:44.400] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223e7059] was not registered for synchronization because synchronization is not active
[17:33:44.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1016977256, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:44.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:44.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:33:44.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:44.437] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@223e7059]
[17:33:48.326] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:48.327] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181c1623] was not registered for synchronization because synchronization is not active
[17:33:48.328] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1773137972, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:48.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[17:33:48.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:33:48.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:48.332] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@181c1623]
[17:33:48.333] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:48.333] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2842f62a] was not registered for synchronization because synchronization is not active
[17:33:48.334] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [373842762, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:48.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[17:33:48.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:33:48.341] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:33:48.342] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2842f62a]
[17:33:48.342] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:48.342] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@675a7f10] was not registered for synchronization because synchronization is not active
[17:33:48.344] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1818101762, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:48.344] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:48.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:33:48.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:33:48.377] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@675a7f10]
[17:33:49.997] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:49.997] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52133beb] was not registered for synchronization because synchronization is not active
[17:33:50.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [413998639, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:50.001] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) )) FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) 
[17:33:50.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 저푸른(String), free(String), 저푸른(String)
[17:33:50.005] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:33:50.005] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52133beb]
[17:33:50.006] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:50.006] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@112e6ad9] was not registered for synchronization because synchronization is not active
[17:33:50.007] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [906170702, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:50.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', ?, '%')) order by regdate desc 
[17:33:50.008] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 저푸른(String)
[17:33:50.011] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 8
[17:33:50.011] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@112e6ad9]
[17:33:50.012] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:33:50.012] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f66d46f] was not registered for synchronization because synchronization is not active
[17:33:50.013] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [665547160, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:33:50.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:33:50.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:33:50.035] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 8
[17:33:50.035] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f66d46f]
[17:34:02.948] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:02.949] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e6a0691] was not registered for synchronization because synchronization is not active
[17:34:02.958] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1208680934, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:02.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[17:34:02.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[17:34:02.961] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:34:02.962] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e6a0691]
[17:34:02.962] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:02.963] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d7f8d3] was not registered for synchronization because synchronization is not active
[17:34:02.964] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1983031738, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:02.964] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[17:34:02.964] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[17:34:02.974] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[17:34:02.975] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d7f8d3]
[17:34:02.975] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:02.975] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f9a42da] was not registered for synchronization because synchronization is not active
[17:34:02.977] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [931956288, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:02.977] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[17:34:02.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 29(Integer)
[17:34:03.028] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[17:34:03.029] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f9a42da]
[17:34:04.253] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:04.253] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a926717] was not registered for synchronization because synchronization is not active
[17:34:04.255] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2016547355, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:04.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:34:04.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:34:04.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:34:04.258] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a926717]
[17:34:04.260] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:04.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b940503] was not registered for synchronization because synchronization is not active
[17:34:04.262] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1630541217, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:04.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:34:04.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:34:04.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:34:04.271] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b940503]
[17:34:04.271] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:04.271] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad18462] was not registered for synchronization because synchronization is not active
[17:34:04.272] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [369346168, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:04.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:34:04.280] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:34:04.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:34:04.304] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad18462]
[17:34:05.229] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:05.230] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438851c] was not registered for synchronization because synchronization is not active
[17:34:05.232] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2017275498, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:05.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[17:34:05.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[17:34:05.236] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:34:05.237] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7438851c]
[17:34:05.237] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:05.238] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f473792] was not registered for synchronization because synchronization is not active
[17:34:05.239] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1483715982, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:05.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[17:34:05.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(String)
[17:34:05.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:34:05.245] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f473792]
[17:34:05.245] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:05.245] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18be53a2] was not registered for synchronization because synchronization is not active
[17:34:05.248] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1726594591, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:05.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[17:34:05.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[17:34:05.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 6
[17:34:05.264] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18be53a2]
[17:34:05.265] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:34:05.265] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea1f9d0] was not registered for synchronization because synchronization is not active
[17:34:05.266] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [663891233, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:34:05.266] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[17:34:05.267] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 47(Integer)
[17:34:05.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[17:34:05.377] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea1f9d0]
[17:35:36.245] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:36.245] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a37f59e] was not registered for synchronization because synchronization is not active
[17:35:36.247] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [754989032, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:36.247] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:35:36.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:35:36.250] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:35:36.250] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a37f59e]
[17:35:36.251] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:36.251] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711168f5] was not registered for synchronization because synchronization is not active
[17:35:36.252] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1532315218, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:36.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:35:36.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:35:36.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:35:36.260] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711168f5]
[17:35:36.260] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:36.260] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43fd2b52] was not registered for synchronization because synchronization is not active
[17:35:36.262] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1275850455, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:36.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:35:36.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:35:36.297] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:35:36.298] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43fd2b52]
[17:35:37.463] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:37.463] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5664a218] was not registered for synchronization because synchronization is not active
[17:35:37.464] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [342367055, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:37.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[17:35:37.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[17:35:37.468] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:35:37.469] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5664a218]
[17:35:37.469] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:37.470] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52483494] was not registered for synchronization because synchronization is not active
[17:35:37.471] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1719451693, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:37.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[17:35:37.473] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(String)
[17:35:37.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:35:37.476] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52483494]
[17:35:37.476] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:37.476] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6ebc0e] was not registered for synchronization because synchronization is not active
[17:35:37.477] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [850671796, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:37.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[17:35:37.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[17:35:37.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[17:35:37.480] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6ebc0e]
[17:35:37.481] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:37.481] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20855f1f] was not registered for synchronization because synchronization is not active
[17:35:37.482] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1075033690, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:37.482] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[17:35:37.482] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 48(Integer)
[17:35:37.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[17:35:37.513] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20855f1f]
[17:35:38.516] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:38.516] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a1b83d6] was not registered for synchronization because synchronization is not active
[17:35:38.518] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [98054243, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:38.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:35:38.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:35:38.520] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:35:38.521] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a1b83d6]
[17:35:38.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:38.522] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9501d90] was not registered for synchronization because synchronization is not active
[17:35:38.523] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [835313538, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:38.524] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:35:38.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:35:38.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:35:38.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9501d90]
[17:35:38.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:35:38.532] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab8830] was not registered for synchronization because synchronization is not active
[17:35:38.534] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [682521764, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:35:38.535] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:35:38.543] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:35:38.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:35:38.567] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab8830]
[17:43:52.739] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:43:52.739] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4337e5e2] was not registered for synchronization because synchronization is not active
[17:43:52.741] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1602819567, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:43:52.741] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:43:52.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:43:52.743] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:43:52.744] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4337e5e2]
[17:43:52.744] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:43:52.744] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773fd011] was not registered for synchronization because synchronization is not active
[17:43:52.745] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1575222452, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:43:52.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:43:52.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:43:52.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:43:52.789] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773fd011]
[17:43:52.789] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:43:52.789] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fda697a] was not registered for synchronization because synchronization is not active
[17:43:52.791] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1602221437, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:43:52.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:43:52.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:43:52.820] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:43:52.821] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fda697a]
[17:45:03.010] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:03.010] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0a9ccc] was not registered for synchronization because synchronization is not active
[17:45:03.012] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [868556046, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:03.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:45:03.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:45:03.015] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:45:03.016] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0a9ccc]
[17:45:03.016] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:03.016] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74f4950c] was not registered for synchronization because synchronization is not active
[17:45:03.017] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1370108986, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:03.018] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:45:03.018] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:45:03.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:45:03.026] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74f4950c]
[17:45:03.026] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:03.026] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c48f7b] was not registered for synchronization because synchronization is not active
[17:45:03.028] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1217329050, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:03.028] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:45:03.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:45:03.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:45:03.063] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c48f7b]
[17:45:38.984] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:38.984] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4a37f4] was not registered for synchronization because synchronization is not active
[17:45:38.986] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [9210155, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:38.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:45:38.987] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:45:38.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:45:38.990] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c4a37f4]
[17:45:38.991] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:38.991] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c60545] was not registered for synchronization because synchronization is not active
[17:45:38.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [520853908, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:38.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:45:38.993] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:45:38.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:45:39.000] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c60545]
[17:45:39.000] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:45:39.000] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@df005c] was not registered for synchronization because synchronization is not active
[17:45:39.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [271579337, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:45:39.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:45:39.009] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:45:39.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:45:39.034] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@df005c]
[17:46:09.903] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:09.905] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8c0373] was not registered for synchronization because synchronization is not active
[17:46:09.907] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [13023281, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:09.907] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:46:09.908] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:46:09.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:46:09.911] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8c0373]
[17:46:09.911] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:09.911] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e78d22] was not registered for synchronization because synchronization is not active
[17:46:09.912] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1941061351, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:09.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:46:09.913] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:46:09.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:46:09.920] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e78d22]
[17:46:09.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:09.921] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51921987] was not registered for synchronization because synchronization is not active
[17:46:09.922] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1766740728, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:09.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:46:09.930] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:46:09.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:46:09.957] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51921987]
[17:46:58.130] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:58.131] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c64fa76] was not registered for synchronization because synchronization is not active
[17:46:58.132] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [64432910, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:58.133] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:46:58.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:46:58.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:46:58.137] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c64fa76]
[17:46:58.138] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:58.138] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b603e8] was not registered for synchronization because synchronization is not active
[17:46:58.139] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1232418545, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:58.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:46:58.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:46:58.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:46:58.147] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26b603e8]
[17:46:58.147] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:46:58.147] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3925c41a] was not registered for synchronization because synchronization is not active
[17:46:58.149] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [786656213, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:46:58.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:46:58.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:46:58.181] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:46:58.181] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3925c41a]
[17:48:31.921] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:31.922] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10d61672] was not registered for synchronization because synchronization is not active
[17:48:31.923] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [205496152, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:31.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:48:31.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:48:31.926] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:31.927] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10d61672]
[17:48:31.927] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:31.928] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b04a59] was not registered for synchronization because synchronization is not active
[17:48:31.929] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1694959244, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:31.929] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:48:31.929] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:48:31.935] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:48:31.936] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29b04a59]
[17:48:31.936] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:31.936] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3075fdee] was not registered for synchronization because synchronization is not active
[17:48:31.938] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1440675482, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:31.938] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:48:31.945] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:48:31.968] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:48:31.969] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3075fdee]
[17:49:38.863] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:38.864] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c2f5727] was not registered for synchronization because synchronization is not active
[17:49:38.865] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839641734, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:38.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:49:38.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:49:38.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:49:38.869] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c2f5727]
[17:49:38.870] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:38.870] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4faf0440] was not registered for synchronization because synchronization is not active
[17:49:38.871] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1094329773, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:38.871] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:49:38.872] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:49:38.878] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:49:38.878] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4faf0440]
[17:49:38.879] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:38.879] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef8a9d5] was not registered for synchronization because synchronization is not active
[17:49:38.881] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1772446447, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:38.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:49:38.888] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:49:38.911] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:49:38.912] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef8a9d5]
[17:49:40.190] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:40.190] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fdd1b5a] was not registered for synchronization because synchronization is not active
[17:49:40.192] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [75694741, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:40.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:49:40.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:49:40.195] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:49:40.196] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fdd1b5a]
[17:49:40.196] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:40.197] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe5d3e] was not registered for synchronization because synchronization is not active
[17:49:40.198] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1744740074, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:40.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:49:40.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:49:40.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:49:40.205] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61fe5d3e]
[17:49:40.205] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:49:40.205] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@374f8700] was not registered for synchronization because synchronization is not active
[17:49:40.207] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1092851413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:49:40.207] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:49:40.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:49:40.239] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:49:40.240] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@374f8700]
[17:50:15.377] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:15.377] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f91ad14] was not registered for synchronization because synchronization is not active
[17:50:15.379] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1682167273, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:15.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:50:15.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:50:15.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:50:15.383] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f91ad14]
[17:50:15.383] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:15.383] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40404ee4] was not registered for synchronization because synchronization is not active
[17:50:15.384] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1902013092, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:15.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:50:15.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:50:15.393] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:50:15.394] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40404ee4]
[17:50:15.394] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:15.395] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a934e9] was not registered for synchronization because synchronization is not active
[17:50:15.397] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1484411971, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:15.397] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:50:15.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:50:15.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:50:15.429] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17a934e9]
[17:50:31.176] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:31.177] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9d9e6] was not registered for synchronization because synchronization is not active
[17:50:31.178] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2002970353, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:31.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:50:31.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:50:31.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:50:31.182] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9d9e6]
[17:50:31.183] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:31.183] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462bc784] was not registered for synchronization because synchronization is not active
[17:50:31.184] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1240779143, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:31.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:50:31.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:50:31.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:50:31.191] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462bc784]
[17:50:31.191] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:50:31.191] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25516aa8] was not registered for synchronization because synchronization is not active
[17:50:31.193] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [533559593, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:50:31.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:50:31.200] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:50:31.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:50:31.223] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25516aa8]
[17:51:38.249] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:51:38.250] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c09a333] was not registered for synchronization because synchronization is not active
[17:51:38.251] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [308954224, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:51:38.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:51:38.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:51:38.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:51:38.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c09a333]
[17:51:38.255] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:51:38.255] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8558c9] was not registered for synchronization because synchronization is not active
[17:51:38.256] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1748324624, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:51:38.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:51:38.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:51:38.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:51:38.265] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c8558c9]
[17:51:38.266] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:51:38.266] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7ca1d9] was not registered for synchronization because synchronization is not active
[17:51:38.268] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1176068888, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:51:38.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:51:38.275] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:51:38.298] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:51:38.299] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b7ca1d9]
[17:55:24.224] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:24.225] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a2c73] was not registered for synchronization because synchronization is not active
[17:55:24.226] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1174517643, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:24.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:55:24.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:55:24.229] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:55:24.230] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7a2c73]
[17:55:24.230] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:24.230] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8ba8f8] was not registered for synchronization because synchronization is not active
[17:55:24.231] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1985069325, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:24.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:55:24.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:55:24.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:55:24.239] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b8ba8f8]
[17:55:24.239] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:24.239] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5112118b] was not registered for synchronization because synchronization is not active
[17:55:24.241] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [323359441, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:24.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:55:24.248] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:55:24.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:55:24.271] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5112118b]
[17:55:41.744] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:41.745] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf058cc] was not registered for synchronization because synchronization is not active
[17:55:41.746] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [121117041, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:41.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:55:41.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:55:41.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:55:41.750] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf058cc]
[17:55:41.750] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:41.750] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d1872d] was not registered for synchronization because synchronization is not active
[17:55:41.751] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [472226913, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:41.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:55:41.752] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:55:41.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:55:41.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d1872d]
[17:55:41.760] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:41.760] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8aab55] was not registered for synchronization because synchronization is not active
[17:55:41.761] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [90363709, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:41.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:55:41.771] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:55:41.793] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:55:41.794] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8aab55]
[17:56:40.384] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:40.385] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe956c] was not registered for synchronization because synchronization is not active
[17:56:40.386] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1042958180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:40.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:56:40.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:56:40.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:40.392] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe956c]
[17:56:40.392] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:40.393] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b13cf6d] was not registered for synchronization because synchronization is not active
[17:56:40.394] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1152239370, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:40.394] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:56:40.394] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:56:40.400] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:56:40.401] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b13cf6d]
[17:56:40.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:40.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ec657b8] was not registered for synchronization because synchronization is not active
[17:56:40.403] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1574042687, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:40.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:56:40.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:56:40.432] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:56:40.433] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ec657b8]
[17:58:42.218] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:58:42.219] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798e8647] was not registered for synchronization because synchronization is not active
[17:58:42.220] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [207163191, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:58:42.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:58:42.221] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:58:42.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:58:42.223] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798e8647]
[17:58:42.224] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:58:42.224] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@666de5b1] was not registered for synchronization because synchronization is not active
[17:58:42.225] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [689632073, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:58:42.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:58:42.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:58:42.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:58:42.232] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@666de5b1]
[17:58:42.233] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:58:42.233] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f258b0] was not registered for synchronization because synchronization is not active
[17:58:42.235] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [202205701, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:58:42.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:58:42.245] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:58:42.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:58:42.269] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77f258b0]
[17:59:01.359] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:01.360] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d68e8b0] was not registered for synchronization because synchronization is not active
[17:59:01.361] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [232393684, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:01.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:59:01.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:59:01.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:59:01.366] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d68e8b0]
[17:59:01.366] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:01.366] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@370dc692] was not registered for synchronization because synchronization is not active
[17:59:01.367] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1778232714, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:01.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:59:01.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:59:01.374] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:59:01.375] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@370dc692]
[17:59:01.375] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:01.375] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c62a8a] was not registered for synchronization because synchronization is not active
[17:59:01.377] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1167758098, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:01.377] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:59:01.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:59:01.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:59:01.408] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c62a8a]
[17:59:05.999] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:05.999] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30277f4d] was not registered for synchronization because synchronization is not active
[17:59:06.001] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1235808148, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:06.001] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:59:06.002] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:59:06.004] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:59:06.004] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30277f4d]
[17:59:06.005] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:06.005] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb66774] was not registered for synchronization because synchronization is not active
[17:59:06.006] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1201533557, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:06.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:59:06.007] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:59:06.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:59:06.016] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb66774]
[17:59:06.017] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:06.017] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1ffb4b] was not registered for synchronization because synchronization is not active
[17:59:06.018] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [953939396, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:06.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:59:06.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:59:06.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[17:59:06.035] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c1ffb4b]
[17:59:08.308] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:08.309] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc9bb6] was not registered for synchronization because synchronization is not active
[17:59:08.310] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1146721855, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:08.310] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:59:08.311] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:59:08.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:59:08.314] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efc9bb6]
[17:59:08.314] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:08.314] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e4ccb4c] was not registered for synchronization because synchronization is not active
[17:59:08.315] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1254856826, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:08.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:59:08.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:59:08.323] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:59:08.323] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e4ccb4c]
[17:59:08.324] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:59:08.324] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17bd3fb8] was not registered for synchronization because synchronization is not active
[17:59:08.326] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [497273593, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:59:08.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:59:08.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:59:08.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:59:08.356] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17bd3fb8]
[18:00:57.572] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:00:57.573] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7348ff70] was not registered for synchronization because synchronization is not active
[18:00:57.575] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1209447077, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:00:57.575] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:00:57.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:00:57.578] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:00:57.578] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7348ff70]
[18:00:57.579] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:00:57.579] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@162a464d] was not registered for synchronization because synchronization is not active
[18:00:57.580] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1831532630, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:00:57.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:00:57.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:00:57.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:00:57.587] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@162a464d]
[18:00:57.587] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:00:57.587] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf733fb] was not registered for synchronization because synchronization is not active
[18:00:57.589] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [476014381, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:00:57.589] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:00:57.596] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:00:57.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:00:57.618] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bf733fb]
[18:01:05.556] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:05.556] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521987dd] was not registered for synchronization because synchronization is not active
[18:01:05.558] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128368530, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:05.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:01:05.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:01:05.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:01:05.562] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521987dd]
[18:01:05.562] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:05.562] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77e421ec] was not registered for synchronization because synchronization is not active
[18:01:05.563] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [175549054, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:05.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:01:05.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:01:05.571] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:01:05.571] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77e421ec]
[18:01:05.572] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:05.572] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53da8eff] was not registered for synchronization because synchronization is not active
[18:01:05.573] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [807862581, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:05.573] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:01:05.581] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[18:01:05.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:01:05.604] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53da8eff]
[18:01:06.373] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:06.374] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d1c4fa7] was not registered for synchronization because synchronization is not active
[18:01:06.375] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [303007081, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:06.375] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:01:06.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:01:06.378] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:01:06.379] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d1c4fa7]
[18:01:06.379] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:06.380] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@611b1bb3] was not registered for synchronization because synchronization is not active
[18:01:06.381] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [42454368, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:06.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:01:06.381] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:01:06.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:01:06.388] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@611b1bb3]
[18:01:06.388] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:06.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b007fac] was not registered for synchronization because synchronization is not active
[18:01:06.390] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [74507531, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:06.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:01:06.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[18:01:06.406] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:01:06.407] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b007fac]
[18:01:07.709] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:07.710] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720ddc09] was not registered for synchronization because synchronization is not active
[18:01:07.711] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1517704316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:07.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:01:07.712] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:01:07.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:01:07.715] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720ddc09]
[18:01:07.716] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:07.716] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529aa9b5] was not registered for synchronization because synchronization is not active
[18:01:07.717] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [845655794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:07.717] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:01:07.717] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:01:07.723] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:01:07.724] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@529aa9b5]
[18:01:07.724] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:01:07.724] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5a016] was not registered for synchronization because synchronization is not active
[18:01:07.726] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2027191632, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:01:07.726] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:01:07.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:01:07.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:01:07.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca5a016]
[18:04:03.974] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:03.975] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b63b6b1] was not registered for synchronization because synchronization is not active
[18:04:03.976] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1259253024, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:03.977] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:04:03.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:04:03.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:03.980] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b63b6b1]
[18:04:03.981] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:03.981] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fcd770] was not registered for synchronization because synchronization is not active
[18:04:03.982] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1529283180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:03.982] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:04:03.983] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:04:03.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:04:03.990] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18fcd770]
[18:04:03.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:03.991] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4000877d] was not registered for synchronization because synchronization is not active
[18:04:03.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1879209314, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:03.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:04:03.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[18:04:04.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:04:04.025] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4000877d]
[18:04:10.442] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:10.443] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bece319] was not registered for synchronization because synchronization is not active
[18:04:10.444] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [923359297, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:10.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[18:04:10.445] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[18:04:10.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:10.449] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bece319]
[18:04:11.860] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:11.861] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f36f97a] was not registered for synchronization because synchronization is not active
[18:04:11.863] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1274759235, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:11.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:04:11.864] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:04:11.865] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:11.866] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f36f97a]
[18:04:11.866] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:11.866] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5ca3eb] was not registered for synchronization because synchronization is not active
[18:04:11.867] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1209366826, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:11.868] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:04:11.868] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:04:11.874] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:04:11.875] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5ca3eb]
[18:04:11.875] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:11.875] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f5599d] was not registered for synchronization because synchronization is not active
[18:04:11.877] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [798456912, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:11.877] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:04:11.885] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[18:04:11.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:04:11.911] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63f5599d]
[18:04:15.253] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:15.253] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6131916a] was not registered for synchronization because synchronization is not active
[18:04:15.254] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1880397800, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:15.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:04:15.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:04:15.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:15.258] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6131916a]
[18:04:15.259] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:15.259] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d03ea7] was not registered for synchronization because synchronization is not active
[18:04:15.260] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [634488062, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:15.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:04:15.261] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:04:15.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:04:15.268] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d03ea7]
[18:04:15.269] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:15.269] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab210e9] was not registered for synchronization because synchronization is not active
[18:04:15.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1813287321, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:15.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:04:15.277] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[18:04:15.287] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:04:15.287] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab210e9]
[18:04:17.222] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:17.223] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a165d7] was not registered for synchronization because synchronization is not active
[18:04:17.224] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [469885260, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:17.225] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[18:04:17.226] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[18:04:17.227] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:17.228] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61a165d7]
[18:04:17.228] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:17.229] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6a5ecb] was not registered for synchronization because synchronization is not active
[18:04:17.230] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128686194, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:17.230] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[18:04:17.230] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[18:04:17.237] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:04:17.238] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a6a5ecb]
[18:04:17.238] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:17.238] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38230a33] was not registered for synchronization because synchronization is not active
[18:04:17.240] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [360620353, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:17.241] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[18:04:17.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 49(Integer), free(String), 49(Integer), free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[18:04:17.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:04:17.274] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38230a33]
[18:04:22.125] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:22.125] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73edee89] was not registered for synchronization because synchronization is not active
[18:04:22.127] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1518954621, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:22.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:04:22.128] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:04:22.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:22.233] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73edee89]
[18:04:22.234] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:22.234] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3afef94d] was not registered for synchronization because synchronization is not active
[18:04:22.236] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1029601332, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:22.237] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:04:22.238] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:04:22.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:04:22.258] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3afef94d]
[18:04:24.482] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:24.482] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12191017] was not registered for synchronization because synchronization is not active
[18:04:24.485] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1497677430, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:24.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:04:24.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ${srchInfo.searchKeyword}(String), ${srchInfo.searchKeyword}(String)
[18:04:24.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:24.489] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12191017]
[18:04:38.452] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:38.453] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ae192c1] was not registered for synchronization because synchronization is not active
[18:04:38.454] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1051910311, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:38.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:04:38.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:04:38.457] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:04:38.458] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ae192c1]
[18:04:38.458] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:04:38.459] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1939b549] was not registered for synchronization because synchronization is not active
[18:04:38.460] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [670293799, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:04:38.460] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:04:38.461] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:04:38.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:04:38.477] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1939b549]
[18:06:53.129] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:06:53.129] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70167d57] was not registered for synchronization because synchronization is not active
[18:06:53.131] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1767849176, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:06:53.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:06:53.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ${srchInfo.searchKeyword}(String), ${srchInfo.searchKeyword}(String)
[18:06:53.133] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:06:53.134] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70167d57]
[18:08:19.660] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:08:19.660] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7111b] was not registered for synchronization because synchronization is not active
[18:08:19.662] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1823709652, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:08:19.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:08:19.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:08:19.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:08:19.665] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7111b]
[18:08:19.665] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:08:19.665] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c8a287d] was not registered for synchronization because synchronization is not active
[18:08:19.666] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2079649807, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:08:19.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:08:19.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:08:19.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:08:19.681] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c8a287d]
[18:08:23.123] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:08:23.123] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a51c84] was not registered for synchronization because synchronization is not active
[18:08:23.124] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [320493871, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:08:23.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:08:23.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:08:23.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:08:23.128] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a51c84]
[18:08:23.128] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:08:23.128] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bfbcd3] was not registered for synchronization because synchronization is not active
[18:08:23.130] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [607680829, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:08:23.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:08:23.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:08:23.145] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:08:23.146] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bfbcd3]
[18:12:47.990] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:47.991] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3306e3fb] was not registered for synchronization because synchronization is not active
[18:12:47.992] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1703793596, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:47.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:47.993] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:47.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:47.995] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3306e3fb]
[18:12:47.996] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:47.996] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ce638c] was not registered for synchronization because synchronization is not active
[18:12:47.997] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1499758159, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:47.997] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:47.999] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:12:48.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:12:48.013] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ce638c]
[18:12:50.584] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:50.585] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e7ac215] was not registered for synchronization because synchronization is not active
[18:12:50.586] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [819747783, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:50.587] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:50.587] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:50.589] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:50.590] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e7ac215]
[18:12:50.590] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:50.590] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c2ebc0] was not registered for synchronization because synchronization is not active
[18:12:50.591] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [978402630, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:50.591] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:50.592] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:12:50.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:12:50.606] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37c2ebc0]
[18:12:51.550] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:51.550] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5b2c26] was not registered for synchronization because synchronization is not active
[18:12:51.552] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [170732398, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:51.552] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:51.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:51.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:51.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5b2c26]
[18:12:51.556] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:51.556] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@166ec846] was not registered for synchronization because synchronization is not active
[18:12:51.557] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [564328553, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:51.557] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:51.558] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:12:51.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:12:51.571] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@166ec846]
[18:12:52.169] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:52.169] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60ac9510] was not registered for synchronization because synchronization is not active
[18:12:52.170] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1420507904, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:52.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:52.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:52.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:52.173] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60ac9510]
[18:12:52.174] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:52.174] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75466288] was not registered for synchronization because synchronization is not active
[18:12:52.175] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [312425000, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:52.175] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:52.176] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:12:52.189] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:12:52.189] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75466288]
[18:12:54.656] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:54.656] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b51d34b] was not registered for synchronization because synchronization is not active
[18:12:54.658] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1583652701, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:54.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:54.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:54.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:54.661] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b51d34b]
[18:12:54.661] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:54.662] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fde20f] was not registered for synchronization because synchronization is not active
[18:12:54.663] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1358169543, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:54.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:54.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 20(Integer)
[18:12:54.679] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 12
[18:12:54.680] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fde20f]
[18:12:57.917] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:57.918] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@760a286a] was not registered for synchronization because synchronization is not active
[18:12:57.919] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1155092682, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:57.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:12:57.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:12:57.922] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:12:57.923] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@760a286a]
[18:12:57.923] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:12:57.923] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf41aec] was not registered for synchronization because synchronization is not active
[18:12:57.924] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1901304972, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:12:57.924] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:12:57.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:12:57.939] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:12:57.940] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bf41aec]
[18:13:01.445] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:13:01.446] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c33ea81] was not registered for synchronization because synchronization is not active
[18:13:01.447] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2061519568, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:13:01.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE boardseq = ? 
[18:13:01.448] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String), (String), (String)
[18:13:01.451] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:13:01.451] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c33ea81]
[18:14:17.131] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:14:17.131] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2783a80b] was not registered for synchronization because synchronization is not active
[18:14:17.133] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1999216509, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:14:17.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:14:17.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:14:17.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:14:17.138] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2783a80b]
[18:14:17.139] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:14:17.139] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099a702] was not registered for synchronization because synchronization is not active
[18:14:17.141] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1901453609, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:14:17.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:14:17.142] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:14:17.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:14:17.160] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099a702]
[18:14:33.994] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:14:33.995] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255b0e8d] was not registered for synchronization because synchronization is not active
[18:14:33.996] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1040854893, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:14:33.996] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE boardseq = ? 
[18:14:33.997] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String), (String), (String)
[18:14:34.000] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:14:34.001] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@255b0e8d]
[18:15:13.159] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:15:13.181] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239154d9] was not registered for synchronization because synchronization is not active
[18:15:13.228] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1162891941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:15:13.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE boardseq = ? 
[18:15:13.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String), (String), (String)
[18:15:13.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:15:13.430] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239154d9]
[18:16:11.356] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[18:16:57.447] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:16:57.457] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c5a396] was not registered for synchronization because synchronization is not active
[18:16:57.903] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1896993468, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:16:57.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[18:16:57.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[18:16:57.978] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:16:57.984] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c5a396]
[18:20:42.689] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:42.690] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd7de8c] was not registered for synchronization because synchronization is not active
[18:20:42.703] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1564370853, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:42.703] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:20:42.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:20:42.707] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:20:42.708] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fd7de8c]
[18:20:42.711] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:42.711] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24785fe3] was not registered for synchronization because synchronization is not active
[18:20:42.717] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1537777992, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:42.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:20:42.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[18:20:42.756] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:20:42.757] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24785fe3]
[18:20:45.115] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:45.115] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718d76a7] was not registered for synchronization because synchronization is not active
[18:20:45.117] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2124393735, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:45.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[18:20:45.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[18:20:45.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:20:45.125] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718d76a7]
[18:20:45.126] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:45.126] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ffaa4a0] was not registered for synchronization because synchronization is not active
[18:20:45.127] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [340168295, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:45.128] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[18:20:45.129] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[18:20:45.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:20:45.136] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ffaa4a0]
[18:20:48.216] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:48.216] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40870ce7] was not registered for synchronization because synchronization is not active
[18:20:48.218] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [969245006, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:48.218] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[18:20:48.219] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[18:20:48.261] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:20:48.262] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40870ce7]
[18:20:56.631] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:56.632] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d885c07] was not registered for synchronization because synchronization is not active
[18:20:56.633] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1537183435, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:56.634] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[18:20:56.635] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[18:20:56.674] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:20:56.675] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d885c07]
[18:20:59.231] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:20:59.231] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6134d250] was not registered for synchronization because synchronization is not active
[18:20:59.233] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [537516139, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:20:59.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[18:20:59.233] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[18:20:59.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[18:20:59.270] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6134d250]
[18:21:05.188] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:05.188] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb9097d] was not registered for synchronization because synchronization is not active
[18:21:05.190] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839348681, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:05.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:21:05.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:21:05.193] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:05.194] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb9097d]
[18:21:05.195] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:05.195] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c541744] was not registered for synchronization because synchronization is not active
[18:21:05.196] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1407132168, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:05.196] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:21:05.197] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[18:21:05.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:05.224] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c541744]
[18:21:10.844] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:10.845] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d7db87] was not registered for synchronization because synchronization is not active
[18:21:10.847] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1923356235, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:10.847] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:21:10.848] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:21:10.851] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:10.852] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30d7db87]
[18:21:10.852] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:10.852] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cb71b69] was not registered for synchronization because synchronization is not active
[18:21:10.854] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [781664757, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:10.854] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:21:10.856] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 10(Integer), 10(Integer)
[18:21:10.882] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:10.883] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cb71b69]
[18:21:12.487] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:12.487] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1758845c] was not registered for synchronization because synchronization is not active
[18:21:12.489] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1842680865, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:12.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:12.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:12.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:12.496] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1758845c]
[18:21:12.496] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:12.496] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47d36985] was not registered for synchronization because synchronization is not active
[18:21:12.498] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1023630420, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:12.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:12.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:21:12.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:12.532] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47d36985]
[18:21:15.116] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:15.116] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713fda2f] was not registered for synchronization because synchronization is not active
[18:21:15.118] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1031916934, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:15.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE boardseq = ? 
[18:21:15.120] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String), (String), (String)
[18:21:15.122] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:15.123] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@713fda2f]
[18:21:15.123] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:15.123] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23318bb7] was not registered for synchronization because synchronization is not active
[18:21:15.125] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [128159184, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:15.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE boardseq = ? UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) LIMIT ?, ? 
[18:21:15.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), devvv(String), (String), 0(Integer), 10(Integer)
[18:21:15.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[18:21:15.136] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23318bb7]
[18:21:18.108] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:18.109] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43b537ae] was not registered for synchronization because synchronization is not active
[18:21:18.111] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2013106763, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:18.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:18.112] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:18.114] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:18.115] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43b537ae]
[18:21:18.115] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:18.115] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@155e4a04] was not registered for synchronization because synchronization is not active
[18:21:18.117] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1433437645, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:18.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:18.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:21:18.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:18.139] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@155e4a04]
[18:21:20.405] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:20.405] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7417c4d5] was not registered for synchronization because synchronization is not active
[18:21:20.409] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1325439533, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:20.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE boardseq = ? 
[18:21:20.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String), (String), (String)
[18:21:20.412] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:20.413] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7417c4d5]
[18:21:20.413] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:20.413] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee752f0] was not registered for synchronization because synchronization is not active
[18:21:20.415] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [637165475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:20.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE boardseq = ? UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) LIMIT ?, ? 
[18:21:20.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), devvv(String), (String), 0(Integer), 10(Integer)
[18:21:20.418] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[18:21:20.419] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee752f0]
[18:21:22.875] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:22.876] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b18373b] was not registered for synchronization because synchronization is not active
[18:21:22.877] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [915874596, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:22.878] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:22.878] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:22.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:22.881] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b18373b]
[18:21:22.882] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:22.882] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc2f60] was not registered for synchronization because synchronization is not active
[18:21:22.883] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [35082485, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:22.883] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:22.885] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:21:22.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:22.901] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc2f60]
[18:21:24.132] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:24.132] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756a7250] was not registered for synchronization because synchronization is not active
[18:21:24.134] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [269634538, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:24.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:24.135] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:24.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:24.138] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@756a7250]
[18:21:24.139] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:24.139] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a80f724] was not registered for synchronization because synchronization is not active
[18:21:24.140] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1267776603, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:24.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:24.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 30(Integer), 10(Integer)
[18:21:24.147] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:21:24.148] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a80f724]
[18:21:26.301] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:26.302] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e7728e] was not registered for synchronization because synchronization is not active
[18:21:26.303] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [459166666, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:26.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:26.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:26.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:26.307] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e7728e]
[18:21:26.307] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:26.307] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b55c8fb] was not registered for synchronization because synchronization is not active
[18:21:26.308] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1615211141, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:26.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:26.310] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:21:26.325] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:26.326] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b55c8fb]
[18:21:30.661] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:30.661] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8c3f4e] was not registered for synchronization because synchronization is not active
[18:21:30.663] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [510093163, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:30.663] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:30.665] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:30.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:30.668] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8c3f4e]
[18:21:30.668] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:30.668] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53aa8fae] was not registered for synchronization because synchronization is not active
[18:21:30.669] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1116591755, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:30.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:30.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 20(Integer)
[18:21:30.689] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 12
[18:21:30.690] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53aa8fae]
[18:21:33.214] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:33.214] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ad070a2] was not registered for synchronization because synchronization is not active
[18:21:33.216] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1503411444, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:33.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:33.217] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:33.220] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:33.220] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ad070a2]
[18:21:33.221] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:33.221] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dae9473] was not registered for synchronization because synchronization is not active
[18:21:33.222] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1983294730, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:33.222] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:33.223] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 50(Integer)
[18:21:33.266] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 32
[18:21:33.267] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dae9473]
[18:21:36.599] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:36.599] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fac9644] was not registered for synchronization because synchronization is not active
[18:21:36.601] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [621044270, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:36.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:36.602] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:36.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:36.606] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fac9644]
[18:21:36.606] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:36.606] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526e4945] was not registered for synchronization because synchronization is not active
[18:21:36.607] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [371222434, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:36.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:36.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:21:36.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:36.624] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@526e4945]
[18:21:38.463] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:38.464] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d35f70b] was not registered for synchronization because synchronization is not active
[18:21:38.465] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1984465268, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:38.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:38.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:38.468] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:38.469] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d35f70b]
[18:21:38.469] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:38.469] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@638de64e] was not registered for synchronization because synchronization is not active
[18:21:38.471] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2101102174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:38.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:38.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 20(Integer)
[18:21:38.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 20
[18:21:38.499] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@638de64e]
[18:21:42.864] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:42.864] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fb1b47] was not registered for synchronization because synchronization is not active
[18:21:42.866] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1285098102, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:42.867] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:42.867] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:42.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:42.870] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53fb1b47]
[18:21:42.871] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:42.871] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46919491] was not registered for synchronization because synchronization is not active
[18:21:42.872] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1383533794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:42.872] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:42.873] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 50(Integer)
[18:21:42.912] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 32
[18:21:42.913] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46919491]
[18:21:47.031] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:47.032] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@600b2bdc] was not registered for synchronization because synchronization is not active
[18:21:47.033] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1116584781, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:47.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:21:47.035] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:21:47.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:21:47.038] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@600b2bdc]
[18:21:47.038] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:21:47.038] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a81a4a0] was not registered for synchronization because synchronization is not active
[18:21:47.040] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [908980070, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:21:47.040] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:21:47.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:21:47.057] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:21:47.058] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a81a4a0]
[18:22:02.195] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:02.195] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f0a3650] was not registered for synchronization because synchronization is not active
[18:22:02.197] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1182063239, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:02.197] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:22:02.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:22:02.200] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:02.201] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f0a3650]
[18:22:02.202] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:02.202] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4997fa] was not registered for synchronization because synchronization is not active
[18:22:02.203] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1132642669, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:02.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:22:02.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[18:22:02.229] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:22:02.230] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4997fa]
[18:22:51.154] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:51.154] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785d6e38] was not registered for synchronization because synchronization is not active
[18:22:51.156] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [148556991, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:51.156] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:22:51.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:22:51.159] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:51.159] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@785d6e38]
[18:22:51.160] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:51.160] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6da5664a] was not registered for synchronization because synchronization is not active
[18:22:51.162] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1900392381, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:51.162] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:22:51.163] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[18:22:51.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:22:51.186] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6da5664a]
[18:22:52.337] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:52.337] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8728025] was not registered for synchronization because synchronization is not active
[18:22:52.339] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [258006777, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:52.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:22:52.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[18:22:52.342] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:52.342] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8728025]
[18:22:52.342] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:52.343] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e98a320] was not registered for synchronization because synchronization is not active
[18:22:52.344] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157107989, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:52.344] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:22:52.345] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[18:22:52.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[18:22:52.355] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e98a320]
[18:22:54.940] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:54.940] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebcc906] was not registered for synchronization because synchronization is not active
[18:22:54.941] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [212822946, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:54.942] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[18:22:54.942] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test010(String)
[18:22:54.945] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:54.946] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebcc906]
[18:22:56.114] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:56.114] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5359b2f8] was not registered for synchronization because synchronization is not active
[18:22:56.116] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [732242172, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:56.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:22:56.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String)
[18:22:56.120] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:56.121] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5359b2f8]
[18:22:56.121] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:56.121] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454b07ea] was not registered for synchronization because synchronization is not active
[18:22:56.122] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [780806546, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:56.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:22:56.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 2(String), (String), 0(Integer), 10(Integer)
[18:22:56.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 3
[18:22:56.133] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@454b07ea]
[18:22:58.859] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:58.859] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527308a1] was not registered for synchronization because synchronization is not active
[18:22:58.860] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1943448749, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:58.861] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate; 
[18:22:58.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String)
[18:22:58.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:22:58.864] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@527308a1]
[18:22:58.864] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:22:58.864] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22844e4e] was not registered for synchronization because synchronization is not active
[18:22:58.866] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2071272642, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:22:58.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT * FROM t_member WHERE status = ? AND id LIKE CONCAT('%',?,'%') ORDER BY regdate, id LIMIT ?, ?; 
[18:22:58.867] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 1(String), (String), 0(Integer), 10(Integer)
[18:22:58.889] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:22:58.890] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22844e4e]
[18:23:03.680] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:03.680] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f78a774] was not registered for synchronization because synchronization is not active
[18:23:03.682] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [236293177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:03.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:23:03.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:23:03.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:23:03.686] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f78a774]
[18:23:03.686] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:03.686] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d5cf63] was not registered for synchronization because synchronization is not active
[18:23:03.687] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1105093397, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:03.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:23:03.689] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:23:03.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:23:03.704] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d5cf63]
[18:23:07.020] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:07.020] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b533f0] was not registered for synchronization because synchronization is not active
[18:23:07.021] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [425649322, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:07.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:23:07.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:23:07.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:23:07.025] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b533f0]
[18:23:07.025] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:07.025] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f139f51] was not registered for synchronization because synchronization is not active
[18:23:07.027] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1960004090, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:07.027] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:23:07.028] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:23:07.042] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:23:07.043] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f139f51]
[18:23:45.592] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:45.592] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8257b3] was not registered for synchronization because synchronization is not active
[18:23:45.593] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1022243770, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:45.593] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:23:45.594] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:23:45.596] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:23:45.596] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c8257b3]
[18:23:45.596] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:23:45.597] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba6a2b4] was not registered for synchronization because synchronization is not active
[18:23:45.598] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1285799542, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:23:45.598] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:23:45.599] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:23:45.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:23:45.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ba6a2b4]
[18:26:33.109] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:33.109] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1083d233] was not registered for synchronization because synchronization is not active
[18:26:33.111] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1613841826, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:33.111] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:33.112] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:33.113] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:33.114] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1083d233]
[18:26:33.114] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:33.115] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a33bb2] was not registered for synchronization because synchronization is not active
[18:26:33.116] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [351477281, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:33.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:33.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:26:33.131] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:33.132] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a33bb2]
[18:26:35.708] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:35.709] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a2af000] was not registered for synchronization because synchronization is not active
[18:26:35.710] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1283071011, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:35.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:35.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:35.713] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:35.714] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a2af000]
[18:26:35.714] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:35.714] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a31d049] was not registered for synchronization because synchronization is not active
[18:26:35.715] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1550643932, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:35.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:35.717] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:26:35.730] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:35.731] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a31d049]
[18:26:36.757] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:36.757] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12ad9cd7] was not registered for synchronization because synchronization is not active
[18:26:36.759] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [690963147, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:36.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:36.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:36.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:36.762] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12ad9cd7]
[18:26:36.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:36.763] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f3131] was not registered for synchronization because synchronization is not active
[18:26:36.764] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1787405772, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:36.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:36.765] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:26:36.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:36.778] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f3131]
[18:26:37.251] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:37.251] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23edb215] was not registered for synchronization because synchronization is not active
[18:26:37.253] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1588317607, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:37.253] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:37.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:37.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:37.256] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23edb215]
[18:26:37.257] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:37.257] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2de629f8] was not registered for synchronization because synchronization is not active
[18:26:37.258] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [622849100, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:37.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:37.259] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:26:37.272] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:37.273] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2de629f8]
[18:26:37.619] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:37.619] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fa8350c] was not registered for synchronization because synchronization is not active
[18:26:37.621] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [86401886, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:37.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:37.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:37.625] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:37.625] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fa8350c]
[18:26:37.626] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:37.626] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bbe2c91] was not registered for synchronization because synchronization is not active
[18:26:37.627] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2052327537, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:37.627] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:37.628] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 30(Integer), 10(Integer)
[18:26:37.632] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:26:37.633] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bbe2c91]
[18:26:38.804] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:38.804] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458f14a] was not registered for synchronization because synchronization is not active
[18:26:38.806] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1228051320, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:38.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:38.807] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:38.809] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:38.810] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5458f14a]
[18:26:38.810] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:38.810] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d101cfb] was not registered for synchronization because synchronization is not active
[18:26:38.811] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1229364483, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:38.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:38.813] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:26:38.827] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:38.828] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d101cfb]
[18:26:40.116] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:40.116] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ac77a9] was not registered for synchronization because synchronization is not active
[18:26:40.118] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1129353675, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:40.118] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:40.119] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:40.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:40.121] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27ac77a9]
[18:26:40.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:40.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad62ff6] was not registered for synchronization because synchronization is not active
[18:26:40.123] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [616714951, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:40.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:40.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:26:40.137] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:40.137] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ad62ff6]
[18:26:40.987] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:40.987] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215ad316] was not registered for synchronization because synchronization is not active
[18:26:40.989] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1757290981, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:40.989] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:40.990] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:40.992] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:40.993] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@215ad316]
[18:26:40.993] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:40.993] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1611ca67] was not registered for synchronization because synchronization is not active
[18:26:40.994] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2074112098, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:40.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:40.995] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:26:41.009] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:41.009] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1611ca67]
[18:26:44.450] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:44.451] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57546352] was not registered for synchronization because synchronization is not active
[18:26:44.453] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1005476035, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:44.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:44.454] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:44.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:44.456] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57546352]
[18:26:44.457] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:44.457] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc99b36] was not registered for synchronization because synchronization is not active
[18:26:44.458] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1737664415, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:44.459] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:44.460] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 30(Integer), 10(Integer)
[18:26:44.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:26:44.465] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bc99b36]
[18:26:45.524] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:45.524] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158a3e05] was not registered for synchronization because synchronization is not active
[18:26:45.526] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [974049073, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:45.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:26:45.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:26:45.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:26:45.530] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158a3e05]
[18:26:45.530] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:26:45.530] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723f0ea2] was not registered for synchronization because synchronization is not active
[18:26:45.531] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [274156925, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:26:45.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:26:45.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:26:45.545] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:26:45.546] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@723f0ea2]
[18:28:47.286] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:47.286] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e4e1573] was not registered for synchronization because synchronization is not active
[18:28:47.288] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1032314255, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:47.288] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:28:47.289] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:28:47.291] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:28:47.292] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e4e1573]
[18:28:47.292] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:47.292] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f3bcd18] was not registered for synchronization because synchronization is not active
[18:28:47.293] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [905785422, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:47.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:28:47.295] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:28:47.308] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:28:47.309] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f3bcd18]
[18:28:55.568] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:55.568] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274d4f20] was not registered for synchronization because synchronization is not active
[18:28:55.569] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [111080449, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:55.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:28:55.570] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:28:55.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:28:55.573] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@274d4f20]
[18:28:55.573] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:55.574] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fb005] was not registered for synchronization because synchronization is not active
[18:28:55.575] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1465545542, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:55.575] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:28:55.576] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 20(Integer)
[18:28:55.591] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 12
[18:28:55.592] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57fb005]
[18:28:57.382] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:57.383] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a50903] was not registered for synchronization because synchronization is not active
[18:28:57.384] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1370129487, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:57.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:28:57.385] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:28:57.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:28:57.387] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a50903]
[18:28:57.388] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:28:57.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78335e] was not registered for synchronization because synchronization is not active
[18:28:57.389] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1636838880, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:28:57.389] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:28:57.390] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:28:57.404] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:28:57.404] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78335e]
[18:29:02.676] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:29:02.677] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e807cd] was not registered for synchronization because synchronization is not active
[18:29:02.678] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1290040211, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:29:02.679] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:29:02.680] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:29:02.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:29:02.682] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44e807cd]
[18:29:02.683] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:29:02.683] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cea1fae] was not registered for synchronization because synchronization is not active
[18:29:02.684] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [9210346, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:29:02.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:29:02.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:29:02.698] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:29:02.699] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cea1fae]
[18:30:07.252] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:30:07.252] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44ed9647] was not registered for synchronization because synchronization is not active
[18:30:07.254] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2054282954, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:30:07.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:30:07.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:30:07.257] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:30:07.258] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@44ed9647]
[18:30:07.258] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:30:07.258] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce6e790] was not registered for synchronization because synchronization is not active
[18:30:07.259] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [332231363, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:30:07.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:30:07.260] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:30:07.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:30:07.275] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ce6e790]
[18:30:07.779] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:30:07.780] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dfbeb1f] was not registered for synchronization because synchronization is not active
[18:30:07.782] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1005316284, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:30:07.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:30:07.783] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:30:07.785] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:30:07.786] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dfbeb1f]
[18:30:07.786] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:30:07.786] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e095f89] was not registered for synchronization because synchronization is not active
[18:30:07.788] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1987508539, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:30:07.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:30:07.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:30:07.802] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:30:07.803] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e095f89]
[18:32:54.146] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:32:54.147] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429f31ce] was not registered for synchronization because synchronization is not active
[18:32:54.148] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1455203850, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:32:54.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:32:54.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:32:54.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:32:54.152] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429f31ce]
[18:32:54.152] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:32:54.153] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed37f4f] was not registered for synchronization because synchronization is not active
[18:32:54.154] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1586251413, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:32:54.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:32:54.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:32:54.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:32:54.169] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ed37f4f]
[18:33:10.076] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:10.076] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f4e690d] was not registered for synchronization because synchronization is not active
[18:33:10.078] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1642923040, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:10.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:33:10.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:33:10.081] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:33:10.082] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f4e690d]
[18:33:10.082] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:33:10.082] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef455f] was not registered for synchronization because synchronization is not active
[18:33:10.084] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [696777352, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:33:10.084] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , (SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:33:10.085] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:33:10.097] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:33:10.098] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef455f]
[18:39:04.563] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[18:39:30.892] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:39:30.902] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27332770] was not registered for synchronization because synchronization is not active
[18:39:31.314] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [805892695, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:39:31.320] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[18:39:31.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: devvv(String)
[18:39:31.386] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:39:31.393] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27332770]
[18:39:32.517] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:39:32.518] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1a5e79] was not registered for synchronization because synchronization is not active
[18:39:32.528] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1022623801, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:39:32.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:39:32.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:39:32.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:39:32.537] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e1a5e79]
[18:39:32.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:39:32.541] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f23eb] was not registered for synchronization because synchronization is not active
[18:39:32.548] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1611075494, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:39:32.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:39:32.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 0(Integer), 10(Integer)
[18:39:32.582] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:39:32.583] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f23eb]
[18:39:50.784] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:39:50.785] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70c5f474] was not registered for synchronization because synchronization is not active
[18:39:50.787] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2082260147, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:39:50.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:39:50.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:39:50.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:39:50.792] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70c5f474]
[18:39:50.792] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:39:50.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a6dfda] was not registered for synchronization because synchronization is not active
[18:39:50.794] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1702759012, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:39:50.795] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:39:50.797] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:39:50.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:39:50.820] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a6dfda]
[18:40:31.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:31.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf552bd] was not registered for synchronization because synchronization is not active
[18:40:31.351] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1321660010, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:31.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:40:31.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:40:31.356] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:40:31.357] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf552bd]
[18:40:31.357] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:31.357] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78e7c7] was not registered for synchronization because synchronization is not active
[18:40:31.359] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1207799514, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:31.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:40:31.361] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:40:31.380] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:40:31.381] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b78e7c7]
[18:40:39.351] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:39.351] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4472c4c4] was not registered for synchronization because synchronization is not active
[18:40:39.353] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2145167760, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:39.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:40:39.354] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:40:39.357] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:40:39.358] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4472c4c4]
[18:40:39.358] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:39.358] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67ffb98b] was not registered for synchronization because synchronization is not active
[18:40:39.360] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1330879812, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:39.360] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:40:39.362] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 30(Integer), 10(Integer)
[18:40:39.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:40:39.371] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67ffb98b]
[18:40:44.642] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:44.642] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f087dba] was not registered for synchronization because synchronization is not active
[18:40:44.644] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1330248690, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:44.645] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:40:44.646] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:40:44.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:40:44.649] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f087dba]
[18:40:44.650] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:44.650] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6e1cf2] was not registered for synchronization because synchronization is not active
[18:40:44.651] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1526827721, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:44.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:40:44.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:40:44.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:40:44.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6e1cf2]
[18:40:49.389] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:49.389] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118ce1aa] was not registered for synchronization because synchronization is not active
[18:40:49.391] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [538770892, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:49.391] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:40:49.392] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:40:49.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:40:49.396] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118ce1aa]
[18:40:49.396] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:40:49.396] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@362d05d8] was not registered for synchronization because synchronization is not active
[18:40:49.398] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [805499508, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:40:49.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:40:49.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:40:49.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:40:49.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@362d05d8]
[18:42:12.727] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:42:12.727] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e784cc3] was not registered for synchronization because synchronization is not active
[18:42:12.729] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1437738367, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:42:12.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:42:12.730] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:42:12.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:42:12.733] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e784cc3]
[18:42:12.734] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:42:12.734] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c48da35] was not registered for synchronization because synchronization is not active
[18:42:12.735] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [248704250, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:42:12.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:42:12.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:42:12.755] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:42:12.756] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c48da35]
[18:43:43.585] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:43:43.586] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c377c9] was not registered for synchronization because synchronization is not active
[18:43:43.587] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [317460220, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:43:43.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:43:43.589] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:43:43.594] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:43:43.595] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62c377c9]
[18:43:43.596] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:43:43.596] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48079d0b] was not registered for synchronization because synchronization is not active
[18:43:43.597] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1098385042, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:43:43.597] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:43:43.599] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 20(Integer), 10(Integer)
[18:43:43.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:43:43.615] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48079d0b]
[18:45:32.811] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:32.812] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a1e9884] was not registered for synchronization because synchronization is not active
[18:45:32.814] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1317065999, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:32.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:45:32.815] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:45:32.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:32.818] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a1e9884]
[18:45:32.819] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:32.819] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4de4e5] was not registered for synchronization because synchronization is not active
[18:45:32.822] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1260120439, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:32.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:45:32.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 30(Integer), 10(Integer)
[18:45:32.828] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[18:45:32.829] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f4de4e5]
[18:45:34.362] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:34.363] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cb445e] was not registered for synchronization because synchronization is not active
[18:45:34.365] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1963366938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:34.365] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:45:34.366] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:45:34.369] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:34.370] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38cb445e]
[18:45:34.370] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:34.370] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289c2d17] was not registered for synchronization because synchronization is not active
[18:45:34.371] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2014624760, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:34.372] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:45:34.372] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:45:34.387] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:34.388] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@289c2d17]
[18:45:38.016] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:38.016] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2514b392] was not registered for synchronization because synchronization is not active
[18:45:38.018] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [695171014, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:38.018] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:45:38.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:45:38.020] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:45:38.021] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2514b392]
[18:45:38.022] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:45:38.022] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed42fc1] was not registered for synchronization because synchronization is not active
[18:45:38.023] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [244888636, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:45:38.023] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:45:38.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:45:38.041] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:45:38.042] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ed42fc1]
[18:47:00.834] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:47:00.835] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8643e0] was not registered for synchronization because synchronization is not active
[18:47:00.837] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1582107900, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:47:00.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:47:00.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:47:00.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:47:00.841] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a8643e0]
[18:47:00.841] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:47:00.842] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2394c998] was not registered for synchronization because synchronization is not active
[18:47:00.843] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [398352503, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:47:00.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:47:00.844] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:47:00.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:47:00.859] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2394c998]
[18:47:14.329] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:47:14.330] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ac8586] was not registered for synchronization because synchronization is not active
[18:47:14.331] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1476685452, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:47:14.331] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') 
[18:47:14.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String)
[18:47:14.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[18:47:14.336] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56ac8586]
[18:47:14.336] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[18:47:14.336] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bcccfb5] was not registered for synchronization because synchronization is not active
[18:47:14.338] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1336557136, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[18:47:14.338] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, id, content, boardseq, replyboardseq, pid, regdate FROM t_comment WHERE content LIKE CONCAT('%', ?, '%') UNION SELECT seq, id, content, (SELECT boardseq FROM t_comment tc WHERE tc.seq = tcr.pid) AS boardseq , /*(SELECT replyboardseq FROM t_comment tc WHERE tc.seq = tcr.pid)*/ seq AS replyboardseq, pid, regdate FROM t_comment_reply tcr WHERE content LIKE CONCAT('%', ?, '%') LIMIT ?, ? 
[18:47:14.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: (String), (String), 10(Integer), 10(Integer)
[18:47:14.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[18:47:14.356] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bcccfb5]
