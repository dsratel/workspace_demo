[10:03:53.209] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[10:16:32.346] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:32.358] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72b26fc9] was not registered for synchronization because synchronization is not active
[10:16:32.898] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [121714807, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:32.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[10:16:32.954] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:16:33.044] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:16:33.061] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72b26fc9]
[10:16:33.088] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:33.089] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f6e4cd] was not registered for synchronization because synchronization is not active
[10:16:33.105] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1420338316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:33.105] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:16:33.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:16:33.115] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:16:33.117] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f6e4cd]
[10:16:33.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:33.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27f04a4e] was not registered for synchronization because synchronization is not active
[10:16:33.125] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [62898558, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:33.125] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:16:33.127] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:16:33.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:16:33.141] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27f04a4e]
[10:16:33.142] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:16:33.142] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43aa1561] was not registered for synchronization because synchronization is not active
[10:16:33.159] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [389439551, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:16:33.160] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:16:33.191] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:16:33.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:16:33.334] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43aa1561]
[10:17:11.814] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:17:11.814] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5f0a78] was not registered for synchronization because synchronization is not active
[10:17:11.817] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1371491171, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:17:11.817] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:17:11.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:17:11.821] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:17:11.822] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f5f0a78]
[10:17:11.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:17:11.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65fcbf6] was not registered for synchronization because synchronization is not active
[10:17:11.824] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [332426588, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:17:11.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:17:11.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:17:11.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:17:11.835] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65fcbf6]
[10:17:11.835] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:17:11.835] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eaa495] was not registered for synchronization because synchronization is not active
[10:17:11.839] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [990341773, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:17:11.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:17:11.850] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:17:11.884] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:17:11.886] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23eaa495]
[10:28:21.029] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:21.029] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1da9cd48] was not registered for synchronization because synchronization is not active
[10:28:21.031] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1121013202, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:21.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[10:28:21.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[10:28:21.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:28:21.036] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1da9cd48]
[10:28:21.037] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:21.037] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a9885b] was not registered for synchronization because synchronization is not active
[10:28:21.038] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [921873722, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:21.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[10:28:21.039] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[10:28:21.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[10:28:21.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8a9885b]
[10:28:21.048] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:21.049] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15ffea7c] was not registered for synchronization because synchronization is not active
[10:28:21.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1251233654, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:21.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[10:28:21.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[10:28:21.095] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[10:28:21.096] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15ffea7c]
[10:28:36.828] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:36.829] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c7cd9e] was not registered for synchronization because synchronization is not active
[10:28:36.830] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [363415953, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:36.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:28:36.832] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:28:36.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:28:36.838] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24c7cd9e]
[10:28:36.838] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:36.839] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65f75e98] was not registered for synchronization because synchronization is not active
[10:28:36.840] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1744190802, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:36.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:28:36.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:28:36.846] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:28:36.847] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65f75e98]
[10:28:39.262] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:28:39.262] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73869d92] was not registered for synchronization because synchronization is not active
[10:28:39.264] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1820692477, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:28:39.264] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT fileno FROM t_member WHERE id = ? 
[10:28:39.265] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: null
[10:28:39.267] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[10:28:39.268] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73869d92]
[10:29:00.516] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:29:00.516] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd91aa6] was not registered for synchronization because synchronization is not active
[10:29:00.518] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1775371927, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:29:00.518] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:29:00.519] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:29:00.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:29:00.524] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cd91aa6]
[10:29:00.525] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:29:00.525] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@282fa73d] was not registered for synchronization because synchronization is not active
[10:29:00.526] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1311188797, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:29:00.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:29:00.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:29:00.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:29:00.530] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@282fa73d]
[10:31:18.522] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:18.523] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1471f648] was not registered for synchronization because synchronization is not active
[10:31:18.524] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1569472690, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:18.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:31:18.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:31:18.532] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:18.534] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1471f648]
[10:31:18.534] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:18.534] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4507d4] was not registered for synchronization because synchronization is not active
[10:31:18.535] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [142015864, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:18.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:31:18.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:31:18.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:18.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c4507d4]
[10:31:46.753] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:46.754] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d48c819] was not registered for synchronization because synchronization is not active
[10:31:46.759] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2083248284, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:46.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:31:46.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:31:46.764] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:46.764] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d48c819]
[10:31:46.765] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:31:46.765] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4775613f] was not registered for synchronization because synchronization is not active
[10:31:46.766] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1908473549, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:31:46.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:31:46.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:31:46.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:31:46.770] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4775613f]
[10:38:35.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:35.533] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b966bd6] was not registered for synchronization because synchronization is not active
[10:38:35.534] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1839260408, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:35.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:38:35.535] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:38:35.538] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:38:35.539] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b966bd6]
[10:38:35.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:38:35.540] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c682f5a] was not registered for synchronization because synchronization is not active
[10:38:35.541] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1046318258, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:38:35.541] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:38:35.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:38:35.544] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:38:35.545] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c682f5a]
[10:39:06.948] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:06.948] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7824e869] was not registered for synchronization because synchronization is not active
[10:39:06.950] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [862757838, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:06.950] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:39:06.951] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:39:06.954] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:06.955] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7824e869]
[10:39:06.956] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:06.956] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31a16902] was not registered for synchronization because synchronization is not active
[10:39:06.957] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [169154750, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:06.957] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:39:06.958] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:39:06.960] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:06.960] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31a16902]
[10:39:19.649] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:19.650] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc2ebb] was not registered for synchronization because synchronization is not active
[10:39:19.651] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [781465037, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:19.651] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:39:19.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:39:19.655] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:19.656] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc2ebb]
[10:39:19.657] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:19.657] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f7623] was not registered for synchronization because synchronization is not active
[10:39:19.658] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [49892887, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:19.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:39:19.659] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:39:19.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:19.662] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25f7623]
[10:39:26.593] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:26.593] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c4288f5] was not registered for synchronization because synchronization is not active
[10:39:26.595] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [651148647, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:26.595] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:39:26.596] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:39:26.601] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:26.602] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c4288f5]
[10:39:26.603] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:26.603] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20334ed6] was not registered for synchronization because synchronization is not active
[10:39:26.604] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [174689583, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:26.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:39:26.606] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:39:26.607] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:26.608] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20334ed6]
[10:39:47.554] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:47.554] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@422cfcd4] was not registered for synchronization because synchronization is not active
[10:39:47.556] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [986877118, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:47.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:39:47.557] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:39:47.560] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:47.561] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@422cfcd4]
[10:39:47.562] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:39:47.562] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511573c0] was not registered for synchronization because synchronization is not active
[10:39:47.563] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1711115274, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:39:47.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:39:47.564] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:39:47.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:39:47.566] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@511573c0]
[10:40:17.649] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:17.650] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e9f3b9d] was not registered for synchronization because synchronization is not active
[10:40:17.652] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [930752242, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:17.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:40:17.653] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:40:17.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:17.659] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e9f3b9d]
[10:40:17.660] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:17.660] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88d78b6] was not registered for synchronization because synchronization is not active
[10:40:17.661] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1631328910, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:17.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:40:17.662] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:40:17.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:17.667] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88d78b6]
[10:40:38.723] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:38.723] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121e1641] was not registered for synchronization because synchronization is not active
[10:40:38.725] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [944069222, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:38.725] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:40:38.726] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:40:38.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:38.730] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121e1641]
[10:40:38.730] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:38.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0079ac] was not registered for synchronization because synchronization is not active
[10:40:38.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1298157941, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:38.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:40:38.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:40:38.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:38.737] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c0079ac]
[10:40:51.202] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:51.202] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62dc0686] was not registered for synchronization because synchronization is not active
[10:40:51.204] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1870787544, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:51.204] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:40:51.205] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:40:51.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:51.209] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62dc0686]
[10:40:51.210] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:40:51.210] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1184856d] was not registered for synchronization because synchronization is not active
[10:40:51.211] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1797207196, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:40:51.211] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:40:51.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:40:51.213] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:40:51.214] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1184856d]
[10:41:07.527] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:41:07.528] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e40a8] was not registered for synchronization because synchronization is not active
[10:41:07.529] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2120549885, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:41:07.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:41:07.531] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:41:07.535] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:41:07.535] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@416e40a8]
[10:41:07.536] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:41:07.536] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1715957] was not registered for synchronization because synchronization is not active
[10:41:07.537] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [787010880, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:41:07.538] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:41:07.538] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:41:07.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:41:07.541] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1715957]
[10:41:34.410] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:41:34.410] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2585345] was not registered for synchronization because synchronization is not active
[10:41:34.412] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1409200642, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:41:34.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:41:34.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:41:34.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:41:34.418] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2585345]
[10:41:34.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:41:34.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c728310] was not registered for synchronization because synchronization is not active
[10:41:34.419] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1572387535, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:41:34.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:41:34.423] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:41:34.426] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:41:34.427] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c728310]
[10:42:03.418] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:42:03.418] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a53356] was not registered for synchronization because synchronization is not active
[10:42:03.421] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [681902084, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:42:03.421] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:42:03.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:42:03.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:42:03.428] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a53356]
[10:42:03.429] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:42:03.429] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73f8a6a7] was not registered for synchronization because synchronization is not active
[10:42:03.430] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [612824142, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:42:03.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:42:03.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:42:03.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:42:03.434] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73f8a6a7]
[10:42:16.290] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:42:16.290] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65dbac50] was not registered for synchronization because synchronization is not active
[10:42:16.292] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1746414, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:42:16.292] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:42:16.293] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:42:16.297] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:42:16.298] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65dbac50]
[10:42:16.299] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:42:16.299] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12517a80] was not registered for synchronization because synchronization is not active
[10:42:16.301] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1711804020, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:42:16.301] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:42:16.302] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:42:16.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:42:16.304] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12517a80]
[10:43:58.043] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:43:58.044] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a45dbb3] was not registered for synchronization because synchronization is not active
[10:43:58.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [414436202, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:43:58.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:43:58.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:43:58.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:43:58.050] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a45dbb3]
[10:43:58.050] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:43:58.050] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1931c9c3] was not registered for synchronization because synchronization is not active
[10:43:58.052] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [443348336, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:43:58.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:43:58.053] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:43:58.055] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:43:58.055] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1931c9c3]
[10:44:15.425] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:44:15.425] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31368394] was not registered for synchronization because synchronization is not active
[10:44:15.426] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1790051263, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:44:15.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:44:15.427] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:44:15.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:44:15.432] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31368394]
[10:44:15.432] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:44:15.432] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12eee0da] was not registered for synchronization because synchronization is not active
[10:44:15.434] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1797555574, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:44:15.434] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:44:15.435] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:44:15.437] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:44:15.437] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12eee0da]
[10:45:01.776] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:45:01.777] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7164928e] was not registered for synchronization because synchronization is not active
[10:45:01.778] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [157688205, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:45:01.778] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:45:01.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:45:01.783] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:45:01.784] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7164928e]
[10:45:01.784] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:45:01.785] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41595928] was not registered for synchronization because synchronization is not active
[10:45:01.786] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1812676684, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:45:01.786] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:45:01.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:45:01.788] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:45:01.790] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41595928]
[10:45:55.435] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:45:55.435] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45b14e5f] was not registered for synchronization because synchronization is not active
[10:45:55.437] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [183036482, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:45:55.437] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:45:55.438] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:45:55.441] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:45:55.442] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45b14e5f]
[10:45:55.442] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:45:55.442] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b335118] was not registered for synchronization because synchronization is not active
[10:45:55.444] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1852997342, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:45:55.444] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:45:55.445] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:45:55.446] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:45:55.447] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b335118]
[10:46:16.411] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:16.411] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc50ffc] was not registered for synchronization because synchronization is not active
[10:46:16.413] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1385796912, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:16.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:46:16.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:46:16.418] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:16.418] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bc50ffc]
[10:46:16.419] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:46:16.419] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d62a9b4] was not registered for synchronization because synchronization is not active
[10:46:16.421] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [504487545, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:46:16.421] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:46:16.421] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:46:16.423] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:46:16.424] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d62a9b4]
[10:47:53.113] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:47:53.113] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed24602] was not registered for synchronization because synchronization is not active
[10:47:53.116] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [828689453, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:47:53.116] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:47:53.117] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:47:53.121] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:47:53.122] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ed24602]
[10:47:53.122] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:47:53.122] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@611deae2] was not registered for synchronization because synchronization is not active
[10:47:53.123] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1120630903, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:47:53.123] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:47:53.124] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:47:53.126] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:47:53.127] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@611deae2]
[10:49:41.523] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:49:41.523] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@373e2468] was not registered for synchronization because synchronization is not active
[10:49:41.525] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1011696770, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:49:41.525] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:49:41.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:49:41.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:49:41.531] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@373e2468]
[10:49:41.532] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:49:41.532] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@134e9960] was not registered for synchronization because synchronization is not active
[10:49:41.533] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1637757067, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:49:41.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:49:41.534] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:49:41.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:49:41.536] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@134e9960]
[10:50:58.729] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:50:58.730] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba9f3dd] was not registered for synchronization because synchronization is not active
[10:50:58.731] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [407089030, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:50:58.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[10:50:58.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[10:50:58.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:50:58.736] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ba9f3dd]
[10:50:58.737] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[10:50:58.738] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117ea188] was not registered for synchronization because synchronization is not active
[10:50:58.739] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [762309613, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[10:50:58.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[10:50:58.740] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[10:50:58.742] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[10:50:58.743] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@117ea188]
[11:55:43.005] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.005] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab9dadd] was not registered for synchronization because synchronization is not active
[11:55:43.012] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2135732848, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.012] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND pw = ? 
[11:55:43.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String), aef5b8d5d04ade2101e8e1313e341cc5edcd4eea481d08449684224c656cfb8531b3ca59eb001e6c19abd676c0bca7d2c29f4403e2c9827251d867bad0e2db33(String)
[11:55:43.017] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:43.018] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ab9dadd]
[11:55:43.022] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.022] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@102cf979] was not registered for synchronization because synchronization is not active
[11:55:43.024] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [657582219, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:55:43.025] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[11:55:43.029] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:43.030] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@102cf979]
[11:55:43.030] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.030] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2634492b] was not registered for synchronization because synchronization is not active
[11:55:43.031] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1810016581, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:43.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:43.062] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:43.063] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2634492b]
[11:55:43.467] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.467] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef69b22] was not registered for synchronization because synchronization is not active
[11:55:43.469] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1294386783, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:55:43.470] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:55:43.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:43.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef69b22]
[11:55:43.473] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.473] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45da427] was not registered for synchronization because synchronization is not active
[11:55:43.475] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [346458760, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:55:43.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:55:43.484] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:55:43.485] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45da427]
[11:55:43.485] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:43.485] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50374021] was not registered for synchronization because synchronization is not active
[11:55:43.488] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [289587560, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:43.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:55:43.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:55:43.537] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:55:43.538] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50374021]
[11:55:56.706] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:56.707] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b588337] was not registered for synchronization because synchronization is not active
[11:55:56.708] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1789438051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:56.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:55:56.709] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[11:55:56.713] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:56.713] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b588337]
[11:55:56.714] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:55:56.714] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f568719] was not registered for synchronization because synchronization is not active
[11:55:56.718] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [8262865, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:55:56.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:55:56.718] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:55:56.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:55:56.721] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f568719]
[11:59:09.694] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:09.694] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad5bad8] was not registered for synchronization because synchronization is not active
[11:59:09.696] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [22730163, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:09.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[11:59:09.697] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[11:59:09.700] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:09.701] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad5bad8]
[11:59:09.702] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:59:09.702] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@571d36ca] was not registered for synchronization because synchronization is not active
[11:59:09.703] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1191215761, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:59:09.703] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:59:09.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[11:59:09.706] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:59:09.706] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@571d36ca]
[12:04:46.405] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:46.405] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ecc60f] was not registered for synchronization because synchronization is not active
[12:04:46.407] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1288634048, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:46.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:04:46.408] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:04:46.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:46.412] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30ecc60f]
[12:04:46.412] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:04:46.412] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b3cd0] was not registered for synchronization because synchronization is not active
[12:04:46.413] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2013474318, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:04:46.413] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:04:46.414] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:04:46.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:04:46.416] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@488b3cd0]
[12:05:08.484] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:08.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6971] was not registered for synchronization because synchronization is not active
[12:05:08.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1508058059, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:08.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:05:08.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:05:08.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:08.490] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e5b6971]
[12:05:08.491] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:08.491] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fcf70b7] was not registered for synchronization because synchronization is not active
[12:05:08.492] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1813311534, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:08.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:05:08.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:05:08.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:08.496] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fcf70b7]
[12:05:28.557] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:28.557] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185d4cb4] was not registered for synchronization because synchronization is not active
[12:05:28.559] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1569752925, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:28.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:05:28.560] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:05:28.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:28.564] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@185d4cb4]
[12:05:28.565] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:05:28.565] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a7e411d] was not registered for synchronization because synchronization is not active
[12:05:28.566] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [743242652, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:05:28.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:05:28.567] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:05:28.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:05:28.569] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a7e411d]
[12:06:14.773] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:06:14.773] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb353] was not registered for synchronization because synchronization is not active
[12:06:14.775] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1340699759, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:06:14.775] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:06:14.776] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:06:14.779] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:06:14.780] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb353]
[12:06:14.780] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:06:14.781] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82790fe] was not registered for synchronization because synchronization is not active
[12:06:14.782] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [996530525, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:06:14.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:06:14.782] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:06:14.784] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:06:14.785] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82790fe]
[12:55:40.205] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:40.205] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ceff0e7] was not registered for synchronization because synchronization is not active
[12:55:40.209] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1308510064, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:40.209] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND pw = ? 
[12:55:40.210] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String), 4057cd3be88ed9940fe8339a01ec4fabbac6efab555b6814c55bdb116f574f881996d135e855b75b9769f7f8637877ea74ff87b53306fd37e7b6da2c56820373(String)
[12:55:40.214] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[12:55:40.215] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ceff0e7]
[12:55:44.547] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.548] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132acb88] was not registered for synchronization because synchronization is not active
[12:55:44.550] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [816008917, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[12:55:44.551] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:55:44.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:55:44.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132acb88]
[12:55:44.559] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.560] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d81a0] was not registered for synchronization because synchronization is not active
[12:55:44.561] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [843207574, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.561] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:55:44.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:55:44.565] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:55:44.566] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d81a0]
[12:55:44.566] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.566] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e7677] was not registered for synchronization because synchronization is not active
[12:55:44.568] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1368794966, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:55:44.569] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:55:44.575] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[12:55:44.576] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@270e7677]
[12:55:44.576] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.577] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4586bdc2] was not registered for synchronization because synchronization is not active
[12:55:44.579] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1580087017, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:55:44.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:55:44.666] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:55:44.667] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4586bdc2]
[12:55:44.912] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.912] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257c8491] was not registered for synchronization because synchronization is not active
[12:55:44.914] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [872697808, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.914] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[12:55:44.915] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[12:55:44.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:55:44.918] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@257c8491]
[12:55:44.919] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.919] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7df487] was not registered for synchronization because synchronization is not active
[12:55:44.920] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1162565421, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.920] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[12:55:44.921] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[12:55:44.928] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[12:55:44.929] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7df487]
[12:55:44.929] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:44.930] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37095841] was not registered for synchronization because synchronization is not active
[12:55:44.932] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1267929518, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:44.933] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[12:55:44.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[12:55:44.973] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[12:55:44.974] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37095841]
[12:55:47.260] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:47.261] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4082f5f5] was not registered for synchronization because synchronization is not active
[12:55:47.262] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1852849419, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:47.262] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:55:47.263] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:55:47.267] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:55:47.268] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4082f5f5]
[12:55:47.269] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:55:47.269] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e8d030] was not registered for synchronization because synchronization is not active
[12:55:47.270] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1128360419, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:55:47.270] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:55:47.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:55:47.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:55:47.273] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30e8d030]
[12:56:41.785] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:56:41.785] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12dca808] was not registered for synchronization because synchronization is not active
[12:56:41.787] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [987358102, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:56:41.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:56:41.787] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:56:41.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:56:41.792] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12dca808]
[12:56:41.792] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:56:41.792] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bffb1d6] was not registered for synchronization because synchronization is not active
[12:56:41.794] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1096987425, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:56:41.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:56:41.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:56:41.796] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:56:41.797] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bffb1d6]
[12:59:11.725] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:59:11.726] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7239de3a] was not registered for synchronization because synchronization is not active
[12:59:11.728] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [552962243, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:59:11.728] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[12:59:11.729] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: diving(String)
[12:59:11.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:59:11.733] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7239de3a]
[12:59:11.733] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[12:59:11.733] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c34e091] was not registered for synchronization because synchronization is not active
[12:59:11.734] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [909834822, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[12:59:11.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[12:59:11.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 118(Integer), member(String)
[12:59:11.738] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[12:59:11.739] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c34e091]
[13:25:55.914] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:55.915] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@772dc274] was not registered for synchronization because synchronization is not active
[13:25:55.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1896733441, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:55.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:25:55.917] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:25:55.919] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:25:55.920] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@772dc274]
[13:25:55.920] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:55.920] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e892be] was not registered for synchronization because synchronization is not active
[13:25:55.923] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1141490845, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:55.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:25:55.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:25:55.932] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:25:55.932] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e892be]
[13:25:55.933] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:25:55.933] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646d3dd3] was not registered for synchronization because synchronization is not active
[13:25:55.935] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [899814018, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:25:55.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:25:55.944] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:25:55.972] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:25:55.973] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646d3dd3]
[13:26:41.015] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.016] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c24591] was not registered for synchronization because synchronization is not active
[13:26:41.018] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [235801419, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.019] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:26:41.020] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[13:26:41.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:41.025] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c24591]
[13:26:41.029] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.029] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108365cd] was not registered for synchronization because synchronization is not active
[13:26:41.031] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1792369998, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:26:41.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:26:41.034] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:41.035] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@108365cd]
[13:26:41.035] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bd93e91] was not registered for synchronization because synchronization is not active
[13:26:41.036] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [542589667, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:26:41.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:26:41.043] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:26:41.044] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bd93e91]
[13:26:41.044] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@178c3df0] was not registered for synchronization because synchronization is not active
[13:26:41.047] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1623361582, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:26:41.055] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:26:41.078] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:26:41.079] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@178c3df0]
[13:26:41.345] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.346] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109d2e08] was not registered for synchronization because synchronization is not active
[13:26:41.347] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1573203396, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.347] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:26:41.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:26:41.355] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:41.356] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109d2e08]
[13:26:41.356] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.356] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a94bc7] was not registered for synchronization because synchronization is not active
[13:26:41.357] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [506250620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:26:41.358] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:26:41.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:26:41.365] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52a94bc7]
[13:26:41.365] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:41.365] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a4a6a2] was not registered for synchronization because synchronization is not active
[13:26:41.367] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1293085156, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:41.368] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:26:41.375] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:26:41.398] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:26:41.399] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79a4a6a2]
[13:26:43.940] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:43.941] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ca9337c] was not registered for synchronization because synchronization is not active
[13:26:43.942] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1275447811, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:43.942] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:26:43.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: sjpark(String)
[13:26:43.946] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:43.947] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ca9337c]
[13:26:43.947] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:43.947] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411aa70c] was not registered for synchronization because synchronization is not active
[13:26:43.948] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [295087017, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:43.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[13:26:43.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 130(Integer), member(String)
[13:26:43.951] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:26:43.952] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411aa70c]
[13:26:47.173] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:26:47.176] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2366c20d] was not registered for synchronization because synchronization is not active
[13:26:47.178] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1982428827, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:26:47.178] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:26:47.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[13:26:47.212] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:26:47.304] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2366c20d]
[13:27:11.758] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:27:11.758] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f675312] was not registered for synchronization because synchronization is not active
[13:27:11.760] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1423580681, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:27:11.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:27:11.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[13:27:11.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:27:11.795] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f675312]
[13:34:57.783] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:35:29.914] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:29.924] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb220a] was not registered for synchronization because synchronization is not active
[13:35:30.346] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1811006251, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:30.353] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[13:35:30.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[13:35:30.420] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:30.425] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb220a]
[13:35:30.442] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:30.443] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d747092] was not registered for synchronization because synchronization is not active
[13:35:30.453] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [472080092, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:30.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:35:30.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:35:30.458] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:30.459] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d747092]
[13:35:30.462] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:30.462] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213ddb35] was not registered for synchronization because synchronization is not active
[13:35:30.464] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [147203800, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:30.464] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:35:30.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:35:30.474] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:35:30.475] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@213ddb35]
[13:35:30.476] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:30.476] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7dea67] was not registered for synchronization because synchronization is not active
[13:35:30.489] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [445403249, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:30.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:35:30.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:35:30.604] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:35:30.605] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d7dea67]
[13:35:31.023] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:31.023] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6384929b] was not registered for synchronization because synchronization is not active
[13:35:31.025] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [899613180, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:31.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:35:31.028] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:35:31.031] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:31.032] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6384929b]
[13:35:31.032] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:31.033] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b9cf204] was not registered for synchronization because synchronization is not active
[13:35:31.034] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [46045316, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:31.035] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:35:31.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:35:31.044] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:35:31.045] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b9cf204]
[13:35:31.045] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:31.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6722763f] was not registered for synchronization because synchronization is not active
[13:35:31.049] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [953086217, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:31.049] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:35:31.059] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:35:31.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:35:31.100] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6722763f]
[13:35:33.393] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:33.393] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c04579] was not registered for synchronization because synchronization is not active
[13:35:33.395] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1643990850, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:33.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:35:33.396] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:35:33.399] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:33.400] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c04579]
[13:35:33.401] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:33.401] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a41197] was not registered for synchronization because synchronization is not active
[13:35:33.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1440546229, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:33.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:35:33.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:35:33.410] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:35:33.411] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10a41197]
[13:35:33.412] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:33.412] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6155cc78] was not registered for synchronization because synchronization is not active
[13:35:33.415] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1721535703, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:33.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:35:33.425] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:35:33.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:35:33.454] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6155cc78]
[13:35:36.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:36.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5adfe552] was not registered for synchronization because synchronization is not active
[13:35:36.825] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1808736122, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:36.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:35:36.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[13:35:36.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:36.831] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5adfe552]
[13:35:42.056] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:42.056] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000f674] was not registered for synchronization because synchronization is not active
[13:35:42.057] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1398055695, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:42.058] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:35:42.058] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[13:35:42.097] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:35:42.097] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1000f674]
[13:35:47.799] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:47.799] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42512e] was not registered for synchronization because synchronization is not active
[13:35:47.800] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2122275605, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:47.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:35:47.801] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tes3t@gmail.com(String)
[13:35:47.803] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:35:47.804] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f42512e]
[13:37:21.903] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:21.904] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af0f858] was not registered for synchronization because synchronization is not active
[13:37:21.905] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1744031263, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:21.905] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[13:37:21.906] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[13:37:21.910] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:37:21.910] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5af0f858]
[13:37:25.230] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:25.230] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7831e0fa] was not registered for synchronization because synchronization is not active
[13:37:25.232] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [806377206, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:25.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:37:25.232] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[13:37:25.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[13:37:25.269] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7831e0fa]
[13:37:27.973] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:37:27.973] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7683a5] was not registered for synchronization because synchronization is not active
[13:37:27.975] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [884701397, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:37:27.975] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:37:27.976] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@g1mail.com(String)
[13:37:27.980] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:37:27.981] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d7683a5]
[17:40:14.328] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[17:41:11.491] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:11.501] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@90fe158] was not registered for synchronization because synchronization is not active
[17:41:11.916] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1102845830, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:11.923] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[17:41:11.952] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[17:41:11.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:41:11.996] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@90fe158]
[17:41:12.011] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.011] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32f8c627] was not registered for synchronization because synchronization is not active
[17:41:12.022] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [559256438, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:41:12.024] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:41:12.030] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:41:12.031] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32f8c627]
[17:41:12.033] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.033] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387d3d35] was not registered for synchronization because synchronization is not active
[17:41:12.035] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2114470494, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.036] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:41:12.037] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:41:12.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:41:12.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387d3d35]
[17:41:12.049] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.049] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22099d51] was not registered for synchronization because synchronization is not active
[17:41:12.062] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [376504809, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.063] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:41:12.075] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:41:12.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:41:12.183] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22099d51]
[17:41:12.600] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.601] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203ce938] was not registered for synchronization because synchronization is not active
[17:41:12.603] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1900546027, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.603] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:41:12.605] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:41:12.608] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:41:12.609] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@203ce938]
[17:41:12.610] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.610] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633f2d01] was not registered for synchronization because synchronization is not active
[17:41:12.612] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [639237562, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:41:12.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:41:12.621] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:41:12.622] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@633f2d01]
[17:41:12.622] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:12.622] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@630a80f8] was not registered for synchronization because synchronization is not active
[17:41:12.626] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [986060108, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:12.627] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:41:12.638] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:41:12.675] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:41:12.676] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@630a80f8]
[17:41:15.409] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:15.409] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533ac5e6] was not registered for synchronization because synchronization is not active
[17:41:15.411] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [720435555, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:15.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:41:15.411] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[17:41:15.417] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:41:15.417] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533ac5e6]
[17:41:19.899] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:19.899] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a38ab1] was not registered for synchronization because synchronization is not active
[17:41:19.900] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [716432813, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:19.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[17:41:19.901] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: test@gmail.com(String)
[17:41:19.941] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 22
[17:41:19.942] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a38ab1]
[17:41:28.042] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:41:28.042] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30c8bedd] was not registered for synchronization because synchronization is not active
[17:41:28.044] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1470133090, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:41:28.044] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[17:41:28.045] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: tes1t@gmail.com(String)
[17:41:28.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[17:41:28.048] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30c8bedd]
[17:48:57.560] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:48:57.560] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7dd44f] was not registered for synchronization because synchronization is not active
[17:48:57.562] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [935344737, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:48:57.562] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:48:57.563] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[17:48:57.566] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:48:57.567] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f7dd44f]
[17:51:43.546] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:51:43.546] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16a0ece5] was not registered for synchronization because synchronization is not active
[17:51:43.548] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1406688707, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:51:43.548] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:51:43.549] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: applemint(String)
[17:51:43.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:51:43.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16a0ece5]
[17:52:22.667] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:22.667] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9eeb98] was not registered for synchronization because synchronization is not active
[17:52:22.669] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [138076762, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:22.669] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account AS socialAccount, fileno, masteryn FROM t_member WHERE id = ? AND TRUE 
[17:52:22.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:52:22.674] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:22.675] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e9eeb98]
[17:52:22.679] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:22.680] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dc1872] was not registered for synchronization because synchronization is not active
[17:52:22.682] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [297546960, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:22.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:52:22.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:52:22.685] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:22.686] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58dc1872]
[17:52:22.686] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:22.686] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4381a] was not registered for synchronization because synchronization is not active
[17:52:22.688] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [629591474, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:22.688] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:52:22.689] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:52:22.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:52:22.697] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ac4381a]
[17:52:22.697] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:22.697] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36588ad3] was not registered for synchronization because synchronization is not active
[17:52:22.700] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [822060492, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:22.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:52:22.712] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:52:22.745] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:52:22.747] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36588ad3]
[17:52:23.020] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:23.020] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f113b50] was not registered for synchronization because synchronization is not active
[17:52:23.022] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1185043412, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:23.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:52:23.023] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:52:23.026] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:23.027] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f113b50]
[17:52:23.028] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:23.028] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644fb1ac] was not registered for synchronization because synchronization is not active
[17:52:23.032] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [532199637, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:23.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:52:23.033] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:52:23.040] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:52:23.041] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@644fb1ac]
[17:52:23.042] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:23.042] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f20af30] was not registered for synchronization because synchronization is not active
[17:52:23.045] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1032015891, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:23.046] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:52:23.054] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:52:23.079] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:52:23.079] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f20af30]
[17:52:26.148] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:26.148] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@124cc132] was not registered for synchronization because synchronization is not active
[17:52:26.150] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1903595926, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:26.151] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:52:26.152] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:52:26.154] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:26.155] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@124cc132]
[17:52:26.156] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:26.156] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b22ea8] was not registered for synchronization because synchronization is not active
[17:52:26.157] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1959596790, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:26.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:52:26.158] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:52:26.169] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:52:26.169] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53b22ea8]
[17:52:26.170] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:26.170] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@147721b3] was not registered for synchronization because synchronization is not active
[17:52:26.172] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2065585094, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:26.173] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:52:26.182] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:52:26.208] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:52:26.209] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@147721b3]
[17:52:27.823] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:27.823] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c134f1b] was not registered for synchronization because synchronization is not active
[17:52:27.825] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [722941681, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:27.825] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:52:27.826] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:52:27.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:27.832] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c134f1b]
[17:52:27.832] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:52:27.832] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20699bfd] was not registered for synchronization because synchronization is not active
[17:52:27.833] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1037725887, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:52:27.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:52:27.834] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:52:27.839] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:52:27.840] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20699bfd]
[17:53:31.265] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:31.265] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245db7b1] was not registered for synchronization because synchronization is not active
[17:53:31.267] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [34091901, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:31.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:31.269] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:31.271] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:31.272] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245db7b1]
[17:53:31.272] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:31.272] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51ac679a] was not registered for synchronization because synchronization is not active
[17:53:31.274] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [565852402, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:31.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:31.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:31.282] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:31.283] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51ac679a]
[17:53:31.283] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:31.284] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37411861] was not registered for synchronization because synchronization is not active
[17:53:31.286] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [644417661, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:31.286] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:31.295] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:53:31.321] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:53:31.322] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37411861]
[17:53:34.486] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:34.487] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bea9583] was not registered for synchronization because synchronization is not active
[17:53:34.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [757761733, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:34.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[17:53:34.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[17:53:34.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:34.502] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bea9583]
[17:53:34.502] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:34.502] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f3b5d5] was not registered for synchronization because synchronization is not active
[17:53:34.504] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [249713196, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:34.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[17:53:34.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(String)
[17:53:34.506] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:34.507] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13f3b5d5]
[17:53:34.507] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:34.507] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26270abb] was not registered for synchronization because synchronization is not active
[17:53:34.509] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1632208091, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:34.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[17:53:34.510] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[17:53:34.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[17:53:34.514] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26270abb]
[17:53:34.515] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:34.515] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d20ff5] was not registered for synchronization because synchronization is not active
[17:53:34.516] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1472265705, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:34.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[17:53:34.517] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 43(Integer)
[17:53:34.630] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[17:53:34.631] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8d20ff5]
[17:53:36.412] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:36.412] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150b85bd] was not registered for synchronization because synchronization is not active
[17:53:36.414] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [22943262, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:36.415] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:36.416] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:36.419] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:36.419] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@150b85bd]
[17:53:36.420] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:36.420] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444ef5a5] was not registered for synchronization because synchronization is not active
[17:53:36.421] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [793416656, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:36.421] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:36.422] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:36.428] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:36.429] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444ef5a5]
[17:53:36.429] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:36.429] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b6a4fb] was not registered for synchronization because synchronization is not active
[17:53:36.432] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1249064650, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:36.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:36.441] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:53:36.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:53:36.468] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32b6a4fb]
[17:53:38.664] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:38.665] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5782a97f] was not registered for synchronization because synchronization is not active
[17:53:38.667] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2001569620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:38.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:38.668] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:38.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:38.671] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5782a97f]
[17:53:38.671] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:38.672] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58493048] was not registered for synchronization because synchronization is not active
[17:53:38.673] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [59740126, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:38.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:38.673] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:38.679] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:38.680] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58493048]
[17:53:38.680] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:38.680] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3242f26] was not registered for synchronization because synchronization is not active
[17:53:38.683] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1588040475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:38.683] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:38.692] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 10(Integer), 10(Integer)
[17:53:38.716] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:53:38.717] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3242f26]
[17:53:40.519] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:40.520] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef544c1] was not registered for synchronization because synchronization is not active
[17:53:40.521] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1599519018, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:40.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[17:53:40.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[17:53:40.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:40.527] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef544c1]
[17:53:40.527] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:40.527] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@570fa76c] was not registered for synchronization because synchronization is not active
[17:53:40.528] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1148270930, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:40.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[17:53:40.529] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(String)
[17:53:40.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[17:53:40.531] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@570fa76c]
[17:53:40.531] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:40.531] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aa7465] was not registered for synchronization because synchronization is not active
[17:53:40.532] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [738478195, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:40.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[17:53:40.533] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[17:53:40.536] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[17:53:40.537] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15aa7465]
[17:53:40.537] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:40.537] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7ed778] was not registered for synchronization because synchronization is not active
[17:53:40.538] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [433718791, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:40.539] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[17:53:40.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 23(Integer)
[17:53:40.588] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[17:53:40.588] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d7ed778]
[17:53:42.731] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:42.731] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29efaa70] was not registered for synchronization because synchronization is not active
[17:53:42.732] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1555810455, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:42.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:42.733] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:42.735] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:42.736] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29efaa70]
[17:53:42.736] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:42.736] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc15cff] was not registered for synchronization because synchronization is not active
[17:53:42.738] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1468829457, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:42.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:42.739] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:42.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:42.747] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cc15cff]
[17:53:42.747] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:42.747] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718c5def] was not registered for synchronization because synchronization is not active
[17:53:42.750] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1864852679, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:42.750] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:42.758] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:53:42.783] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:53:42.784] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@718c5def]
[17:53:44.065] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:44.066] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e04788] was not registered for synchronization because synchronization is not active
[17:53:44.067] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1281330184, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:44.067] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:44.068] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:44.070] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:44.071] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69e04788]
[17:53:44.071] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:44.071] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380c2cfa] was not registered for synchronization because synchronization is not active
[17:53:44.073] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [429840246, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:44.073] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:44.074] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:44.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:44.081] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380c2cfa]
[17:53:44.081] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:44.081] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c804d9] was not registered for synchronization because synchronization is not active
[17:53:44.082] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [378132678, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:44.082] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:44.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 20(Integer), 10(Integer)
[17:53:44.099] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:44.099] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c804d9]
[17:53:45.833] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:45.834] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c0d187b] was not registered for synchronization because synchronization is not active
[17:53:45.835] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1048447318, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:45.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:53:45.836] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:53:45.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:53:45.839] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c0d187b]
[17:53:45.840] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:45.840] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18dcd100] was not registered for synchronization because synchronization is not active
[17:53:45.841] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [790665051, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:45.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:53:45.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:53:45.848] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:53:45.849] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18dcd100]
[17:53:45.849] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:53:45.849] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ebfcf2] was not registered for synchronization because synchronization is not active
[17:53:45.851] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [110153117, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:53:45.852] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:53:45.860] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:53:45.885] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:53:45.886] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ebfcf2]
[17:55:50.667] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:50.667] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2f56df] was not registered for synchronization because synchronization is not active
[17:55:50.669] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1105790539, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:50.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:55:50.670] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:55:50.674] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:55:50.674] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2f56df]
[17:55:50.675] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:50.675] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b0667d] was not registered for synchronization because synchronization is not active
[17:55:50.676] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [541370543, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:50.676] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:55:50.677] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:55:50.682] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:55:50.683] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b0667d]
[17:55:50.684] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:50.684] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@372c1099] was not registered for synchronization because synchronization is not active
[17:55:50.685] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1812517115, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:50.686] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:55:50.693] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 50(Integer)
[17:55:50.741] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:55:50.741] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@372c1099]
[17:55:54.649] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:54.650] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a57a648] was not registered for synchronization because synchronization is not active
[17:55:54.651] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [854823829, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:54.652] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:55:54.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:55:54.656] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:55:54.657] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a57a648]
[17:55:54.657] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:54.657] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63002743] was not registered for synchronization because synchronization is not active
[17:55:54.659] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [312959017, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:54.659] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:55:54.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:55:54.667] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:55:54.667] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63002743]
[17:55:54.668] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:54.668] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a2564b] was not registered for synchronization because synchronization is not active
[17:55:54.670] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [712911170, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:54.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:55:54.678] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 20(Integer)
[17:55:54.750] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 20
[17:55:54.751] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a2564b]
[17:55:57.489] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:57.490] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86cac52] was not registered for synchronization because synchronization is not active
[17:55:57.491] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [151539979, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:57.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:55:57.492] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:55:57.495] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:55:57.495] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@86cac52]
[17:55:57.496] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:57.496] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a86686] was not registered for synchronization because synchronization is not active
[17:55:57.497] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [7243898, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:57.497] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:55:57.498] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:55:57.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:55:57.505] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57a86686]
[17:55:57.505] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:55:57.506] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f09aed] was not registered for synchronization because synchronization is not active
[17:55:57.508] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2114538333, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:55:57.508] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:55:57.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:55:57.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:55:57.540] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f09aed]
[17:56:00.247] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:00.247] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559ad6a3] was not registered for synchronization because synchronization is not active
[17:56:00.248] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1535767174, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:00.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:56:00.249] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:56:00.253] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:00.254] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559ad6a3]
[17:56:00.254] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:00.254] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edb1315] was not registered for synchronization because synchronization is not active
[17:56:00.255] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2126244017, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:00.255] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:56:00.256] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:56:00.258] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:00.259] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@edb1315]
[17:56:29.605] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:29.608] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7affc4b1] was not registered for synchronization because synchronization is not active
[17:56:29.610] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2078092718, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:29.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:56:29.611] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:56:29.613] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:29.613] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7affc4b1]
[17:56:29.613] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:29.614] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3870327d] was not registered for synchronization because synchronization is not active
[17:56:29.615] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1378976864, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:29.615] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:56:29.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:56:29.622] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:56:29.622] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3870327d]
[17:56:29.623] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:29.623] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ae60eb] was not registered for synchronization because synchronization is not active
[17:56:29.625] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1522297097, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:29.625] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:56:29.632] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:56:29.657] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:56:29.658] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62ae60eb]
[17:56:49.743] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:49.744] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b77a83b] was not registered for synchronization because synchronization is not active
[17:56:49.746] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [382123387, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:49.746] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:56:49.747] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:56:49.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:49.750] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b77a83b]
[17:56:49.750] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:49.750] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11defecf] was not registered for synchronization because synchronization is not active
[17:56:49.752] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [133545026, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:49.752] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:56:49.752] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:56:49.759] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:56:49.759] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11defecf]
[17:56:49.760] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:49.760] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b917ae5] was not registered for synchronization because synchronization is not active
[17:56:49.762] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2010435950, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:49.762] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:56:49.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:56:49.794] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:56:49.794] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b917ae5]
[17:56:51.808] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:51.808] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27e5c81] was not registered for synchronization because synchronization is not active
[17:56:51.818] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [459183305, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:51.818] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[17:56:51.819] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[17:56:51.822] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:51.823] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27e5c81]
[17:56:53.646] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:53.646] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb9b67d] was not registered for synchronization because synchronization is not active
[17:56:53.647] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [721194926, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:53.648] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[17:56:53.649] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[17:56:53.651] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:56:53.651] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cb9b67d]
[17:56:53.652] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:53.652] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4f743f] was not registered for synchronization because synchronization is not active
[17:56:53.653] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [91701922, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:53.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[17:56:53.654] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[17:56:53.661] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[17:56:53.661] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b4f743f]
[17:56:53.662] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:56:53.662] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24161af4] was not registered for synchronization because synchronization is not active
[17:56:53.664] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [840656767, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:56:53.664] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[17:56:53.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[17:56:53.694] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[17:56:53.694] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24161af4]
[17:57:17.607] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:17.608] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10d7a51] was not registered for synchronization because synchronization is not active
[17:57:17.609] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1011523262, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:17.609] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:17.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:17.614] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:17.614] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10d7a51]
[17:57:17.615] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:17.615] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673b4ead] was not registered for synchronization because synchronization is not active
[17:57:17.616] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [842073607, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:17.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:17.617] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:17.619] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:17.620] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673b4ead]
[17:57:21.046] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:21.046] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4abbd638] was not registered for synchronization because synchronization is not active
[17:57:21.047] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [232323395, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:21.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:21.048] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:21.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:21.052] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4abbd638]
[17:57:21.053] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:21.053] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2454111b] was not registered for synchronization because synchronization is not active
[17:57:21.054] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [714182177, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:21.054] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:21.054] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:21.056] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:21.057] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2454111b]
[17:57:23.373] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:23.373] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387690db] was not registered for synchronization because synchronization is not active
[17:57:23.375] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [638112086, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:23.375] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:23.375] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:23.379] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:23.380] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@387690db]
[17:57:23.380] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:23.380] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4e2311] was not registered for synchronization because synchronization is not active
[17:57:23.382] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1396071428, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:23.382] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:23.383] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:23.384] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:23.385] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c4e2311]
[17:57:25.165] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:25.166] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429bfc92] was not registered for synchronization because synchronization is not active
[17:57:25.167] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1766815952, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:25.167] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:25.168] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:25.171] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:25.172] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@429bfc92]
[17:57:25.172] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:25.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9fd22] was not registered for synchronization because synchronization is not active
[17:57:25.174] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1284688481, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:25.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:25.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:25.176] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:25.177] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32d9fd22]
[17:57:26.859] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:26.860] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4594c569] was not registered for synchronization because synchronization is not active
[17:57:26.862] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1637697260, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:26.862] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:26.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:26.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:26.871] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4594c569]
[17:57:26.871] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:26.872] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73bb0ab1] was not registered for synchronization because synchronization is not active
[17:57:26.874] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [444336620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:26.874] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:26.875] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:26.876] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:26.877] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73bb0ab1]
[17:57:27.540] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:27.541] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c825546] was not registered for synchronization because synchronization is not active
[17:57:27.542] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [435878789, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:27.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:27.543] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:27.549] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:27.550] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c825546]
[17:57:27.551] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:27.551] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b165491] was not registered for synchronization because synchronization is not active
[17:57:27.552] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [424691975, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:27.553] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:27.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:27.556] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:27.556] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b165491]
[17:57:27.963] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:27.964] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@606a860f] was not registered for synchronization because synchronization is not active
[17:57:27.965] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [437863219, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:27.965] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:27.966] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:27.969] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:27.969] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@606a860f]
[17:57:27.970] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:27.970] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16abd684] was not registered for synchronization because synchronization is not active
[17:57:27.971] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [774780474, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:27.971] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:27.972] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:27.973] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:27.974] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16abd684]
[17:57:28.188] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.188] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ec2c489] was not registered for synchronization because synchronization is not active
[17:57:28.189] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [417955705, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.189] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:28.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:28.195] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.196] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ec2c489]
[17:57:28.197] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.197] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e67c002] was not registered for synchronization because synchronization is not active
[17:57:28.198] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2121500994, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.198] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:28.199] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:28.201] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.201] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e67c002]
[17:57:28.452] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.453] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356b4d65] was not registered for synchronization because synchronization is not active
[17:57:28.454] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [493630232, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.454] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:28.455] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:28.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.463] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@356b4d65]
[17:57:28.464] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.464] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31c2a52c] was not registered for synchronization because synchronization is not active
[17:57:28.465] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [453559231, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:28.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:28.469] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.469] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31c2a52c]
[17:57:28.881] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.882] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67140990] was not registered for synchronization because synchronization is not active
[17:57:28.884] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1910808163, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.884] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:28.885] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:28.889] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.889] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67140990]
[17:57:28.890] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:28.890] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12014b85] was not registered for synchronization because synchronization is not active
[17:57:28.891] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [238195106, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:28.891] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:28.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:28.894] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:28.894] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12014b85]
[17:57:29.330] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:29.331] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2262be2d] was not registered for synchronization because synchronization is not active
[17:57:29.332] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1385334482, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:29.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:29.333] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:29.337] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:29.337] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2262be2d]
[17:57:29.338] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:29.338] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64e7f2dd] was not registered for synchronization because synchronization is not active
[17:57:29.339] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1172883652, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:29.339] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:29.340] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:29.342] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:29.343] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64e7f2dd]
[17:57:29.758] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:29.759] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2772e2c2] was not registered for synchronization because synchronization is not active
[17:57:29.760] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2144081526, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:29.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:29.761] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:29.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:29.766] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2772e2c2]
[17:57:29.767] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:29.767] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36cd6ccd] was not registered for synchronization because synchronization is not active
[17:57:29.768] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1519386841, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:29.768] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:29.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:29.770] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:29.771] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36cd6ccd]
[17:57:36.476] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:36.477] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c9e0e] was not registered for synchronization because synchronization is not active
[17:57:36.478] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [281394614, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:36.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[17:57:36.479] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[17:57:36.482] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:36.483] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77c9e0e]
[17:57:36.483] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[17:57:36.484] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118cc6b2] was not registered for synchronization because synchronization is not active
[17:57:36.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1753068707, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[17:57:36.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[17:57:36.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[17:57:36.490] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[17:57:36.491] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@118cc6b2]
