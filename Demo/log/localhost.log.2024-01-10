[11:22:05.080] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:22:36.606] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:22:36.617] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0240f] was not registered for synchronization because synchronization is not active
[11:22:37.007] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [144061794, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:22:37.016] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[11:22:37.047] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:22:37.088] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:22:37.094] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57c0240f]
[11:32:41.412] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:41.412] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a19192] was not registered for synchronization because synchronization is not active
[11:32:41.453] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1550928145, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:41.454] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:32:41.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:32:41.460] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:32:41.461] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42a19192]
[11:32:41.462] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:41.463] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4777cc14] was not registered for synchronization because synchronization is not active
[11:32:41.464] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1435247604, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:41.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:32:41.467] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:32:41.476] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:32:41.477] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4777cc14]
[11:32:41.477] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:41.477] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557c1eb7] was not registered for synchronization because synchronization is not active
[11:32:41.489] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [761404293, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:41.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:32:41.501] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:32:41.590] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:32:41.591] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@557c1eb7]
[11:32:46.065] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:46.066] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78409851] was not registered for synchronization because synchronization is not active
[11:32:46.069] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1340495356, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:46.069] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:32:46.071] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:32:46.076] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:32:46.077] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78409851]
[11:32:46.078] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:46.078] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a73633] was not registered for synchronization because synchronization is not active
[11:32:46.080] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1632365717, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:46.080] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:32:46.081] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:32:46.089] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:32:46.090] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20a73633]
[11:32:46.090] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:46.090] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ffad6c5] was not registered for synchronization because synchronization is not active
[11:32:46.095] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1078224907, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:46.095] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:32:46.105] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:32:46.138] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:32:46.139] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ffad6c5]
[11:32:48.701] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:48.702] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41b5f577] was not registered for synchronization because synchronization is not active
[11:32:48.704] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [598566930, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:48.704] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:32:48.705] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:32:48.708] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:32:48.709] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41b5f577]
[11:32:48.709] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:48.709] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7200a6] was not registered for synchronization because synchronization is not active
[11:32:48.710] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1784298741, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:48.711] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:32:48.712] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:32:48.720] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:32:48.721] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f7200a6]
[11:32:48.721] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:32:48.721] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@870ca08] was not registered for synchronization because synchronization is not active
[11:32:48.724] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [511772369, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:32:48.724] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:32:48.734] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:32:48.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:32:48.768] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@870ca08]
[11:34:33.932] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:34:33.933] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47135d9] was not registered for synchronization because synchronization is not active
[11:34:33.935] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2088217077, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:34:33.936] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:34:33.937] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:34:33.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:34:33.941] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47135d9]
[11:34:33.941] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:34:33.941] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24574a28] was not registered for synchronization because synchronization is not active
[11:34:33.942] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1594372091, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:34:33.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:34:33.943] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:34:33.951] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:34:33.952] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24574a28]
[11:34:33.952] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:34:33.952] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16789f4b] was not registered for synchronization because synchronization is not active
[11:34:33.955] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1417244749, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:34:33.956] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:34:33.964] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:34:33.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:34:33.992] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16789f4b]
[11:34:58.570] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:34:58.570] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef4a3ca] was not registered for synchronization because synchronization is not active
[11:34:58.572] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1912072468, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:34:58.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[11:34:58.572] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[11:34:58.577] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:34:58.577] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ef4a3ca]
[11:34:58.578] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:34:58.578] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ed9a616] was not registered for synchronization because synchronization is not active
[11:34:58.579] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2031978441, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:34:58.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:34:58.580] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:34:58.585] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:34:58.586] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ed9a616]
[11:35:01.478] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:01.478] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2de57941] was not registered for synchronization because synchronization is not active
[11:35:01.480] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [3488518, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:01.480] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:35:01.482] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:35:01.485] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:35:01.487] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2de57941]
[11:35:01.487] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:01.487] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6ac35c] was not registered for synchronization because synchronization is not active
[11:35:01.488] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1006245965, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:01.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:35:01.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:35:01.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:35:01.501] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e6ac35c]
[11:35:01.501] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:01.501] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be9e170] was not registered for synchronization because synchronization is not active
[11:35:01.504] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1186270692, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:01.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:35:01.514] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:35:01.542] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:35:01.542] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2be9e170]
[11:35:02.892] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:02.893] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25719930] was not registered for synchronization because synchronization is not active
[11:35:02.894] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1432479938, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:02.894] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[11:35:02.895] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[11:35:02.900] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:35:02.900] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25719930]
[11:35:02.901] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:02.901] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e751e3] was not registered for synchronization because synchronization is not active
[11:35:02.902] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [82083984, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:02.903] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:35:02.904] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:35:02.905] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:35:02.906] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32e751e3]
[11:35:13.264] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:13.265] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcd64e6] was not registered for synchronization because synchronization is not active
[11:35:13.275] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [857845920, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:13.275] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[11:35:13.276] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[11:35:13.281] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:35:13.282] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcd64e6]
[11:35:16.836] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:35:16.836] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa32435] was not registered for synchronization because synchronization is not active
[11:35:16.838] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [304952077, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:35:16.838] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[11:35:16.840] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[11:35:16.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:35:16.843] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa32435]
[11:40:26.192] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:26.192] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47716480] was not registered for synchronization because synchronization is not active
[11:40:26.194] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [187244744, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:26.194] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[11:40:26.195] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[11:40:26.197] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:40:26.198] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47716480]
[11:40:50.248] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:50.248] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1517ee] was not registered for synchronization because synchronization is not active
[11:40:50.250] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1822799345, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:50.251] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND content LIKE CONCAT('%', ?, '%') ) AS cnt FROM t_comment WHERE id = ? AND content LIKE CONCAT('%', ?, '%') 
[11:40:50.252] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), (String), panda(String), (String)
[11:40:50.254] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:40:50.255] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f1517ee]
[11:40:53.238] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:53.238] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121135e2] was not registered for synchronization because synchronization is not active
[11:40:53.239] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1175270060, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:53.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_comment_reply tcr WHERE id = ? AND pid IN (SELECT seq FROM t_comment WHERE id = ? AND boardseq = ?) ) AS cnt FROM t_comment WHERE id = ? AND boardseq = ? 
[11:40:53.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String), panda(String), (String), panda(String), (String)
[11:40:53.395] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:40:53.397] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121135e2]
[11:40:55.301] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:55.301] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323267b1] was not registered for synchronization because synchronization is not active
[11:40:55.303] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1563162967, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:55.304] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:40:55.305] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:40:55.307] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:40:55.308] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@323267b1]
[11:40:55.308] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:55.308] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d8a7c7] was not registered for synchronization because synchronization is not active
[11:40:55.309] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1430738907, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:55.309] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:40:55.310] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:40:55.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:40:55.317] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34d8a7c7]
[11:40:55.318] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:40:55.318] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a1c182] was not registered for synchronization because synchronization is not active
[11:40:55.320] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1291273996, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:40:55.321] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:40:55.331] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:40:55.359] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:40:55.360] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75a1c182]
[11:41:00.493] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:00.493] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7675df25] was not registered for synchronization because synchronization is not active
[11:41:00.504] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [215370905, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:00.504] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, author, title, content, attachfile, pid, regdate FROM t_board WHERE seq = ? 
[11:41:00.505] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[11:41:00.507] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:00.508] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7675df25]
[11:41:00.509] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:00.509] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a56f14c] was not registered for synchronization because synchronization is not active
[11:41:00.510] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [746628368, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:00.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE fileparent = ? AND delyn = 'N' AND category = 'board' 
[11:41:00.511] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(String)
[11:41:00.513] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:00.513] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a56f14c]
[11:41:00.514] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:00.514] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c156a6] was not registered for synchronization because synchronization is not active
[11:41:00.515] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [333969996, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:00.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT cmt.*, (SELECT nickname FROM t_member WHERE id = cmt.id) as nickname FROM (SELECT seq, id, pw, content, boardseq, replyboardseq, pid, depth, re_order, regdate, modifydate FROM t_comment WHERE boardseq = ? ORDER BY seq desc) cmt; 
[11:41:00.516] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[11:41:00.523] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 2
[11:41:00.524] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79c156a6]
[11:41:00.525] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:00.525] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409638f] was not registered for synchronization because synchronization is not active
[11:41:00.526] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1064361868, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:00.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = ? 
[11:41:00.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 38(Integer)
[11:41:00.638] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[11:41:00.639] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@409638f]
[11:41:02.310] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:02.310] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26900766] was not registered for synchronization because synchronization is not active
[11:41:02.311] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [78515803, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:02.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:41:02.312] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:41:02.315] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:02.315] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26900766]
[11:41:02.316] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:02.316] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e3152e] was not registered for synchronization because synchronization is not active
[11:41:02.317] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1118247560, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:02.317] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:41:02.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:41:02.325] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:41:02.325] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e3152e]
[11:41:02.326] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:02.326] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36dfa086] was not registered for synchronization because synchronization is not active
[11:41:02.328] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [315511652, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:02.329] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:41:02.337] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:41:02.364] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:41:02.365] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36dfa086]
[11:41:09.278] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:09.278] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60746a35] was not registered for synchronization because synchronization is not active
[11:41:09.280] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [37214639, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:09.280] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:41:09.281] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:41:09.283] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:09.285] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60746a35]
[11:41:09.285] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:09.285] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d076a06] was not registered for synchronization because synchronization is not active
[11:41:09.286] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [3684661, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:09.287] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:41:09.287] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:41:09.294] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:41:09.296] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d076a06]
[11:41:09.296] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:09.296] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4966d0b8] was not registered for synchronization because synchronization is not active
[11:41:09.298] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [496466420, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:09.298] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:41:09.306] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:41:09.332] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:41:09.332] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4966d0b8]
[11:41:11.339] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:11.340] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@282e197a] was not registered for synchronization because synchronization is not active
[11:41:11.341] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [118796521, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:11.342] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[11:41:11.343] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: panda(String)
[11:41:11.346] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:11.347] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@282e197a]
[11:41:11.348] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:11.348] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f573fbc] was not registered for synchronization because synchronization is not active
[11:41:11.349] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1452666495, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:11.349] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT sysname FROM t_filemeta WHERE delyn = 'N' AND seq = ? AND category = ? 
[11:41:11.350] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 131(Integer), member(String)
[11:41:11.352] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:11.352] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f573fbc]
[11:41:15.171] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:15.172] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28fa9788] was not registered for synchronization because synchronization is not active
[11:41:15.173] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [300547908, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:15.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:41:15.174] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:41:15.180] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:41:15.181] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28fa9788]
[11:41:15.181] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:15.181] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec3017d] was not registered for synchronization because synchronization is not active
[11:41:15.184] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1335821384, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:15.184] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:41:15.185] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:41:15.192] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:41:15.193] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ec3017d]
[11:41:15.194] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:41:15.194] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322f3fa0] was not registered for synchronization because synchronization is not active
[11:41:15.196] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1152990668, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:41:15.196] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:41:15.203] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:41:15.230] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:41:15.231] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322f3fa0]
[11:42:23.620] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:42:23.620] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c3170] was not registered for synchronization because synchronization is not active
[11:42:23.623] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [958605620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:42:23.623] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[11:42:23.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:42:23.630] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:42:23.632] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c3c3170]
[11:43:53.562] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:44:14.109] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:14.121] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2edb5930] was not registered for synchronization because synchronization is not active
[11:44:14.493] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [135860443, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:14.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[11:44:14.530] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:44:14.568] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:14.573] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2edb5930]
[11:44:25.422] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:25.423] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8c981c] was not registered for synchronization because synchronization is not active
[11:44:25.474] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2107963583, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:25.475] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:44:25.478] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:44:25.481] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:44:25.484] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b8c981c]
[11:44:25.485] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:25.486] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@648c27a] was not registered for synchronization because synchronization is not active
[11:44:25.487] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1538014878, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:25.488] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:44:25.489] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:44:25.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:44:25.501] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@648c27a]
[11:44:25.502] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:44:25.502] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db1664] was not registered for synchronization because synchronization is not active
[11:44:25.514] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [880040627, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:44:25.515] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:44:25.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:44:25.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:44:25.617] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29db1664]
[11:44:54.408] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:50:02.183] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:50:32.007] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:50:32.020] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b03209a] was not registered for synchronization because synchronization is not active
[11:50:32.397] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1285165620, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:50:32.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[11:50:32.433] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:50:32.471] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:50:32.477] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b03209a]
[11:52:30.097] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:52:30.098] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857639a] was not registered for synchronization because synchronization is not active
[11:52:30.138] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [641598714, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:52:30.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:52:30.141] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:52:30.149] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:52:30.150] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857639a]
[11:52:30.152] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:52:30.152] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4779c674] was not registered for synchronization because synchronization is not active
[11:52:30.154] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1063229384, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:52:30.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:52:30.157] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:52:30.166] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:52:30.167] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4779c674]
[11:52:30.167] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:52:30.167] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50d52bfe] was not registered for synchronization because synchronization is not active
[11:52:30.178] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [991996694, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:52:30.179] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:52:30.190] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:52:30.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:52:30.319] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50d52bfe]
[11:53:09.433] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[11:53:37.679] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:37.692] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521c018c] was not registered for synchronization because synchronization is not active
[11:53:38.070] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1257198496, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:38.077] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[11:53:38.107] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@dialoguespace.co.kr(String)
[11:53:38.146] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:53:38.150] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@521c018c]
[11:53:38.237] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:38.238] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@788af176] was not registered for synchronization because synchronization is not active
[11:53:38.315] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1928414789, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:38.316] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[11:53:38.318] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[11:53:38.326] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[11:53:38.328] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@788af176]
[11:53:38.331] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:38.332] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2ef720] was not registered for synchronization because synchronization is not active
[11:53:38.334] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [615762819, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:38.334] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[11:53:38.335] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[11:53:38.347] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[11:53:38.349] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b2ef720]
[11:53:38.349] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[11:53:38.349] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ad4776] was not registered for synchronization because synchronization is not active
[11:53:38.362] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1270084507, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[11:53:38.363] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[11:53:38.376] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[11:53:38.509] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[11:53:38.510] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23ad4776]
[13:11:10.044] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:11:10.045] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ff7645] was not registered for synchronization because synchronization is not active
[13:11:10.050] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [692304286, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:11:10.051] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:11:10.052] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:11:10.056] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:11:10.057] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ff7645]
[13:11:46.691] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:11:46.692] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35eae980] was not registered for synchronization because synchronization is not active
[13:11:46.694] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2030575070, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:11:46.695] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:11:46.696] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:11:46.699] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:11:46.701] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35eae980]
[13:13:06.606] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:13:06.607] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31c42c1b] was not registered for synchronization because synchronization is not active
[13:13:06.610] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1643836216, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:13:06.610] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:13:06.612] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:13:06.616] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:13:06.617] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31c42c1b]
[13:14:11.441] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:14:30.460] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:14:30.472] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18bc7378] was not registered for synchronization because synchronization is not active
[13:14:30.856] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1761473433, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:14:30.863] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:14:30.896] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:14:30.925] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:14:30.931] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18bc7378]
[13:20:03.002] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:23:22.032] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:22.043] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15cacc2b] was not registered for synchronization because synchronization is not active
[13:23:22.440] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [821707870, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:22.449] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:23:22.481] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:23:22.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 0
[13:23:22.518] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15cacc2b]
[13:23:23.657] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:23.657] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b91e20b] was not registered for synchronization because synchronization is not active
[13:23:23.660] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [187150351, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:23.660] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: INSERT INTO T_MEMBER(id, pw, name, nickname, address, email, phone, status, regdate) VALUES(?, ?, ?, ?, ?, ?, ?, 1, sysdate()) 
[13:23:23.671] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String), null, SEUNGWAN NA(String), SEUNGWAN NA(String), Required to edit address(String), Required to edit email(String), 01012345678(String)
[13:23:23.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==    Updates: 1
[13:23:23.720] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b91e20b]
[13:23:23.770] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:23.771] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b78cb9a] was not registered for synchronization because synchronization is not active
[13:23:23.812] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [123029203, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:23.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:23:23.814] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:23:23.823] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:23.824] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b78cb9a]
[13:23:23.827] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:23.827] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c5254] was not registered for synchronization because synchronization is not active
[13:23:23.830] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1672250019, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:23.830] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:23:23.831] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:23:23.841] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:23:23.842] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@360c5254]
[13:23:23.844] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:23.844] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681fc7a4] was not registered for synchronization because synchronization is not active
[13:23:23.856] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1493562484, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:23.856] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:23:23.869] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:23:23.996] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:23:23.997] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@681fc7a4]
[13:23:43.697] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:23:43.698] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a78d37e] was not registered for synchronization because synchronization is not active
[13:23:43.699] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [247989383, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:23:43.700] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:23:43.700] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:23:43.706] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:23:43.706] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a78d37e]
[13:30:53.458] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:31:37.176] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:37.188] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@333fe598] was not registered for synchronization because synchronization is not active
[13:31:37.553] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1295541787, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:37.560] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:31:37.589] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:31:37.624] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:31:37.628] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@333fe598]
[13:31:37.695] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:37.696] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b08269c] was not registered for synchronization because synchronization is not active
[13:31:37.749] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [341262086, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:37.749] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:31:37.751] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:31:37.760] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:31:37.761] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b08269c]
[13:31:37.763] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:37.764] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e4c05] was not registered for synchronization because synchronization is not active
[13:31:37.765] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [421635086, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:37.766] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:31:37.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:31:37.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:31:37.782] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e4c05]
[13:31:37.783] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:37.783] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e8b90] was not registered for synchronization because synchronization is not active
[13:31:37.797] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [653245380, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:37.798] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:31:37.812] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:31:37.949] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:31:37.949] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c4e8b90]
[13:31:50.129] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:50.129] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73232781] was not registered for synchronization because synchronization is not active
[13:31:50.132] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [184859775, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:50.132] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:31:50.134] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:31:50.136] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:31:50.137] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73232781]
[13:31:50.137] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:50.138] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4d6b01] was not registered for synchronization because synchronization is not active
[13:31:50.139] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1130836043, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:50.139] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:31:50.140] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:31:50.150] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:31:50.151] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4d6b01]
[13:31:50.151] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:31:50.151] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c9558c] was not registered for synchronization because synchronization is not active
[13:31:50.154] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [987085795, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:31:50.155] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:31:50.165] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:31:50.194] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:31:50.195] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60c9558c]
[13:33:29.676] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:33:29.677] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63502df1] was not registered for synchronization because synchronization is not active
[13:33:29.678] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1500443300, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:33:29.678] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:33:29.679] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:33:29.684] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:33:29.685] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63502df1]
[13:33:38.087] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:33:38.087] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c04579] was not registered for synchronization because synchronization is not active
[13:33:38.090] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1643990850, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:33:38.090] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:33:38.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:33:38.095] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:33:38.095] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20c04579]
[13:34:48.835] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:35:09.142] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:09.153] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbe4a8e] was not registered for synchronization because synchronization is not active
[13:35:09.522] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [494548757, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:09.528] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:35:09.559] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:35:09.593] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:09.598] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbe4a8e]
[13:35:09.716] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:09.717] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a35f3d] was not registered for synchronization because synchronization is not active
[13:35:09.767] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [575151845, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:09.767] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:35:09.769] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:35:09.772] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:09.773] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a35f3d]
[13:35:09.776] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:09.776] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1151f753] was not registered for synchronization because synchronization is not active
[13:35:09.779] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1403922403, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:09.780] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:35:09.781] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:35:09.791] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:35:09.792] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1151f753]
[13:35:09.793] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:09.793] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b62651f] was not registered for synchronization because synchronization is not active
[13:35:09.804] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1429067550, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:09.805] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:35:09.816] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:35:09.859] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:35:09.860] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b62651f]
[13:35:13.885] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:35:13.885] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7401a686] was not registered for synchronization because synchronization is not active
[13:35:13.887] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [217768332, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:35:13.887] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:35:13.888] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:35:13.892] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:35:13.893] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7401a686]
[13:36:41.712] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:36:41.713] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513038f6] was not registered for synchronization because synchronization is not active
[13:36:41.714] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [655716580, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:36:41.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:36:41.715] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:36:41.719] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:36:41.720] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@513038f6]
[13:39:41.462] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:39:41.463] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735fb8cb] was not registered for synchronization because synchronization is not active
[13:39:41.465] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1716608885, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:39:41.465] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:39:41.466] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:39:41.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:39:41.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@735fb8cb]
[13:39:58.982] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:39:58.983] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bc8a384] was not registered for synchronization because synchronization is not active
[13:39:58.985] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1112475263, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:39:58.985] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:39:58.986] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:39:58.991] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:39:58.992] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bc8a384]
[13:40:09.398] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:40:09.399] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d88baf5] was not registered for synchronization because synchronization is not active
[13:40:09.402] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [894996894, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:40:09.402] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:40:09.403] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:40:09.407] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:40:09.408] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d88baf5]
[13:40:31.270] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:40:31.270] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24d2a93d] was not registered for synchronization because synchronization is not active
[13:40:31.272] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1710203654, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:40:31.273] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:40:31.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:40:31.278] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:40:31.279] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@24d2a93d]
[13:47:58.543] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:52:16.855] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:16.866] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322f312] was not registered for synchronization because synchronization is not active
[13:52:17.234] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [209729967, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:17.240] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, fileno, masteryn FROM t_member WHERE email = ? 
[13:52:17.268] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:52:17.303] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:17.308] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322f312]
[13:52:17.426] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:17.426] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e570d0] was not registered for synchronization because synchronization is not active
[13:52:17.484] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1006430973, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:17.484] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:52:17.486] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:52:17.493] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:17.494] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e570d0]
[13:52:17.497] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:17.497] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@921185a] was not registered for synchronization because synchronization is not active
[13:52:17.499] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [846560636, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:17.500] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:52:17.502] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:52:17.512] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:52:17.512] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@921185a]
[13:52:17.513] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:17.513] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e75756e] was not registered for synchronization because synchronization is not active
[13:52:17.525] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1850477619, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:17.526] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:52:17.538] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:52:17.586] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:52:17.601] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e75756e]
[13:52:24.084] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:24.084] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e55efdd] was not registered for synchronization because synchronization is not active
[13:52:24.086] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2056066603, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:24.086] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:52:24.087] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:52:24.091] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:24.092] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e55efdd]
[13:52:41.728] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:52:41.728] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6274f01] was not registered for synchronization because synchronization is not active
[13:52:41.731] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [109972248, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:52:41.731] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status FROM T_MEMBER WHERE id = ? 
[13:52:41.732] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:52:41.736] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:52:41.737] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6274f01]
[13:56:26.574] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:57:10.422] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:10.432] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eab41e5] was not registered for synchronization because synchronization is not active
[13:57:10.800] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1591175027, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:10.806] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:57:10.837] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:57:10.875] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:57:10.880] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3eab41e5]
[13:57:10.944] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:10.945] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fe2bb7] was not registered for synchronization because synchronization is not active
[13:57:11.007] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1148270930, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:11.008] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:57:11.009] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:57:11.013] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:57:11.016] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fe2bb7]
[13:57:11.018] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:11.019] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a220789] was not registered for synchronization because synchronization is not active
[13:57:11.021] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1862913430, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:11.021] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:57:11.022] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:57:11.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:57:11.034] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a220789]
[13:57:11.034] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:11.035] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc5d0c7] was not registered for synchronization because synchronization is not active
[13:57:11.050] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [690338993, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:11.051] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:57:11.064] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:57:11.109] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:57:11.110] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fc5d0c7]
[13:57:13.428] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:13.429] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793b8360] was not registered for synchronization because synchronization is not active
[13:57:13.430] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [21169821, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:13.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account FROM T_MEMBER WHERE id = ? 
[13:57:13.431] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:57:13.436] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:57:13.437] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793b8360]
[13:57:23.519] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:57:23.519] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d149e13] was not registered for synchronization because synchronization is not active
[13:57:23.521] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1211901298, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:57:23.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account FROM T_MEMBER WHERE id = ? 
[13:57:23.522] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:57:23.527] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:57:23.528] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d149e13]
[13:58:16.282] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[13:58:32.849] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:32.859] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@487f38ed] was not registered for synchronization because synchronization is not active
[13:58:33.237] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [275101992, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:33.243] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[13:58:33.274] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[13:58:33.313] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:58:33.318] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@487f38ed]
[13:58:33.387] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:33.388] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d1d24aa] was not registered for synchronization because synchronization is not active
[13:58:33.450] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [914779475, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:33.450] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[13:58:33.453] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[13:58:33.456] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:58:33.457] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d1d24aa]
[13:58:33.459] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:33.459] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5469a] was not registered for synchronization because synchronization is not active
[13:58:33.461] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1555088507, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:33.462] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[13:58:33.463] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[13:58:33.472] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[13:58:33.473] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5469a]
[13:58:33.474] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:33.474] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741c5e6e] was not registered for synchronization because synchronization is not active
[13:58:33.486] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [989389466, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:33.487] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[13:58:33.499] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[13:58:33.540] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[13:58:33.540] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741c5e6e]
[13:58:35.547] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:35.547] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1498867] was not registered for synchronization because synchronization is not active
[13:58:35.549] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2043124972, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:35.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account FROM T_MEMBER WHERE id = ? 
[13:58:35.550] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:58:35.554] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:58:35.555] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1498867]
[13:58:40.024] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[13:58:40.025] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e4c945] was not registered for synchronization because synchronization is not active
[13:58:40.026] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [31048574, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[13:58:40.027] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account FROM T_MEMBER WHERE id = ? 
[13:58:40.028] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[13:58:40.032] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[13:58:40.032] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40e4c945]
[14:04:47.054] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[14:08:08.808] DEBUG LogFactory.setImplementation(LogFactory.java:135) - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[14:08:21.208] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:08:21.222] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a9f1ea] was not registered for synchronization because synchronization is not active
[14:08:21.620] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1985961112, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:08:21.626] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, name, nickname, address, email, phone, status, social_account, fileno, masteryn FROM t_member WHERE email = ? 
[14:08:21.658] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: ratelamsh@gmail.com(String)
[14:08:21.701] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:08:21.707] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30a9f1ea]
[14:08:21.777] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:08:21.778] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb8e0f8] was not registered for synchronization because synchronization is not active
[14:08:21.841] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [2138250663, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:08:21.842] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT count(*) + (SELECT count(*) FROM t_board_reply WHERE pid IN (SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') )) FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') 
[14:08:21.843] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String), free(String), (String)
[14:08:21.848] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:08:21.850] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fb8e0f8]
[14:08:21.852] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:08:21.852] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56cba75d] was not registered for synchronization because synchronization is not active
[14:08:21.854] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1664249511, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:08:21.855] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq FROM t_board WHERE category = ? AND title LIKE CONCAT('%', ?, '%') order by regdate desc 
[14:08:21.856] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), (String)
[14:08:21.866] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 21
[14:08:21.867] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56cba75d]
[14:08:21.867] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:08:21.868] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cb6dcd1] was not registered for synchronization because synchronization is not active
[14:08:21.881] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1828421042, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:08:21.881] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board WHERE category = ? AND seq = ? UNION SELECT seq, category, (SELECT nickname FROM t_member WHERE id = author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile FROM t_board_reply WHERE category = ? AND pid = ? LIMIT ?, ? 
[14:08:21.893] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: free(String), 48(Integer), free(String), 48(Integer), free(String), 47(Integer), free(String), 47(Integer), free(String), 46(Integer), free(String), 46(Integer), free(String), 45(Integer), free(String), 45(Integer), free(String), 44(Integer), free(String), 44(Integer), free(String), 43(Integer), free(String), 43(Integer), free(String), 41(Integer), free(String), 41(Integer), free(String), 40(Integer), free(String), 40(Integer), free(String), 39(Integer), free(String), 39(Integer), free(String), 38(Integer), free(String), 38(Integer), free(String), 37(Integer), free(String), 37(Integer), free(String), 36(Integer), free(String), 36(Integer), free(String), 35(Integer), free(String), 35(Integer), free(String), 34(Integer), free(String), 34(Integer), free(String), 33(Integer), free(String), 33(Integer), free(String), 32(Integer), free(String), 32(Integer), free(String), 29(Integer), free(String), 29(Integer), free(String), 27(Integer), free(String), 27(Integer), free(String), 26(Integer), free(String), 26(Integer), free(String), 23(Integer), free(String), 23(Integer), free(String), 14(Integer), free(String), 14(Integer), 0(Integer), 10(Integer)
[14:08:21.993] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 10
[14:08:21.994] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cb6dcd1]
[14:08:40.931] DEBUG SqlSessionUtils.getSqlSession(SqlSessionUtils.java:97) - Creating a new SqlSession
[14:08:40.931] DEBUG SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:148) - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dd4ec4a] was not registered for synchronization because synchronization is not active
[14:08:40.933] DEBUG SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87) - JDBC Connection [1438811570, URL=jdbc:mysql://127.0.0.1:3306/demo_schema?useUnicode=true&characterEncoding=utf8&useSSL=false, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring
[14:08:40.933] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==>  Preparing: SELECT id, pw, nickname, name, address, email, phone, fileno, status, social_account AS socialAccount FROM T_MEMBER WHERE id = ? 
[14:08:40.934] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - ==> Parameters: 410fg2f087(String)
[14:08:40.940] DEBUG BaseJdbcLogger.debug(BaseJdbcLogger.java:159) - <==      Total: 1
[14:08:40.941] DEBUG SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:191) - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dd4ec4a]
