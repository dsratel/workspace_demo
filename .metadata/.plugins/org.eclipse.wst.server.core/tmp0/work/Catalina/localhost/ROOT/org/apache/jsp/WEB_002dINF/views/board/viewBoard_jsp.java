/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-11-15 10:09:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class viewBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/workspace_demo/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Demo/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1696575023656L));
    _jspx_dependants.put("jar:file:/D:/workspace_demo/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Demo/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<link rel=\"shortcut icon\" href=\"#\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/resources/css/bootstrap/bootstrap.min.css\">\r\n");
      out.write("	<script src=\"/resources/js/jquery/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("	<title>view board page</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row\">	<!-- 카테고리 -->\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("			<div class=\"col-1 tab\">\r\n");
      out.write("				<span>카테고리</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 cont\">\r\n");
      out.write("				<span id=\"category\"></span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">	<!-- 제목 -->\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("			<div class=\"col-1 tab\">\r\n");
      out.write("				<span>제목</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 cont\">\r\n");
      out.write("				<span name=\"title\" id=\"title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">	<!-- 작성자 -->\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("			<div class=\"col-1 tab\">\r\n");
      out.write("				<span>작성자</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 cont\">\r\n");
      out.write("				<span id=\"author\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.author}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">	<!-- 내용 -->\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("			<div class=\"col-1 tab\">\r\n");
      out.write("				<span>내용</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 cont\">\r\n");
      out.write("				<textarea id=\"content\" readonly>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">	<!-- 첨부파일 -->\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("			<div class=\"col-1 tab\">\r\n");
      out.write("				<span>첨부파일</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 cont imgDiv\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("			\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\" id=\"cmtDiv\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		<div class=\"row\" id=\"btnDiv\">\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	    		<button type=\"button\" class=\"btn btn-secondary\" id=\"listBtn\">글 목록으로</button>				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function(){\r\n");
      out.write("			// css\r\n");
      out.write("			$(\"div.tab, div.cont\").css({\"border\" : \"1px solid black\", \"padding\" : \"5px\"});\r\n");
      out.write("			$(\"#btnDiv button\").css({\"display\" : \"inline-block\", \"width\" : \"20%\", \"margin\": \"5px\"});\r\n");
      out.write("			$(\"#btnDiv, .tab, .imgDiv\").css(\"text-align\", \"center\");	\r\n");
      out.write("			$(\".container\").css(\"margin-top\", \"20px\");\r\n");
      out.write("			$(\"#content\").css({\"width\" : \"100%\", \"height\" : \"300px\", \"border\" : \"none\", \"resize\" : \"none\"});\r\n");
      out.write("			$(\"textarea\").css(\"outline\", \"none\");\r\n");
      out.write("			$(\".img-thumbnail\").css({\"width\":\"200px\", \"height\":\"200px\"});\r\n");
      out.write("			$(\".cmtList\").css({\"border\":\"1px black solid\", \"margin\":\"5px\"});\r\n");
      out.write("			$(\".cmtIdDiv\").css({\"margin-bottom\":\"10px\"});\r\n");
      out.write("			$(\"#cmtForm\").css({\"margin-top\":\"10px\"});\r\n");
      out.write("			$(\"#cmtContent\").css({\"margin-top\":\"10px\", \"width\":\"80%\", \"height\":\"100px\", \"resize\":\"none\"});\r\n");
      out.write("			$(\".delCmtBtn\").css({\"margin-top\":\"5px\", \"margin-right\":\"5px\", \"margin-bottom\":\"5px\"});\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			// 초기 세팅\r\n");
      out.write("			//// 카테고리\r\n");
      out.write("			switch(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.category}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\") {\r\n");
      out.write("				case 'free' :\r\n");
      out.write("					$(\"#category\").text(\"자유게시판\");\r\n");
      out.write("				break;\r\n");
      out.write("				case 'notice' :\r\n");
      out.write("					$(\"#category\").text(\"공지사항\");\r\n");
      out.write("				break;\r\n");
      out.write("			}\r\n");
      out.write("				\r\n");
      out.write("			// 글 수정하기\r\n");
      out.write("			$(\"#editBtn\").click(function(){\r\n");
      out.write("				window.location.replace(\"/board/editArticle?seq=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			// 글 삭제하기\r\n");
      out.write("			$(\"#delBtn\").click(function(){\r\n");
      out.write("				window.location.replace(\"/board/delArticle?seq=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&attachfile=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.attachfile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			// 글 목록으로\r\n");
      out.write("			$(\"#listBtn\").click(function(){\r\n");
      out.write("				window.location.replace(\"/board/toList\");\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			// 댓글 작성\r\n");
      out.write("			$(\"#commentBtn\").on(\"click\", function() {\r\n");
      out.write("				// cmtForm 초기화(pw, content)\r\n");
      out.write("				cmtFormReset();\r\n");
      out.write("				\r\n");
      out.write("				var cmtPw = $(\"#cmtPw\").val().trim();\r\n");
      out.write("				var cmtContent = $(\"#cmtContent\").val().trim();\r\n");
      out.write("								\r\n");
      out.write("				validCheck(cmtPw, cmtContent);\r\n");
      out.write("				$(\"form[name='cmtForm'] input[name='pw']\").val(cmtPw);\r\n");
      out.write("				$(\"form[name='cmtForm'] input[name='content']\").val(cmtContent);\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type: \"post\",\r\n");
      out.write("					url: \"/comment/write.do\",\r\n");
      out.write("					data: $(\"#cmtForm\").serialize(),\r\n");
      out.write("					success: function(data){\r\n");
      out.write("						$(\"#cmtPw, #cmtContent\").val(\"\");\r\n");
      out.write("						\r\n");
      out.write("						var appendStr = \"\";\r\n");
      out.write("						for(var i=0; i < data.length; i++) {\r\n");
      out.write("							appendStr = appendStr + \"<div class='row cmtList'>\"\r\n");
      out.write("													+ \"<div class='row cmtIdDiv'>\"\r\n");
      out.write("													+	 \"<span>\" + data[i].nickname + \"</span>\"\r\n");
      out.write("													+ \"</div>\"\r\n");
      out.write("													+ \"<div class='row cmtContDiv'>\"\r\n");
      out.write("													+	\"<div class='col-8 cmtContent'>\"\r\n");
      out.write("													+		\"<span>\" + data[i].content + \"</span>\"\r\n");
      out.write("													+		\"<input type='hidden' seq='\" + data[i].seq + \"'>\"\r\n");
      out.write("													+		\"<input type='hidden' boardseq='\" + data[i].boardseq + \"'>\"\r\n");
      out.write("													+	\"</div>\"\r\n");
      out.write("													+	\"<div class='col-2 cmtTime'>\"\r\n");
      out.write("													+		\"<span>\" + cvtDateFormat(data[i].regdate) + \"</span>\"\r\n");
      out.write("													+	\"</div>\"\r\n");
      out.write("													+	\"<div class='col-2 cmtBtnDiv'>\"\r\n");
      out.write("													+		\"<button type='button' class='btn btn-info' onclick='replyCmtForm(\"\r\n");
      out.write("													+			data[i].seq + \", \" + data[i].rootseq + \", this)'>답글</button><br/>\";\r\n");
      out.write("							\r\n");
      out.write("													if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == data[i].id) {\r\n");
      out.write("														appendStr =	appendStr +	\"<button type='button' class='btn btn-danger delCmtBtn' \"\r\n");
      out.write("																+ 		\"onclick='delPwPop(\" + data[i].seq +\", \" + data[i].boardseq +\")'>삭제</button>\"\r\n");
      out.write("																+		\"<button type='button' class='btn btn-success editCmtBtn' \"\r\n");
      out.write("																+		\"onclick='editCmt(\" + data[i].seq + \", \" + data[i].boardseq + \", this)'>수정</button>\";\r\n");
      out.write("													}\r\n");
      out.write("							appendStr = appendStr + \"</div> </div> </div>\";\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("						console.log(appendStr);\r\n");
      out.write("						\r\n");
      out.write("						$(\"#cmtListDiv\").children().remove();\r\n");
      out.write("						$(\"#cmtListDiv\").append(appendStr);\r\n");
      out.write("						$(\".cmtList\").css({\"border\":\"1px black solid\", \"margin\":\"5px\"});\r\n");
      out.write("						$(\".cmtIdDiv\").css({\"margin-bottom\":\"10px\"});\r\n");
      out.write("						$(\"input[name='pw'], #cmtContent\").val(\"\");\r\n");
      out.write("						$(\"button.delCmtBtn\").css({\"margin-top\":\"5px\", \"margin-right\":\"5px\", \"margin-bottom\":\"5px\"});\r\n");
      out.write("					},\r\n");
      out.write("					error: function(data){\r\n");
      out.write("						alert(\"ajax 실패\");\r\n");
      out.write("						console.log(data);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			/**********************************************************************************************************************/\r\n");
      out.write("			var cl = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmtList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("			console.log(cl);\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			/**********************************************************************************************************************/\r\n");
      out.write("			\r\n");
      out.write("		})	// function end\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 작성 후 리로드\r\n");
      out.write("		function commentReload() {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"post\",\r\n");
      out.write("				url: \"/comment/list\",\r\n");
      out.write("				data: {\r\n");
      out.write("					\"boardseq\" : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"	\r\n");
      out.write("				},\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					commentRoad(data);\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data) {\r\n");
      out.write("					alert(\"리로드 실패\");\r\n");
      out.write("					console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 날짜 변환\r\n");
      out.write("		function cvtDateFormat(date) {\r\n");
      out.write("			date = new Date(date);\r\n");
      out.write("			return date.getFullYear() + '년 ' + (date.getUTCMonth()%12+1) + '월 ' + date.getUTCDate() + '일 <br>'\r\n");
      out.write("					+ date.getHours() + '시 ' + date.getMinutes() + '분 ' + date.getSeconds() + '초';\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 삭제\r\n");
      out.write("		function delCmt(cmtSeq) {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"get\",\r\n");
      out.write("				url: \"/comment/delete.do\",\r\n");
      out.write("				data: {\"seq\" : cmtSeq},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					commentReload();\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					alert(\"댓글 삭제에 실패하였습니다.\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 비밀번호 체크\r\n");
      out.write("		function delPwCheck (pw) {\r\n");
      out.write("			var cmtSeq		= $(\"form[name='cmtForm'] input[name='seq']\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(pw.length < 4) {\r\n");
      out.write("				alert(\"비밀번호를 4자리 이상 입력해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"post\",\r\n");
      out.write("				url: \"/comment/passwordCheck\",\r\n");
      out.write("				data:\r\n");
      out.write("				{\r\n");
      out.write("					\"seq\" : cmtSeq\r\n");
      out.write("					, \"pw\" : pw\r\n");
      out.write("				},\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					if(data > 0 && confirm(\"정말 댓글을 삭제하시겠습니까?\")) {\r\n");
      out.write("						delCmt(cmtSeq);					\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data) {\r\n");
      out.write("					alert(\"댓글 비밀번호 확인 오류\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 비밀번호 팝업\r\n");
      out.write("		function delPwPop(cmtSeq) {\r\n");
      out.write("			window.open(\"/comment/toPwCheck\", \"댓글 비밀번호 입력\", \"width=700px,height=200px,left=610,top=340,scrollbars=yes\");\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='seq']\").val(cmtSeq);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 수정 버튼\r\n");
      out.write("		function editCmt(cmtSeq, boardSeq, el) {\r\n");
      out.write("/* 			if($(\"#onEditing\").val() == 1) {\r\n");
      out.write("				alert(\"현재 수정 중인 댓글이 있습니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			$(\"#onEditing\").val(1); */\r\n");
      out.write("			\r\n");
      out.write("			var ce = $(el).parents(\"div.cmtList\").clone();\r\n");
      out.write("			ce.find(\"div.cmtContent\").append(\"<textarea type='text' id='editCmtContent_\" + ce.find(\"div.cmtContent input[seq]\").attr(\"seq\")\r\n");
      out.write("												+ \"' style='width:100%; resize:none;'>\"\r\n");
      out.write("												+ ce.find(\"div.cmtContent\").children()[0].innerText + \"</textarea>\");\r\n");
      out.write("			/* ce.find(\"div.cmtContDiv\").after(\"<form name='editCmtForm' action='/comment/editProc.do' type='post' id='editCmtForm'>\"\r\n");
      out.write("											+ \"<input type='hidden' name='seq' value='\" + ce.find(\"div.cmtContent input[seq]\").attr(\"seq\") + \"'>\"\r\n");
      out.write("											+ \"<input type='hidden' name='content'>\"\r\n");
      out.write("											+ \"</form>\"); */\r\n");
      out.write("			ce.find(\"div.cmtContent\").children().first().remove();\r\n");
      out.write("			ce.find(\"div.cmtBtnDiv\").children().remove();\r\n");
      out.write("			ce.find(\"div.cmtBtnDiv\").append(\"<button type='button' class='btn btn-primary editProcBtn' onclick='editCmtProc(\"\r\n");
      out.write("											+ ce.find(\"div.cmtContent input[seq]\").attr(\"seq\") + \")'>수정</button>\");\r\n");
      out.write("			ce.find(\"div.cmtBtnDiv\").append(\"<button type='button' class='btn btn-secondary' onclick='cancelEditCmt(this)'>취소</button>\");\r\n");
      out.write("			$(el).parents(\"div.cmtList\").after(ce).hide();\r\n");
      out.write("			$(\"button.editProcBtn\").css({\"margin-top\":\"5px\", \"margin-right\":\"5px\", \"margin-bottom\":\"5px\"});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 수정 요청\r\n");
      out.write("		function editCmtProc(cmtSeq) {\r\n");
      out.write("			// cmtForm 초기화\r\n");
      out.write("			cmtFormReset();\r\n");
      out.write("			\r\n");
      out.write("			// 수정한 댓글 내용 form에 담기\r\n");
      out.write("			//$(\"#editCmtForm input[name='content']\").val($(\"#editCmtContent\").val());\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='seq']\").val(cmtSeq);\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='content']\").val($(\"#editCmtContent_\" + cmtSeq).val());\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"get\",\r\n");
      out.write("				url: \"/comment/editProc.do\",\r\n");
      out.write("				data: $(\"#editCmtForm\").serialize(),\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					commentReload();\r\n");
      out.write("					//$(\"#onEditing\").val(0);	// 수정 완료 후 수정중 플래그 0으로 만들기\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data) {\r\n");
      out.write("					alert(\"댓글 수정 요청 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 수정 취소\r\n");
      out.write("		function cancelEditCmt(el) {\r\n");
      out.write("			$(\"#onEditing\").val(0);\r\n");
      out.write("			$(el).parents(\"div.cmtList\").prev().show();\r\n");
      out.write("			$(el).parents(\"div.cmtList\").remove();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 - 답글\r\n");
      out.write("		function replyCmtForm(cmtSeq, rootSeq, el) {\r\n");
      out.write("			if($(\"#replyDiv\" + cmtSeq).length > 0) return;\r\n");
      out.write("			\r\n");
      out.write("			// 답글 폼 만들기\r\n");
      out.write("			//var formStr = \"<form name='replyCmtForm' action='/comment/replyCmtProc.do' method='post'>\"\r\n");
      out.write("			var formStr = \"<div class='replyDiv' id='replyDiv\" + cmtSeq + \"'>\"\r\n");
      out.write("						+		\"<div class='row'>\"\r\n");
      out.write("						+			\"<div class='col'>	<span>대댓글 비밀번호 : <input type='password' id='replyCmtPw_\" + cmtSeq + \"' maxlength='20'> </span>	</div>\"\r\n");
      out.write("						+		\"</div>\"\r\n");
      out.write("						+		\"<div class='row replyCmtContDiv'>\"\r\n");
      out.write("						+			\"<div class='col-10'>\"\r\n");
      out.write("						+				\"<textarea name='content' id='replyCmtContent_\" + cmtSeq + \"'></textarea>\"\r\n");
      out.write("						+			\"</div>\"\r\n");
      out.write("						+			\"<div class='col-2 replyCmtBtnDiv'>\"\r\n");
      out.write("						+				\"<button type='button' class='btn btn-primary' onclick='replyCmtProc(\" + cmtSeq + \", \" + rootSeq + \")'>대댓글</button>\"\r\n");
      out.write("						+				\"<button type='button' class='btn btn-secondary' onclick='cancelReplyCmt(this)'>취소</button>\"\r\n");
      out.write("						+			\"</div>\"\r\n");
      out.write("						+			\"<div>\"\r\n");
      out.write("						+				\"<input type='hidden' ame='pid' value='\" + cmtSeq +\"'>\"\r\n");
      out.write("						+			\"</div>\"\r\n");
      out.write("						+		\"</div>\"\r\n");
      out.write("						+	\"</div>\";\r\n");
      out.write("						//+ \"</form>\";\r\n");
      out.write("						\r\n");
      out.write("			$(el).parents(\"div.cmtList\").after(formStr);\r\n");
      out.write("			\r\n");
      out.write("			// css\r\n");
      out.write("			$(\"div.replyDiv\").css({\"border\":\"1px solid black\", \"padding\":\"10px\"});\r\n");
      out.write("			$(\"div.replyCmtBtnDiv button:first-child\").css({\"margin-right\":\"5px\"});\r\n");
      out.write("			$(\"div.replyCmtContDiv\").css(\"margin-top\", \"10px\");\r\n");
      out.write("			$(\"#replyCmtContent_\"+cmtSeq).css({\"width\":\"100%\", \"resize\":\"none\"});\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 - 답글 요청\r\n");
      out.write("		function replyCmtProc(pid) {\r\n");
      out.write("			// cmtForm 초기화\r\n");
      out.write("			cmtFormReset();\r\n");
      out.write("			\r\n");
      out.write("			var replyCmtPw = $(\"#replyCmtPw_\" + pid).val().trim();\r\n");
      out.write("			var replyCmtContent = $(\"#replyCmtContent_\" + pid).val().trim();\r\n");
      out.write("			\r\n");
      out.write("			// 유효성 검사\r\n");
      out.write("			validCheck(replyCmtPw, replyCmtContent);\r\n");
      out.write("			\r\n");
      out.write("			// 답글 비밀번호, 내용, pid 수정\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='pw']\").val(replyCmtPw);\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='content']\").val(replyCmtContent);\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='pid']\").val(pid);\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type: \"post\",\r\n");
      out.write("				url: \"/comment/write.do\",\r\n");
      out.write("				data: $(\"#cmtForm\").serialize(),\r\n");
      out.write("				success: function(data) {\r\n");
      out.write("					alert(\"대댓글 요청 성공\");\r\n");
      out.write("					commentReload();\r\n");
      out.write("				},\r\n");
      out.write("				error: function(data) {\r\n");
      out.write("					alert(\"대댓글 요청 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// // cmtForm 초기화(pw, content)\r\n");
      out.write("		function cmtFormReset() {\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='pw'], form[name='cmtForm'] input[name='content']\").val(\"\");\r\n");
      out.write("			$(\"form[name='cmtForm'] input[name='seq'], form[name='cmtForm'] input[name='rootseq'], form[name='cmtForm'] input[name='pid']\").val(0);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 - 답글 창 닫기\r\n");
      out.write("		function cancelReplyCmt(el) {\r\n");
      out.write("			$(el).parents(\"div.replyDiv\").remove();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 유효성 검사\r\n");
      out.write("		function validCheck(cmtPw, cmtContent) {\r\n");
      out.write("			// 유효성 검사\r\n");
      out.write("			//// 댓글 비밀번호(4자리 이상)\r\n");
      out.write("			if(cmtPw.length < 4) {\r\n");
      out.write("				alert(\"댓글 비밀번호를 4자리 이상 입력해주세요.\");\r\n");
      out.write("				return ;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//// 댓글 입력\r\n");
      out.write("			if(cmtContent.length < 1) {\r\n");
      out.write("				alert(\"댓글 내용을 입력해주세요.\");\r\n");
      out.write("				return ;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/viewBoard.jsp(61,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("filePath");
      // /WEB-INF/views/board/viewBoard.jsp(61,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/viewBoard.jsp(61,4) '${files }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${files }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					<img class=\"img-thumbnail\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${filePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/board/viewBoard.jsp(69,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmtList eq 'noComment'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div class=\"col\">\r\n");
          out.write("						<span>해당 글에 작성된 댓글이 없습니다.</span>\r\n");
          out.write("					</div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div class=\"col-1\"></div>\r\n");
          out.write("					<div class=\"col-10 row\" id=\"cmtListDiv\">\r\n");
          out.write("						");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					</div>\r\n");
          out.write("					<div class=\"col-1\"></div>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /WEB-INF/views/board/viewBoard.jsp(77,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("cmt");
      // /WEB-INF/views/board/viewBoard.jsp(77,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/viewBoard.jsp(77,6) '${cmtList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${cmtList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("							<div class=\"row cmtList\">\r\n");
            out.write("								<div class=\"row cmtIdDiv\">\r\n");
            out.write("									<span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write(" 								</div>		\r\n");
            out.write("								<div class=\"row cmtContDiv\">\r\n");
            out.write("									<div class=\"col-8 cmtContent\">\r\n");
            out.write("										<span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("										<input type=\"hidden\" seq=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.seq }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("										<input type=\"hidden\" boardseq=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.boardseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("									</div>\r\n");
            out.write("									<div class=\"col-2 cmtTime\">\r\n");
            out.write("										<span>");
            if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("</span><br/>\r\n");
            out.write("										<span>");
            if (_jspx_meth_fmt_005fformatDate_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("</span>						\r\n");
            out.write("									</div>\r\n");
            out.write("									<div class=\"col-2 cmtBtnDiv\">\r\n");
            out.write("									");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("									");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("							</div>\r\n");
            out.write("						");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/board/viewBoard.jsp(89,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.regdate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/viewBoard.jsp(89,16) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy년 MM월 dd일");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f1_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/board/viewBoard.jsp(90,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.regdate}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/board/viewBoard.jsp(90,16) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f1.setPattern("k시 m분 s초");
      int _jspx_eval_fmt_005fformatDate_005f1 = _jspx_th_fmt_005fformatDate_005f1.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f1);
      _jspx_th_fmt_005fformatDate_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/board/viewBoard.jsp(93,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId ne '' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<button type=\"button\" class=\"btn btn-info\" onclick=\"replyCmtForm(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(',');
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.rootseq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(", this);\">답글</button><br/>									\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/views/board/viewBoard.jsp(96,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId == cmt.id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										<button type=\"button\" class=\"btn btn-danger delCmtBtn\" onclick=\"delPwPop(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(")\">삭제</button>\r\n");
          out.write("										<button type=\"button\" class=\"btn btn-success editCmtBtn\" onclick=\"editCmt(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cmt.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(',');
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(", this)\">수정</button>											\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/board/viewBoard.jsp(109,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId ne '' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<div class=\"row\">	<!-- 댓글 / 회원인 경우에만 작성 가능 -->\r\n");
          out.write("				<div class=\"col-1\"></div>\r\n");
          out.write("				<div class=\"col-10\">\r\n");
          out.write("					<!-- <form name=\"cmtForm\" action=\"/comment/write.do\" method=\"post\" id=\"cmtForm\"> -->\r\n");
          out.write("						<input type=\"text\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" id=\"cmtId\" readonly>\r\n");
          out.write("						<input type=\"password\" placeholder=\"password\" id=\"cmtPw\" maxlength=\"20\">\r\n");
          out.write("						<textarea id=\"cmtContent\"></textarea>\r\n");
          out.write("						<button type=\"button\" id=\"commentBtn\" class=\"btn btn-primary\">댓글작성</button>	\r\n");
          out.write("					<!-- </form> -->				\r\n");
          out.write("<!-- 				<div>\r\n");
          out.write("					<input type=\"hidden\" id=\"delCmtSeq\">\r\n");
          out.write("					<input type=\"hidden\" id=\"delCmtPw\">\r\n");
          out.write("					<input type=\"hidden\" id=\"delCmtBoardseq\">\r\n");
          out.write("					<input type=\"hidden\" id=\"onEditing\">\r\n");
          out.write("				</div> -->\r\n");
          out.write("				</div>\r\n");
          out.write("				<div class=\"col-1\"></div>\r\n");
          out.write("				<form name=\"cmtForm\" method=\"post\" id=\"cmtForm\">\r\n");
          out.write("					<input type=\"hidden\" name=\"id\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("					<input type=\"hidden\" name=\"pw\">\r\n");
          out.write("					<input type=\"hidden\" name=\"content\">\r\n");
          out.write("					<input type=\"hidden\" name=\"boardseq\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("					<input type=\"hidden\" name=\"seq\" value=\"0\">\r\n");
          out.write("					<input type=\"hidden\" name=\"rootseq\" value=\"0\">\r\n");
          out.write("					<input type=\"hidden\" name=\"pid\" value=\"0\">\r\n");
          out.write("				</form>\r\n");
          out.write("			</div>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/board/viewBoard.jsp(140,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId == dto.author}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			    	<button type=\"button\" class=\"btn btn-success\" id=\"editBtn\">글 수정하기</button>\r\n");
          out.write("			    	<button type=\"button\" class=\"btn btn-danger\" id=\"delBtn\">글 삭제하기</button>				\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
