/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2023-10-25 04:52:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/workspace_demo/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Demo/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1696575023656L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/resources/css/bootstrap/bootstrap.min.css\">\r\n");
      out.write("	<script src=\"/resources/js/jquery/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("	<title>member view page</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row\" style=\"margin: 10px;\">\r\n");
      out.write("			<div class=\"col-3\" style=\"border:1px solid\" id=\"rs\">\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-8\" style=\"border:1px solid\">\r\n");
      out.write("				<form action=\"/member/editMember.do\" method=\"post\" name=\"editMemberForm\" id=\"editMemberForm\" enctype=\"multipart/form-data\">\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>프로필 사진</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<img class=\"img-thumbnail\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${filePath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"preview\"/>\r\n");
      out.write("							<input type=\"file\" class=\"form-control\" id=\"inputGroupFile02\" name=\"profilePhoto\" onchange=\"readURL(this)\";>\r\n");
      out.write("							<button type=\"button\" class=\"btn btn-danger\" id=\"delPfPhoto\">프로필 사진 삭제</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>ID</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>비밀번호</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<input type=\"password\" class=\"form-control\" name=\"pw\" value=\"\" placeholder=\"공백인 경우 이전 비밀번호 유지\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>이름</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>닉네임</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"nickname\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.nickname }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>주소</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"address\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.address }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"row\" style=\"padding: 5px 0px 5px\">\r\n");
      out.write("						<div class=\"col-3\">\r\n");
      out.write("							<span>전화번호</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-9\">\r\n");
      out.write("							<select class=\"form-select phone\" id=\"phone1\" onchange=\"changePhone(this)\">\r\n");
      out.write("								<option value=\"010\">010</option>\r\n");
      out.write("								<option value=\"070\">070</option>\r\n");
      out.write("								<option value=\"030\">030</option>\r\n");
      out.write("								<option value=\"050\">050</option>\r\n");
      out.write("								<option value=\"etc\">기타</option>\r\n");
      out.write("							</select>\r\n");
      out.write("							<input type=\"text\" class=\"form-control phone\" id=\"phone4\" maxlength=\"4\">							\r\n");
      out.write("							-\r\n");
      out.write("							<input type=\"text\" class=\"form-control phone\" id=\"phone2\" maxlength=\"4\">\r\n");
      out.write("							-\r\n");
      out.write("							<input type=\"text\" class=\"form-control phone\" id=\"phone3\" maxlength=\"4\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"phone\" id=\"phone\" value=\"\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-1\" style=\"border:1px solid; padding: 2px;\">\r\n");
      out.write("				<button class=\"btn btn-success\" type=\"button\" form=\"editMemberForm\" id=\"save\">수정하기</button>\r\n");
      out.write("				<button class=\"btn btn-dark\" type=\"button\" id=\"showList\">목록출력</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("		// 목록출력\r\n");
      out.write("		$(\"#showList\").click(function(){\r\n");
      out.write("			window.location.replace(\"/member/list\");\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// css\r\n");
      out.write("		//// ID input 태그 색상 변경\r\n");
      out.write("		$(\"input[name='id']\").css({\"background-color\":\"grey\", \"color\":\"white\"});\r\n");
      out.write("		$(\"#preview\").css({\"width\" : \"200px\", \"height\" : \"200px\"});\r\n");
      out.write("		$(\".phone\").css({\"width\" : \"30%\", \"display\" : \"inline\"});\r\n");
      out.write("		$(\"#phone4, #phone\").hide();\r\n");
      out.write("		\r\n");
      out.write("		// 프로필 사진 삭제\r\n");
      out.write("		$(\"#delPfPhoto\").click(function(){\r\n");
      out.write("			alert('프로필 사진 삭제');\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 휴대폰 번호 세팅\r\n");
      out.write("		var phone = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("		var p1 = phone.substring(0, phone.length-8);\r\n");
      out.write("		var p2 = phone.substring(phone.length-8, phone.length-4);\r\n");
      out.write("		var p3 = phone.substring(phone.length-4);\r\n");
      out.write("		\r\n");
      out.write("		$(\"#phone1\").val(p1);\r\n");
      out.write("		$(\"#phone2\").val(p2);\r\n");
      out.write("		$(\"#phone3\").val(p3);		\r\n");
      out.write("		\r\n");
      out.write("		// 수정하기\r\n");
      out.write("		$(\"#save\").on(\"click\", function(){\r\n");
      out.write("			// 유효성 검사\r\n");
      out.write("			//// 1. 비밀번호\r\n");
      out.write("			var testPw = $(\"input[name='pw']\").val();\r\n");
      out.write("			var regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n");
      out.write("			if(testPw.length > 0) {\r\n");
      out.write("				if(testPw.length < 8) {\r\n");
      out.write("					alert(\"비밀번호는 8자리 이상이어야 합니다.\");\r\n");
      out.write("					return;\r\n");
      out.write("				} else {\r\n");
      out.write("					if(!regex.test(testPw)){\r\n");
      out.write("						alert(\"대문자, 소문자, 특수문자, 숫자 각 1개 이상 씩 입력하세요. (8~25자리)\");\r\n");
      out.write("						return;\r\n");
      out.write("					} else {\r\n");
      out.write("						$(\"#pw\").val(testPw);\r\n");
      out.write("					}\r\n");
      out.write("				}				\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//// 2. 이름\r\n");
      out.write("			var testName = $(\"input[name='name']\").val();\r\n");
      out.write("			if(testName.length < 2) {\r\n");
      out.write("				alert(\"이름은 2자리 이상이어야 합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"#name\").val($(\"input[name='name']\").val());\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//// 3. 닉네임\r\n");
      out.write("			var testNickname = $(\"input[name='nickname']\").val();\r\n");
      out.write("			if(testNickname.length < 2) {\r\n");
      out.write("				alert(\"닉네임은 2자리 이상이어야 합니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"#nickname\").val($(\"input[name='nickname']\").val());\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//// 4. 주소\r\n");
      out.write("			var testAddress = $(\"input[name='address']\").val();\r\n");
      out.write("			if(testAddress.length < 1) {\r\n");
      out.write("				alert(\"주소를 입력해주세요.\");\r\n");
      out.write("				return;\r\n");
      out.write("			} else {\r\n");
      out.write("				$(\"#address\").val($(\"input[name='address']\").val());\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			//// 5. 전화번호\r\n");
      out.write("			var regExp = /^[0-9]{4}$/;\r\n");
      out.write("			var testPhone = \"\";\r\n");
      out.write(" 			if(!regExp.test($(\"#phone2\").val()) || $(\"#phone2\").val().length < 4 || !regExp.test($(\"#phone3\").val()) || $(\"#phone3\").val().length < 4) {\r\n");
      out.write("				// 2번째 3번째 번호가 4자리 보다 작을 때 리턴\r\n");
      out.write("				alert(\"전화번호를 확인하세요. 각 칸마다 4자리 확인.\");\r\n");
      out.write("				return ;\r\n");
      out.write("			} else {\r\n");
      out.write("				// 1번째 번호가 기타인 경우\r\n");
      out.write("				regExp = /^[0-9]{3,4}$/;\r\n");
      out.write("				if($(\"#phone1\").val() == \"etc\") {\r\n");
      out.write("					if(!regExp.test($(\"#phone4\").val()) || $(\"#phone4\").val().length < 3) {\r\n");
      out.write("						alert(\"첫 번째 자리 번호를 확인하세요.\");\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					$(\"#phone\").val($(\"#phone4\").val() + $(\"#phone2\").val() + $(\"#phone3\").val());\r\n");
      out.write("				} else {\r\n");
      out.write("					$(\"#phone\").val($(\"#phone1\").val() + $(\"#phone2\").val() + $(\"#phone3\").val());\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			$(\"#editMemberForm\").submit();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("	}); // function() end\r\n");
      out.write("	\r\n");
      out.write("	// 사진 미리보기\r\n");
      out.write("	function readURL(input) {\r\n");
      out.write("		if(input.files && input.files[0]) {\r\n");
      out.write("			var reader = new FileReader();	// FileReader 객체 생성\r\n");
      out.write("			reader.onload = function(e) {	// load 이벤트의 핸들러. 읽기 동작이 성공적으로 완료되었을 때마다 발생.\r\n");
      out.write("				$(\"#preview\").attr(\"src\", e.target.result);\r\n");
      out.write("			};\r\n");
      out.write("			reader.readAsDataURL(input.files[0]);	// <input type=\"file\">의 파일을 url로 읽어들인다. 성공적으로 읽혔다면 위의 .onload를 통해 <img>의 src 속성에 url 주입.\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\"#preview\").attr(\"src\", \"\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 폰 앞자리가 기타인 경우\r\n");
      out.write("	function changePhone(input) {\r\n");
      out.write("		if(input.value == \"etc\") {\r\n");
      out.write("			$(\"#phone4\").show();\r\n");
      out.write("			$(\"#phone1\").css(\"display\", \"block\");\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\"#phone4\").val('');\r\n");
      out.write("			$(\"#phone4\").hide();\r\n");
      out.write("			$(\"#phone1\").css(\"display\", \"inline\");\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
