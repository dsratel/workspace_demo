<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boardMapper">
	<!-- 글 작성 프로세스 -->
	<insert id="writeArticle" parameterType="boardDto">
		INSERT INTO
		<choose>
			<when test="pid > 0">
				t_board_reply(category, author, title, content, attachfile, pid, regdate) VALUES(#{category}, #{author}, #{title}, #{content}, #{attachfile}, #{pid}, sysdate())
			</when>
			<otherwise>
				t_board(category, author, title, content, attachfile, regdate) VALUES(#{category}, #{author}, #{title}, #{content}, #{attachfile}, sysdate())			
			</otherwise>		
		</choose>
	</insert>
	
	<!-- 글 전체 불러오기 -->
	<select id="selectArticle" parameterType="map" resultType="boardDto">
		<trim suffixOverrides="UNION">
			<foreach collection="seqList" item="seq" index="index" separator="UNION">
				SELECT seq, category, (SELECT nickname FROM t_member WHERE id LIKE author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile
				FROM t_board WHERE category LIKE #{category} AND seq = #{seq}
				UNION
				SELECT seq, category, (SELECT nickname FROM t_member WHERE id LIKE author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt, pid, attachfile
				FROM t_board_reply WHERE category LIKE #{category} AND pid = #{seq}
			</foreach>	
		</trim>
		LIMIT #{pagination.startIndex}, #{pagination.pageSize}
	</select>
	
	<!-- <select id="selectArticle" parameterType="map" resultType="boardDto">
		SELECT seq, category, (SELECT nickname FROM t_member WHERE id LIKE author) AS author, title, content, regdate, author as etc, viewcnt, commentcnt
		FROM t_board WHERE category LIKE #{category} AND
		<choose>
			<when test="searchType == 0">
				title LIKE CONCAT('%', #{searchKeyword}, '%')	
			</when>
			<when test="searchType == 1">
				author LIKE (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%'))
			</when>
		</choose>
		order by regdate desc LIMIT #{pagination.startIndex}, #{pagination.pageSize}
	</select> -->
	
	<!-- seq로 게시글 정보 불러오기 -->
	<select id="selArticleBySeq" parameterType="map" resultType="boardDto">
		SELECT seq, category, author, title, content, attachfile, pid, regdate FROM
		<choose>
			<when test="pid > 0">
				t_board_reply
			</when>
			<otherwise>			
				t_board
			</otherwise>
		</choose>
		WHERE seq = #{seq}
	</select>
	
	<!-- 가장 최신 글 seq 불러오기 -->
	<select id="getLatestSeq" parameterType="map" resultType="Integer">
		SELECT max(seq) FROM
		<choose>
			<when test="pid > 0">
				t_board_reply
			</when>
			<otherwise>
				t_board
			</otherwise>
		</choose>
		
		WHERE author LIKE #{author}
	</select>
	
	<!-- 게시글 삭제 -->
	<delete id="delArticle" parameterType="Integer">
		DELETE FROM 
		<choose>
			<when test="pid > 0">
				t_board_reply
			</when>
			<otherwise>
				t_board
			</otherwise>
		</choose>
		WHERE seq = #{seq}
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="editArticle" parameterType="boardDto">
		UPDATE
		<choose>
			<when test="pid > 0">
				t_board_reply
			</when>
			<otherwise>
				t_board
			</otherwise>
		</choose>  
		SET category = #{category}, title = #{title}, content = #{content}, attachfile = #{attachfile} WHERE seq = #{seq}
	</update>
	
	<!-- 조건에 맞는 게시글 개수 -->
	<select id="countList" parameterType="map" resultType="Integer">
		SELECT count(*) + 
			(SELECT count(*) FROM t_board_reply WHERE
				<choose>
					<when test='searchType == 0'>
						title LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
					<when test='searchType == 1'>
						author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%'))
					</when>
				</choose>
			)

		FROM t_board WHERE category LIKE #{category}	AND
		<choose>
			<when test='searchType == 0'>
				title LIKE CONCAT('%', #{searchKeyword}, '%')
			</when>
			<when test='searchType == 1'>
				author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%'))
			</when>
		</choose>
	</select>
	
	<!-- 게시글 댓글 개수 증가 -->
	<update id="addCommentCnt" parameterType="map">
		UPDATE
		<choose>
			<when test="replyYn == n">
				t_board
			</when>
			<otherwise>
				t_board_reply
			</otherwise>
		</choose> 
		SET commentcnt = commentcnt+1 WHERE seq = #{boardseq}
	</update>
	
	<!-- 게시글 댓글 개수 감소 -->
	<update id="reduceCommentCnt" parameterType="map">
		UPDATE
		<choose>
			<when test="replyyn eq 'n'">
				t_board
			</when>
			<when test="replyyn eq 'y'">
				t_board_reply
			</when>
		</choose>
		SET commentcnt = (commentcnt -
		<choose>
			<when test="pid > 0">
				1
			</when>
			<otherwise>
				(SELECT COUNT(seq)+1 FROM t_comment_reply WHERE pid = #{seq})
			</otherwise>
		</choose>
		) WHERE seq = #{boardseq}
	</update>

	<!-- 게시글 조회 수 증가 -->
	<update id="addViewCnt" parameterType="Integer">
		UPDATE t_board SET viewcnt = viewcnt+1 WHERE seq = #{seq}
	</update>
	
	<!-- 게시글 시퀀스 리스트 -->
	<select id="getSeqList" parameterType="map" resultType="Integer">
		SELECT seq FROM t_board WHERE category LIKE #{category} AND
		<choose>
			<when test="searchType == 0">
				title LIKE CONCAT('%', #{searchKeyword}, '%')	
			</when>
			<when test="searchType == 1">
				author IN (SELECT id FROM t_member WHERE nickname LIKE CONCAT('%', #{searchKeyword}, '%'))
			</when>
		</choose>
		order by regdate desc
	</select>
</mapper>