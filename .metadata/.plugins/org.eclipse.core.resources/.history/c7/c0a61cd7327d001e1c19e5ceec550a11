package com.dialoguespace.demo;

import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class ConnectionTest {
	
	public static void main(String[] args) throws Exception {
		/*
		// 암호화
		//// KeyPairGenerator 인스턴스 생성(RSA 알고리즘)
		KeyPairGenerator generator = KeyPairGenerator.getInstance("RSA");
		//// key size 지정
		generator.initialize(2048);
		//// KeyPair 인스턴스 생성
		KeyPair keyPair = generator.genKeyPair();
		//// 공개키, 개인키 생성
		PublicKey publicKey = keyPair.getPublic();
		PrivateKey privateKey = keyPair.getPrivate();
		//// 개인키 세션에 개인키를 저장
		session.setAttribute("__rsaPrivateKey__", privateKey);
		//// KeyFactory 인스턴스 생성(RSA 알고리즘)
		KeyFactory keyFactory = KeyFactory.getInstance("RSA");
		//// RSAPublicKeySpec 인스턴스 생성. 공개키를 문자열로 변환하여 JavaScript RSA 라이브러리에 넘겨주기.
		RSAPublicKeySpec publicSpec = keyFactory.getKeySpec(publicKey, RSAPublicKeySpec.class);
		//// JavaScript RSA 라이브러리에 넘겨줄 공개키 modulus, exponent 생성
		String publicKeyModulus = publicSpec.getModulus().toString(16);
		String publicKeyExponent = publicSpec.getPublicExponent().toString(16);
		
	
		*/
		//String text = "801212-1524234";
		
		/*
		 * int n = text.lastIndexOf("-"); text = text.substring(0,n+1) +
		 * text.substring(n+1).replaceAll(".","*");
		 * 
		 * System.out.println(text);
		 */
		
		/*
		 * String email = "abc@naver.com";
		 * 
		 * String[] arr = email.split("@"); email = arr[0].replaceAll(".{3}$","***") +
		 * "@" + arr[1];
		 * 
		 * System.out.println(email);
		 */
		
		/*
		 * String phone = 01012345678 int n = phone.lastIndexOf("-"); phone =
		 * phone.substring(0,n-2) + "**-*" + text.substring(n+2);
		 */
		
		
/*
		
		String str = "<p>"
				+ "<img style=\"width: 640px;\" src=\"/resources/summerNoteImg/1dd21104-aa20-4ed0-9889-dc56dcfe8a56.jpg\">"
				+ "<img style=\"width: 427px;\" src=\"/resources/summerNoteImg/292a0437-9eee-45a9-b18b-74f6738eab1e.jpg\">"
				+ "<img style=\"width: 640px;\" src=\"/resources/summerNoteImg/5972aa2a-0ccf-46c9-a203-9c6dc42f3f05.jpg\"><br></p>";
		// <img > 가 들어간 개수
		
		String rs[] = str.split(">");
		for(int i = 0; i < rs.length; i++) {
			System.out.println(rs[i]);
		}
		
		*/
		
//		String path = "D:\\workspace_demo\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\Demo\\resources/summerNoteImg/07092b7e-6877-4f5a-a81e-8b7ed2ccc11d";
//		File f = new File(path);
//		f.delete();
		
//		Set<String> set = new HashSet<>();
//		set.add("하늘보리");
//		set.add("더하다보리차");
//		set.add("웰치스");
//		set.add("비타500");
		
		List<String> list = new ArrayList<>();
		list.add("A");
		list.add("B");
		list.add("C");
		list.add("D");
		list.add("E");
		list.add("F");
		System.out.println("list 초기화 : " + list);
		
		System.out.println("===== ListIterator =====");
		// 리스트에 '+' 붙이기
		ListIterator<String> listIterator = list.listIterator();
		while(listIterator.hasNext()) {
			Object element = listIterator.next();
			listIterator.set(element + "+");
		}
		System.out.println(listIterator);
		
		
		
		System.out.println("===== 역순 출력 결과 =====");
		while(listIterator.hasPrevious()) {
			Object element = listIterator.previous();
			System.out.println(element + " ");
		}
		System.out.println(listIterator);
		
		
		//List 데이터를 ListIterator로 받을 수 있다.
//		Iterator<String> iterator = set.iterator();
//		
//		while(iterator.hasNext()) {
//			String str = iterator.next();
//			System.out.println(str);
//		}
//		
//		for(String str : set) {
//			System.out.println(str);
//		}
		
		
		
		
		

		

	}	// main end
	
	
	// 임시 폴더 생성 
	public static void createTempFolder(String tempPath) {
		
		File folder = new File(tempPath);
		try {
			if(folder.exists()) {
				System.out.println("demo 임시 폴더가 존재합니다. 하위 파일을 삭제합니다.");
				delFiles(folder);
			} else {
				folder.mkdir();
				System.out.println("demo 임시 폴더 생성");
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	
	// 하위 파일 삭제
	public static void delFiles(File folder) {
		File[] folder_list = folder.listFiles();
		for(File file : folder_list) {
			file.delete();
			System.out.println(file + " 삭제 완료");
		}
	}
	
	// fileno로 특정 파일 삭제(물리적)
	public static void delFilePhs(String filePath) throws Exception {
		File f = new File(filePath);
		f.delete();
		System.out.println(filePath + " 삭제 완료");
	}

}
