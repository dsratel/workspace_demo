package com.dialoguespace.demo;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

public class ConnectionTest {
	
	public static void main(String[] args) throws Exception {
		
		System.out.println("abcde".getBytes());
		
		byte abyte0[] = "abcde".getBytes();
		int i = abyte0.length;
		Map map1 = new HashMap();
		
	        int j = (i * 4 + 2) / 3;
	        int k = ((i + 2) / 3) * 4;
	        char ac[] = new char[k];
	        int l = 0;
	        for(int i1 = 0; l < i; i1++)
	        {
	            int j1 = abyte0[l++] & 0xff;
	            int k1 = l >= i ? 0 : abyte0[l++] & 0xff;
	            int l1 = l >= i ? 0 : abyte0[l++] & 0xff;
	            int i2 = j1 >>> 2;
	            int j2 = (j1 & 3) << 4 | k1 >>> 4;
	            int k2 = (k1 & 0xf) << 2 | l1 >>> 6;
	            int l2 = l1 & 0x3f;
	            ac[i1++] = map1[i2];
	            ac[i1++] = map1[j2];
	            ac[i1] = i1 >= j ? '=' : map1[k2];
	            i1++;
	            ac[i1] = i1 >= j ? '=' : map1[l2];
	        }

	  System.out.println(ac);
		
			


		

		

	}	// main end
	
	
	
	
	// 임시 폴더 생성 
	public static void createTempFolder(String tempPath) {
		
		File folder = new File(tempPath);
		try {
			if(folder.exists()) {
				System.out.println("demo 임시 폴더가 존재합니다. 하위 파일을 삭제합니다.");
				delFiles(folder);
			} else {
				folder.mkdir();
				System.out.println("demo 임시 폴더 생성");
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	
	// 하위 파일 삭제
	public static void delFiles(File folder) {
		File[] folder_list = folder.listFiles();
		for(File file : folder_list) {
			file.delete();
			System.out.println(file + " 삭제 완료");
		}
	}
	
	// fileno로 특정 파일 삭제(물리적)
	public static void delFilePhs(String filePath) throws Exception {
		File f = new File(filePath);
		f.delete();
		System.out.println(filePath + " 삭제 완료");
	}
	
}
